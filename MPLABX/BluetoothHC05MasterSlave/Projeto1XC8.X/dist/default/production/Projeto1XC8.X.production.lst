

Microchip Technology PIC18 LITE Macro Assembler V1.31 build 56723 
                                                                                               Mon Jan 12 16:38:00 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    45  0000                     
    46                           	psect	idataCOMRAM
    47  006736                     __pidataCOMRAM:
    48                           	opt stack 0
    49                           
    50                           ;initializer for _R
    51  006736  0FDF               	dw	4063
    52                           
    53                           ;initializer for _Fe
    54  006738  20                 	db	32
    55                           
    56                           ;initializer for _G
    57  006739  20                 	db	32
    58                           
    59                           ;initializer for _REG
    60  00673A  0F                 	db	15
    61                           
    62                           ;initializer for _REGad
    63  00673B  DF                 	db	223
    64                           
    65                           ;initializer for _e
    66  00673C  20                 	db	32
    67                           
    68                           ;initializer for _po
    69  00673D  20                 	db	32
    70                           
    71                           ;initializer for _rr
    72  00673E  20                 	db	32
    73                           
    74                           ;initializer for _ru
    75  00673F  20                 	db	32
    76                           
    77                           	psect	smallconst
    78  00101C                     __psmallconst:
    79                           	opt stack 0
    80  00101C  00                 	db	0
    81  00101D                     _icgs:
    82                           	opt stack 0
    83  00101D  82                 	db	130
    84  00101E  A8                 	db	168
    85  00101F  56                 	db	86
    86  001020  AA                 	db	170
    87  001021  82                 	db	130
    88  001022  A4                 	db	164
    89  001023  A8                 	db	168
    90  001024  7A                 	db	122
    91  001025  62                 	db	98
    92  001026  72                 	db	114
    93  001027  64                 	db	100
    94  001028  60                 	db	96
    95  001029  60                 	db	96
    96  00102A  58                 	db	88
    97  00102B  60                 	db	96
    98  00102C  58                 	db	88
    99  00102D  60                 	db	96
   100  00102E  1A                 	db	26
   101  00102F  14                 	db	20
   102  001030  00                 	db	0
   103  001031                     __end_of_icgs:
   104                           	opt stack 0
   105  001031                     _icms:
   106                           	opt stack 0
   107  001031  82                 	db	130
   108  001032  A8                 	db	168
   109  001033  56                 	db	86
   110  001034  9C                 	db	156
   111  001035  82                 	db	130
   112  001036  9A                 	db	154
   113  001037  8A                 	db	138
   114  001038  7A                 	db	122
   115  001039  A6                 	db	166
   116  00103A  C2                 	db	194
   117  00103B  DC                 	db	220
   118  00103C  AA                 	db	170
   119  00103D  A6                 	db	166
   120  00103E  84                 	db	132
   121  00103F  62                 	db	98
   122  001040  6A                 	db	106
   123  001041  1A                 	db	26
   124  001042  14                 	db	20
   125  001043  00                 	db	0
   126  001044                     __end_of_icms:
   127                           	opt stack 0
   128  001044                     _icn:
   129                           	opt stack 0
   130  001044  82                 	db	130
   131  001045  A8                 	db	168
   132  001046  56                 	db	86
   133  001047  9C                 	db	156
   134  001048  82                 	db	130
   135  001049  9A                 	db	154
   136  00104A  8A                 	db	138
   137  00104B  90                 	db	144
   138  00104C  9A                 	db	154
   139  00104D  BE                 	db	190
   140  00104E  A6                 	db	166
   141  00104F  C2                 	db	194
   142  001050  DC                 	db	220
   143  001051  AA                 	db	170
   144  001052  A6                 	db	166
   145  001053  84                 	db	132
   146  001054  00                 	db	0
   147  001055                     __end_of_icn:
   148                           	opt stack 0
   149  001055                     _icm:
   150                           	opt stack 0
   151  001055  82                 	db	130
   152  001056  A8                 	db	168
   153  001057  56                 	db	86
   154  001058  9C                 	db	156
   155  001059  82                 	db	130
   156  00105A  9A                 	db	154
   157  00105B  8A                 	db	138
   158  00105C  A6                 	db	166
   159  00105D  C2                 	db	194
   160  00105E  DC                 	db	220
   161  00105F  AA                 	db	170
   162  001060  A6                 	db	166
   163  001061  84                 	db	132
   164  001062  62                 	db	98
   165  001063  00                 	db	0
   166  001064                     __end_of_icm:
   167                           	opt stack 0
   168  001064                     _icrs:
   169                           	opt stack 0
   170  001064  82                 	db	130
   171  001065  A8                 	db	168
   172  001066  56                 	db	86
   173  001067  A4                 	db	164
   174  001068  8A                 	db	138
   175  001069  A6                 	db	166
   176  00106A  8A                 	db	138
   177  00106B  A8                 	db	168
   178  00106C  1A                 	db	26
   179  00106D  14                 	db	20
   180  00106E  00                 	db	0
   181  00106F                     __end_of_icrs:
   182                           	opt stack 0
   183  00106F                     _icb:
   184                           	opt stack 0
   185  00106F  82                 	db	130
   186  001070  A8                 	db	168
   187  001071  56                 	db	86
   188  001072  84                 	db	132
   189  001073  82                 	db	130
   190  001074  AA                 	db	170
   191  001075  88                 	db	136
   192  001076  6A                 	db	106
   193  001077  00                 	db	0
   194  001078                     __end_of_icb:
   195                           	opt stack 0
   196  001078                     _icg:
   197                           	opt stack 0
   198  001078  82                 	db	130
   199  001079  A8                 	db	168
   200  00107A  56                 	db	86
   201  00107B  84                 	db	132
   202  00107C  82                 	db	130
   203  00107D  AA                 	db	170
   204  00107E  88                 	db	136
   205  00107F  6A                 	db	106
   206  001080  00                 	db	0
   207  001081                     __end_of_icg:
   208                           	opt stack 0
   209  001081                     _icr:
   210                           	opt stack 0
   211  001081  82                 	db	130
   212  001082  A8                 	db	168
   213  001083  56                 	db	86
   214  001084  A4                 	db	164
   215  001085  8A                 	db	138
   216  001086  A6                 	db	166
   217  001087  8A                 	db	138
   218  001088  A8                 	db	168
   219  001089  00                 	db	0
   220  00108A                     __end_of_icr:
   221                           	opt stack 0
   222  00108A                     _atc:
   223                           	opt stack 0
   224  00108A  82                 	db	130
   225  00108B  A8                 	db	168
   226  00108C  1A                 	db	26
   227  00108D  14                 	db	20
   228  00108E  00                 	db	0
   229  00108F                     __end_of_atc:
   230                           	opt stack 0
   231  00108F                     _icp:
   232                           	opt stack 0
   233  00108F  82                 	db	130
   234  001090  A8                 	db	168
   235  001091  00                 	db	0
   236  001092                     __end_of_icp:
   237                           	opt stack 0
   238  0000                     _ADRES	set	4035
   239  0000                     _ADCON0	set	4034
   240  0000                     _ADCON0bits	set	4034
   241  0000                     _ADCON1	set	4033
   242  0000                     _ADCON2	set	4032
   243  0000                     _ADCON2bits	set	4032
   244  0000                     _ADRESH	set	4036
   245  0000                     _BAUDCON	set	4024
   246  0000                     _BAUDCONbits	set	4024
   247  0000                     _CCP1CON	set	4029
   248  0000                     _CCP2CON	set	4026
   249  0000                     _CCPR1L	set	4030
   250  0000                     _CCPR2L	set	4027
   251  0000                     _EEADR	set	4009
   252  0000                     _EECON1	set	4006
   253  0000                     _EECON1bits	set	4006
   254  0000                     _EECON2	set	4007
   255  0000                     _EEDATA	set	4008
   256  0000                     _INTCON2bits	set	4081
   257  0000                     _INTCON3bits	set	4080
   258  0000                     _INTCONbits	set	4082
   259  0000                     _IPR1bits	set	3999
   260  0000                     _LATA	set	3977
   261  0000                     _LATB	set	3978
   262  0000                     _LATC	set	3979
   263  0000                     _PIE1bits	set	3997
   264  0000                     _PIE2bits	set	4000
   265  0000                     _PIR1bits	set	3998
   266  0000                     _PORTAbits	set	3968
   267  0000                     _PORTBbits	set	3969
   268  0000                     _PORTCbits	set	3970
   269  0000                     _PORTDbits	set	3971
   270  0000                     _PORTEbits	set	3972
   271  0000                     _PR2	set	4043
   272  0000                     _RCONbits	set	4048
   273  0000                     _RCREG	set	4014
   274  0000                     _RCSTA	set	4011
   275  0000                     _RCSTAbits	set	4011
   276  0000                     _SPBRG	set	4015
   277  0000                     _SPBRGH	set	4016
   278  0000                     _T0CON	set	4053
   279  0000                     _T0CONbits	set	4053
   280  0000                     _T1CONbits	set	4045
   281  0000                     _T2CON	set	4042
   282  0000                     _T2CONbits	set	4042
   283  0000                     _T3CONbits	set	4017
   284  0000                     _TMR0H	set	4055
   285  0000                     _TMR0L	set	4054
   286  0000                     _TMR1H	set	4047
   287  0000                     _TMR1L	set	4046
   288  0000                     _TMR3H	set	4019
   289  0000                     _TMR3L	set	4018
   290  0000                     _TRISA	set	3986
   291  0000                     _TRISAbits	set	3986
   292  0000                     _TRISB	set	3987
   293  0000                     _TRISBbits	set	3987
   294  0000                     _TRISC	set	3988
   295  0000                     _TRISCbits	set	3988
   296  0000                     _TRISDbits	set	3989
   297  0000                     _TXREG	set	4013
   298  0000                     _TXSTA	set	4012
   299  0000                     _TXSTAbits	set	4012
   300  0000                     _WDTCONbits	set	4049
   301  001092  00                 	db	0	; dummy byte at the end
   302  0000                     
   303                           ; #config settings
   304                           
   305                           	psect	cinit
   306  0068DA                     __pcinit:
   307                           	opt stack 0
   308  0068DA                     start_initialization:
   309                           	opt stack 0
   310  0068DA                     __initialization:
   311                           	opt stack 0
   312                           
   313                           ; Clear objects allocated to BANK0 (76 bytes)
   314  0068DA  EE00  F060         	lfsr	0,__pbssBANK0
   315  0068DE  0E4C               	movlw	76
   316  0068E0                     clear_0:
   317  0068E0  6AEE               	clrf	postinc0,c
   318  0068E2  06E8               	decf	wreg,f,c
   319  0068E4  E1FD               	bnz	clear_0
   320                           
   321                           ; Clear objects allocated to COMRAM (33 bytes)
   322  0068E6  EE00  F001         	lfsr	0,__pbssCOMRAM
   323  0068EA  0E21               	movlw	33
   324  0068EC                     clear_1:
   325  0068EC  6AEE               	clrf	postinc0,c
   326  0068EE  06E8               	decf	wreg,f,c
   327  0068F0  E1FD               	bnz	clear_1
   328                           
   329                           ; Initialize objects allocated to COMRAM (10 bytes)
   330                           ; load TBLPTR registers with __pidataCOMRAM
   331  0068F2  0E36               	movlw	low __pidataCOMRAM
   332  0068F4  6EF6               	movwf	tblptrl,c
   333  0068F6  0E67               	movlw	high __pidataCOMRAM
   334  0068F8  6EF7               	movwf	tblptrh,c
   335  0068FA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   336  0068FC  6EF8               	movwf	tblptru,c
   337  0068FE  EE00  F042         	lfsr	0,__pdataCOMRAM
   338  006902  EE10 F00A          	lfsr	1,10
   339  006906                     copy_data0:
   340  006906  0009               	tblrd		*+
   341  006908  CFF5 FFEE          	movff	tablat,postinc0
   342  00690C  50E5               	movf	postdec1,w,c
   343  00690E  50E1               	movf	fsr1l,w,c
   344  006910  E1FA               	bnz	copy_data0
   345  006912                     end_of_initialization:
   346                           	opt stack 0
   347  006912                     __end_of__initialization:
   348                           	opt stack 0
   349  006912  0E00               	movlw	low (__Lmediumconst shr (0+16))
   350  006914  6EF8               	movwf	tblptru,c
   351  006916  0100               	movlb	0
   352  006918  EF4F  F03A         	goto	_main	;jump to C main() function
   353                           tblptru	equ	0xFF8
   354                           tblptrh	equ	0xFF7
   355                           tblptrl	equ	0xFF6
   356                           tablat	equ	0xFF5
   357                           postinc0	equ	0xFEE
   358                           wreg	equ	0xFE8
   359                           postdec1	equ	0xFE5
   360                           fsr1l	equ	0xFE1
   361                           
   362                           	psect	bssCOMRAM
   363  000001                     __pbssCOMRAM:
   364                           	opt stack 0
   365  000001                     _c:
   366                           	opt stack 0
   367  000001                     	ds	2
   368  000003                     _chegou:
   369                           	opt stack 0
   370  000003                     	ds	2
   371  000005                     _flag:
   372                           	opt stack 0
   373  000005                     	ds	2
   374  000007                     _flagA4:
   375                           	opt stack 0
   376  000007                     	ds	2
   377  000009                     _flagA5:
   378                           	opt stack 0
   379  000009                     	ds	2
   380  00000B                     _flagb:
   381                           	opt stack 0
   382  00000B                     	ds	2
   383  00000D                     _flagc:
   384                           	opt stack 0
   385  00000D                     	ds	2
   386  00000F                     _i:
   387                           	opt stack 0
   388  00000F                     	ds	2
   389  000011                     _pisca:
   390                           	opt stack 0
   391  000011                     	ds	2
   392  000013                     _w:
   393                           	opt stack 0
   394  000013                     	ds	2
   395  000015                     _USART_Status:
   396                           	opt stack 0
   397  000015                     	ds	1
   398  000016                     _c1:
   399                           	opt stack 0
   400  000016                     	ds	1
   401  000017                     _endereco:
   402                           	opt stack 0
   403  000017                     	ds	1
   404  000018                     _ind:
   405                           	opt stack 0
   406  000018                     	ds	1
   407  000019                     _k:
   408                           	opt stack 0
   409  000019                     	ds	1
   410  00001A                     _m:
   411                           	opt stack 0
   412  00001A                     	ds	1
   413  00001B                     _n:
   414                           	opt stack 0
   415  00001B                     	ds	1
   416  00001C                     _numquant:
   417                           	opt stack 0
   418  00001C                     	ds	1
   419  00001D                     _temp:
   420                           	opt stack 0
   421  00001D                     	ds	1
   422  00001E                     _valor:
   423                           	opt stack 0
   424  00001E                     	ds	1
   425  00001F                     _valorbcd:
   426                           	opt stack 0
   427  00001F                     	ds	1
   428  000020                     _y:
   429                           	opt stack 0
   430  000020                     	ds	1
   431  000021                     _z:
   432                           	opt stack 0
   433  000021                     	ds	1
   434                           tblptru	equ	0xFF8
   435                           tblptrh	equ	0xFF7
   436                           tblptrl	equ	0xFF6
   437                           tablat	equ	0xFF5
   438                           postinc0	equ	0xFEE
   439                           wreg	equ	0xFE8
   440                           postdec1	equ	0xFE5
   441                           fsr1l	equ	0xFE1
   442                           
   443                           	psect	dataCOMRAM
   444  000042                     __pdataCOMRAM:
   445                           	opt stack 0
   446  000042                     _R:
   447                           	opt stack 0
   448  000042                     	ds	2
   449  000044                     _Fe:
   450                           	opt stack 0
   451  000044                     	ds	1
   452  000045                     _G:
   453                           	opt stack 0
   454  000045                     	ds	1
   455  000046                     _REG:
   456                           	opt stack 0
   457  000046                     	ds	1
   458  000047                     _REGad:
   459                           	opt stack 0
   460  000047                     	ds	1
   461  000048                     _e:
   462                           	opt stack 0
   463  000048                     	ds	1
   464  000049                     _po:
   465                           	opt stack 0
   466  000049                     	ds	1
   467  00004A                     _rr:
   468                           	opt stack 0
   469  00004A                     	ds	1
   470  00004B                     _ru:
   471                           	opt stack 0
   472  00004B                     	ds	1
   473                           tblptru	equ	0xFF8
   474                           tblptrh	equ	0xFF7
   475                           tblptrl	equ	0xFF6
   476                           tablat	equ	0xFF5
   477                           postinc0	equ	0xFEE
   478                           wreg	equ	0xFE8
   479                           postdec1	equ	0xFE5
   480                           fsr1l	equ	0xFE1
   481                           
   482                           	psect	bssBANK0
   483  000060                     __pbssBANK0:
   484                           	opt stack 0
   485  000060                     _comand:
   486                           	opt stack 0
   487  000060                     	ds	30
   488  00007E                     _comando:
   489                           	opt stack 0
   490  00007E                     	ds	30
   491  00009C                     _resultado:
   492                           	opt stack 0
   493  00009C                     	ds	4
   494  0000A0                     _tensao_lida16:
   495                           	opt stack 0
   496  0000A0                     	ds	4
   497  0000A4                     _flagBD:
   498                           	opt stack 0
   499  0000A4                     	ds	2
   500  0000A6                     _flagstart:
   501                           	opt stack 0
   502  0000A6                     	ds	2
   503  0000A8                     _time:
   504                           	opt stack 0
   505  0000A8                     	ds	2
   506  0000AA                     _vorbei:
   507                           	opt stack 0
   508  0000AA                     	ds	2
   509                           tblptru	equ	0xFF8
   510                           tblptrh	equ	0xFF7
   511                           tblptrl	equ	0xFF6
   512                           tablat	equ	0xFF5
   513                           postinc0	equ	0xFEE
   514                           wreg	equ	0xFE8
   515                           postdec1	equ	0xFE5
   516                           fsr1l	equ	0xFE1
   517                           
   518                           	psect	cstackBANK0
   519  0000AC                     __pcstackBANK0:
   520                           	opt stack 0
   521  0000AC                     ___lwdiv@counter:
   522                           	opt stack 0
   523  0000AC                     ___lldiv@quotient:
   524                           	opt stack 0
   525                           
   526                           ; 4 bytes @ 0x0
   527  0000AC                     	ds	1
   528  0000AD                     ___lwdiv@quotient:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x1
   532  0000AD                     	ds	3
   533  0000B0                     ___lldiv@counter:
   534                           	opt stack 0
   535                           
   536                           ; 1 bytes @ 0x4
   537  0000B0                     	ds	1
   538  0000B1                     taxa_serial@taxa:
   539                           	opt stack 0
   540                           
   541                           ; 4 bytes @ 0x5
   542  0000B1                     	ds	4
   543  0000B5                     ??_taxa_serial:
   544                           
   545                           ; 0 bytes @ 0x9
   546  0000B5                     	ds	8
   547  0000BD                     taxa_serial@baud_sanusb:
   548                           	opt stack 0
   549                           
   550                           ; 4 bytes @ 0x11
   551  0000BD                     	ds	4
   552  0000C1                     ??_main:
   553                           
   554                           ; 0 bytes @ 0x15
   555  0000C1                     	ds	1
   556                           tblptru	equ	0xFF8
   557                           tblptrh	equ	0xFF7
   558                           tblptrl	equ	0xFF6
   559                           tablat	equ	0xFF5
   560                           postinc0	equ	0xFEE
   561                           wreg	equ	0xFE8
   562                           postdec1	equ	0xFE5
   563                           fsr1l	equ	0xFE1
   564                           
   565                           	psect	cstackCOMRAM
   566  000022                     __pcstackCOMRAM:
   567                           	opt stack 0
   568  000022                     ReadUSART@data:
   569                           	opt stack 0
   570  000022                     i2nivel_alto@pino:
   571                           	opt stack 0
   572  000022                     i2nivel_baixo@pino:
   573                           	opt stack 0
   574  000022                     i2inverte_saida@pino:
   575                           	opt stack 0
   576                           
   577                           ; 2 bytes @ 0x0
   578  000022                     	ds	2
   579  000024                     ??i2_nivel_alto:
   580  000024                     ??i2_nivel_baixo:
   581  000024                     ??i2_inverte_saida:
   582                           
   583                           ; 0 bytes @ 0x2
   584  000024                     	ds	2
   585  000026                     ??_interrupcao:
   586                           
   587                           ; 0 bytes @ 0x4
   588  000026                     	ds	16
   589  000036                     ??_sputc:
   590  000036                     ?___awmod:
   591                           	opt stack 0
   592  000036                     ?___wmul:
   593                           	opt stack 0
   594  000036                     ?___lldiv:
   595                           	opt stack 0
   596  000036                     escreve_eeprom@dado:
   597                           	opt stack 0
   598  000036                     le_eeprom@endereco:
   599                           	opt stack 0
   600  000036                     swputc@c:
   601                           	opt stack 0
   602  000036                     Delay1KTCYx@unit:
   603                           	opt stack 0
   604  000036                     habilita_interrupcao@tipo:
   605                           	opt stack 0
   606  000036                     nivel_alto@pino:
   607                           	opt stack 0
   608  000036                     nivel_baixo@pino:
   609                           	opt stack 0
   610  000036                     inverte_saida@pino:
   611                           	opt stack 0
   612  000036                     ___awmod@dividend:
   613                           	opt stack 0
   614  000036                     ___wmul@multiplier:
   615                           	opt stack 0
   616  000036                     ___lldiv@dividend:
   617                           	opt stack 0
   618                           
   619                           ; 4 bytes @ 0x14
   620  000036                     	ds	1
   621  000037                     escreve_eeprom@endereco:
   622                           	opt stack 0
   623                           
   624                           ; 1 bytes @ 0x15
   625  000037                     	ds	1
   626  000038                     ??_habilita_interrupcao:
   627  000038                     ??_nivel_alto:
   628  000038                     ??_nivel_baixo:
   629  000038                     ??_inverte_saida:
   630  000038                     sputc@c:
   631                           	opt stack 0
   632  000038                     ___awmod@divisor:
   633                           	opt stack 0
   634  000038                     ___wmul@multiplicand:
   635                           	opt stack 0
   636                           
   637                           ; 2 bytes @ 0x16
   638  000038                     	ds	1
   639  000039                     sendr@st:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0x17
   643  000039                     	ds	1
   644  00003A                     ??___awmod:
   645  00003A                     ___wmul@product:
   646                           	opt stack 0
   647  00003A                     ___lldiv@divisor:
   648                           	opt stack 0
   649                           
   650                           ; 4 bytes @ 0x18
   651  00003A                     	ds	1
   652  00003B                     ??_sendr:
   653  00003B                     ___awmod@counter:
   654                           	opt stack 0
   655                           
   656                           ; 1 bytes @ 0x19
   657  00003B                     	ds	1
   658  00003C                     ___awmod@sign:
   659                           	opt stack 0
   660  00003C                     tempo_ms@i:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x1A
   664  00003C                     	ds	1
   665  00003D                     ?___lwdiv:
   666                           	opt stack 0
   667  00003D                     ___lwdiv@dividend:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0x1B
   671  00003D                     	ds	1
   672  00003E                     ??___lldiv:
   673  00003E                     tempo_ms@k:
   674                           	opt stack 0
   675                           
   676                           ; 2 bytes @ 0x1C
   677  00003E                     	ds	1
   678  00003F                     ___lwdiv@divisor:
   679                           	opt stack 0
   680                           
   681                           ; 2 bytes @ 0x1D
   682  00003F                     	ds	1
   683  000040                     ??_bt_ini:
   684                           
   685                           ; 0 bytes @ 0x1E
   686  000040                     	ds	1
   687  000041                     ??___lwdiv:
   688                           
   689                           ; 0 bytes @ 0x1F
   690  000041                     	ds	1
   691  000042                     tblptru	equ	0xFF8
   692                           tblptrh	equ	0xFF7
   693                           tblptrl	equ	0xFF6
   694                           tablat	equ	0xFF5
   695                           postinc0	equ	0xFEE
   696                           wreg	equ	0xFE8
   697                           postdec1	equ	0xFE5
   698                           fsr1l	equ	0xFE1
   699                           
   700                           ; 0 bytes @ 0x20
   701 ;;
   702 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   703 ;;
   704 ;; *************** function _main *****************
   705 ;; Defined at:
   706 ;;		line 63 in file "BT_HC05.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;		None
   709 ;; Auto vars:     Size  Location     Type
   710 ;;		None
   711 ;; Return value:  Size  Location     Type
   712 ;;		None               void
   713 ;; Registers used:
   714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   720 ;;      Params:         0       0       0       0       0       0       0       0       0
   721 ;;      Locals:         0       0       0       0       0       0       0       0       0
   722 ;;      Temps:          0       1       0       0       0       0       0       0       0
   723 ;;      Totals:         0       1       0       0       0       0       0       0       0
   724 ;;Total ram usage:        1 bytes
   725 ;; Hardware stack levels required when called:    8
   726 ;; This function calls:
   727 ;;		_bt_ini
   728 ;;		_clock_int_48MHz
   729 ;;		_escreve_eeprom
   730 ;;		_habilita_interrupcao
   731 ;;		_inverte_saida
   732 ;;		_le_eeprom
   733 ;;		_modoAttention
   734 ;;		_modoNormal
   735 ;;		_sputc
   736 ;;		_swputc
   737 ;;		_taxa_serial
   738 ;;		_tempo_ms
   739 ;; This function is called by:
   740 ;;		Startup code after reset
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           	psect	text0
   745  00749E                     __ptext0:
   746                           	opt stack 0
   747  00749E                     _main:
   748                           	opt stack 23
   749                           
   750                           ;BT_HC05.c: 65: clock_int_48MHz();
   751                           
   752                           ;incstack = 0
   753  00749E  ECB2  F034         	call	_clock_int_48MHz	;wreg free
   754                           
   755                           ;BT_HC05.c: 66: habilita_interrupcao(0x9D20);
   756  0074A2  0E9D               	movlw	157
   757  0074A4  6E37               	movwf	habilita_interrupcao@tipo+1,c
   758  0074A6  0E20               	movlw	32
   759  0074A8  6E36               	movwf	habilita_interrupcao@tipo,c
   760  0074AA  EC3C  F036         	call	_habilita_interrupcao	;wreg free
   761                           
   762                           ;BT_HC05.c: 67: taxa_serial(9600);
   763  0074AE  0E80               	movlw	128
   764  0074B0  0100               	movlb	0	; () banked
   765  0074B2  0100               	movlb	0	; () banked
   766  0074B4  6FB1               	movwf	taxa_serial@taxa& (0+255),b
   767  0074B6  0E25               	movlw	37
   768  0074B8  0100               	movlb	0	; () banked
   769  0074BA  6FB2               	movwf	(taxa_serial@taxa+1)& (0+255),b
   770  0074BC  0E00               	movlw	0
   771  0074BE  0100               	movlb	0	; () banked
   772  0074C0  6FB3               	movwf	(taxa_serial@taxa+2)& (0+255),b
   773  0074C2  0E00               	movlw	0
   774  0074C4  0100               	movlb	0	; () banked
   775  0074C6  6FB4               	movwf	(taxa_serial@taxa+3)& (0+255),b
   776  0074C8  ECEC  F035         	call	_taxa_serial	;wreg free
   777                           
   778                           ;BT_HC05.c: 68: bt_ini();
   779  0074CC  ECC9  F03C         	call	_bt_ini	;wreg free
   780                           
   781                           ;BT_HC05.c: 70: T0CON =0B11000001;
   782  0074D0  0EC1               	movlw	193
   783  0074D2  6ED5               	movwf	4053,c	;volatile
   784                           
   785                           ;BT_HC05.c: 71: TMR0L = 16;
   786  0074D4  0E10               	movlw	16
   787  0074D6  6ED6               	movwf	4054,c	;volatile
   788                           
   789                           ;BT_HC05.c: 72: RCONbits.IPEN = 1;
   790  0074D8  8ED0               	bsf	4048,7,c	;volatile
   791                           
   792                           ;BT_HC05.c: 73: INTCONbits.GIEH = 1;
   793  0074DA  8EF2               	bsf	intcon,7,c	;volatile
   794                           
   795                           ;BT_HC05.c: 74: INTCONbits.TMR0IE = 1;
   796  0074DC  8AF2               	bsf	intcon,5,c	;volatile
   797                           
   798                           ;BT_HC05.c: 76: for(k=0;k<=25;k++){comando[k]=32;}
   799  0074DE  0100               	movlb	0	; () banked
   800  0074E0  6FC1               	movwf	??_main& (0+255),b
   801  0074E2  0E00               	movlw	0
   802  0074E4  6E19               	movwf	_k,c
   803  0074E6  0100               	movlb	0	; () banked
   804  0074E8  51C1               	movf	??_main& (0+255),w,b
   805  0074EA  D00D               	goto	L2
   806  0074EC                     l4333:
   807                           
   808                           ; BSR set to: 0
   809  0074EC  5019               	movf	_k,w,c
   810  0074EE  0D01               	mullw	1
   811  0074F0  0100               	movlb	0	; () banked
   812  0074F2  0E7E               	movlw	low _comando
   813  0074F4  24F3               	addwf	prodl,w,c
   814  0074F6  6ED9               	movwf	fsr2l,c
   815  0074F8  0100               	movlb	0	; () banked
   816  0074FA  0E00               	movlw	high _comando
   817  0074FC  20F4               	addwfc	prodh,w,c
   818  0074FE  6EDA               	movwf	fsr2h,c
   819  007500  0E20               	movlw	32
   820  007502  6EDF               	movwf	indf2,c
   821                           
   822                           ; BSR set to: 0
   823  007504  2A19               	incf	_k,f,c
   824  007506                     L2:
   825                           
   826                           ; BSR set to: 0
   827  007506  0E19               	movlw	25
   828  007508  6419               	cpfsgt	_k,c
   829  00750A  D7F0               	goto	l4333
   830  00750C  D012               	goto	l4345
   831  00750E                     l4339:
   832  00750E  0E7C               	movlw	124
   833  007510  6E37               	movwf	inverte_saida@pino+1,c
   834  007512  0E0F               	movlw	15
   835  007514  6E36               	movwf	inverte_saida@pino,c
   836  007516  EC66  F037         	call	_inverte_saida	;wreg free
   837  00751A  0E01               	movlw	1
   838  00751C  6E3D               	movwf	tempo_ms@i+1,c
   839  00751E  0E2C               	movlw	44
   840  007520  6E3C               	movwf	tempo_ms@i,c
   841  007522  EC8E  F034         	call	_tempo_ms	;wreg free
   842  007526  0100               	movlb	0	; () banked
   843  007528  6FC1               	movwf	??_main& (0+255),b
   844  00752A  0E00               	movlw	0
   845  00752C  6E1B               	movwf	_n,c
   846  00752E  0100               	movlb	0	; () banked
   847  007530  51C1               	movf	??_main& (0+255),w,b
   848  007532                     l4345:
   849  007532  0411               	decf	_pisca,w,c
   850  007534  1012               	iorwf	_pisca+1,w,c
   851  007536  B4D8               	btfsc	status,2,c
   852  007538  D7EA               	goto	l4339
   853                           
   854                           ;BT_HC05.c: 82: if (flag==1) {
   855  00753A  0405               	decf	_flag,w,c
   856  00753C  1006               	iorwf	_flag+1,w,c
   857  00753E  A4D8               	btfss	status,2,c
   858  007540  D0AC               	goto	l623
   859                           
   860                           ;BT_HC05.c: 83: flag=0; escreve_eeprom(32, m);
   861  007542  0E00               	movlw	0
   862  007544  6E06               	movwf	_flag+1,c
   863  007546  0E00               	movlw	0
   864  007548  6E05               	movwf	_flag,c
   865  00754A  C01A  F036         	movff	_m,escreve_eeprom@dado
   866  00754E  0E20               	movlw	32
   867  007550  ECCA  F033         	call	_escreve_eeprom
   868                           
   869                           ;BT_HC05.c: 84: for(k=0;k<=m;k++){escreve_eeprom(k, comando[k]);}
   870  007554  0100               	movlb	0	; () banked
   871  007556  6FC1               	movwf	??_main& (0+255),b
   872  007558  0E00               	movlw	0
   873  00755A  6E19               	movwf	_k,c
   874  00755C  0100               	movlb	0	; () banked
   875  00755E  51C1               	movf	??_main& (0+255),w,b
   876  007560  D010               	goto	l4359
   877  007562                     l4355:
   878  007562  5019               	movf	_k,w,c
   879  007564  0D01               	mullw	1
   880  007566  0100               	movlb	0	; () banked
   881  007568  0E7E               	movlw	low _comando
   882  00756A  24F3               	addwf	prodl,w,c
   883  00756C  6ED9               	movwf	fsr2l,c
   884  00756E  0100               	movlb	0	; () banked
   885  007570  0E00               	movlw	high _comando
   886  007572  20F4               	addwfc	prodh,w,c
   887  007574  6EDA               	movwf	fsr2h,c
   888  007576  50DF               	movf	indf2,w,c
   889  007578  6E36               	movwf	escreve_eeprom@dado,c
   890  00757A  5019               	movf	_k,w,c
   891  00757C  ECCA  F033         	call	_escreve_eeprom
   892  007580  2A19               	incf	_k,f,c
   893  007582                     l4359:
   894  007582  5019               	movf	_k,w,c
   895  007584  5C1A               	subwf	_m,w,c
   896  007586  B0D8               	btfsc	status,0,c
   897  007588  D7EC               	goto	l4355
   898                           
   899                           ;BT_HC05.c: 86: if(le_eeprom(34)==0 )
   900  00758A  0E22               	movlw	34
   901  00758C  ECB1  F033         	call	_le_eeprom
   902  007590  0900               	iorlw	0
   903  007592  A4D8               	btfss	status,2,c
   904  007594  D029               	goto	l4387
   905                           
   906                           ;BT_HC05.c: 87: {
   907                           ;BT_HC05.c: 88: modoAttention();
   908  007596  EC4C  F034         	call	_modoAttention	;wreg free
   909                           
   910                           ;BT_HC05.c: 89: m=le_eeprom(32);
   911  00759A  0E20               	movlw	32
   912  00759C  ECB1  F033         	call	_le_eeprom
   913  0075A0  6E1A               	movwf	_m,c
   914                           
   915                           ;BT_HC05.c: 90: for(k=0;k<=m;k++){swputc(le_eeprom(k));}
   916  0075A2  0100               	movlb	0	; () banked
   917  0075A4  6FC1               	movwf	??_main& (0+255),b
   918  0075A6  0E00               	movlw	0
   919  0075A8  6E19               	movwf	_k,c
   920  0075AA  0100               	movlb	0	; () banked
   921  0075AC  51C1               	movf	??_main& (0+255),w,b
   922  0075AE  D006               	goto	l4373
   923  0075B0                     l4369:
   924  0075B0  5019               	movf	_k,w,c
   925  0075B2  ECB1  F033         	call	_le_eeprom
   926  0075B6  ECA0  F033         	call	_swputc
   927  0075BA  2A19               	incf	_k,f,c
   928  0075BC                     l4373:
   929  0075BC  5019               	movf	_k,w,c
   930  0075BE  5C1A               	subwf	_m,w,c
   931  0075C0  B0D8               	btfsc	status,0,c
   932  0075C2  D7F6               	goto	l4369
   933                           
   934                           ;BT_HC05.c: 91: for(k=m+1;k<25;k++){sputc(64);}sputc(26);sputc(20);
   935  0075C4  281A               	incf	_m,w,c
   936  0075C6  6E19               	movwf	_k,c
   937  0075C8  D004               	goto	l4381
   938  0075CA                     l4377:
   939  0075CA  0E40               	movlw	64
   940  0075CC  ECDB  F033         	call	_sputc
   941  0075D0  2A19               	incf	_k,f,c
   942  0075D2                     l4381:
   943  0075D2  0E18               	movlw	24
   944  0075D4  6419               	cpfsgt	_k,c
   945  0075D6  D7F9               	goto	l4377
   946  0075D8  0E1A               	movlw	26
   947  0075DA  ECDB  F033         	call	_sputc
   948  0075DE  0E14               	movlw	20
   949  0075E0  ECDB  F033         	call	_sputc
   950                           
   951                           ;BT_HC05.c: 92: modoNormal();
   952  0075E4  EC35  F035         	call	_modoNormal	;wreg free
   953  0075E8                     l4387:
   954                           
   955                           ;BT_HC05.c: 93: }
   956                           ;BT_HC05.c: 95: if(le_eeprom(33)==0 )
   957  0075E8  0E21               	movlw	33
   958  0075EA  ECB1  F033         	call	_le_eeprom
   959  0075EE  0900               	iorlw	0
   960  0075F0  A4D8               	btfss	status,2,c
   961  0075F2  D02E               	goto	l4413
   962                           
   963                           ;BT_HC05.c: 96: {chegou=0;
   964  0075F4  0E00               	movlw	0
   965  0075F6  6E04               	movwf	_chegou+1,c
   966  0075F8  0E00               	movlw	0
   967  0075FA  6E03               	movwf	_chegou,c
   968                           
   969                           ;BT_HC05.c: 97: for(k=0;k<=m;k++){swputc(le_eeprom(k));}
   970  0075FC  0100               	movlb	0	; () banked
   971  0075FE  6FC1               	movwf	??_main& (0+255),b
   972  007600  0E00               	movlw	0
   973  007602  6E19               	movwf	_k,c
   974  007604  0100               	movlb	0	; () banked
   975  007606  51C1               	movf	??_main& (0+255),w,b
   976  007608  D006               	goto	l4397
   977  00760A                     l4393:
   978  00760A  5019               	movf	_k,w,c
   979  00760C  ECB1  F033         	call	_le_eeprom
   980  007610  ECA0  F033         	call	_swputc
   981  007614  2A19               	incf	_k,f,c
   982  007616                     l4397:
   983  007616  5019               	movf	_k,w,c
   984  007618  5C1A               	subwf	_m,w,c
   985  00761A  B0D8               	btfsc	status,0,c
   986  00761C  D7F6               	goto	l4393
   987                           
   988                           ;BT_HC05.c: 98: for(k=m+1;k<25;k++){sputc(64);}
   989  00761E  281A               	incf	_m,w,c
   990  007620  6E19               	movwf	_k,c
   991  007622  D004               	goto	l4405
   992  007624                     l4401:
   993  007624  0E40               	movlw	64
   994  007626  ECDB  F033         	call	_sputc
   995  00762A  2A19               	incf	_k,f,c
   996  00762C                     l4405:
   997  00762C  0E18               	movlw	24
   998  00762E  6419               	cpfsgt	_k,c
   999  007630  D7F9               	goto	l4401
  1000                           
  1001                           ;BT_HC05.c: 99: tempo_ms(500);sputc(26);tempo_ms(500);
  1002  007632  0E01               	movlw	1
  1003  007634  6E3D               	movwf	tempo_ms@i+1,c
  1004  007636  0EF4               	movlw	244
  1005  007638  6E3C               	movwf	tempo_ms@i,c
  1006  00763A  EC8E  F034         	call	_tempo_ms	;wreg free
  1007  00763E  0E1A               	movlw	26
  1008  007640  ECDB  F033         	call	_sputc
  1009  007644  0E01               	movlw	1
  1010  007646  6E3D               	movwf	tempo_ms@i+1,c
  1011  007648  0EF4               	movlw	244
  1012  00764A  6E3C               	movwf	tempo_ms@i,c
  1013  00764C  EC8E  F034         	call	_tempo_ms	;wreg free
  1014  007650                     l4413:
  1015                           
  1016                           ;BT_HC05.c: 100: }
  1017                           ;BT_HC05.c: 102: for(k=0;k<=m;k++){comando[k]=32;}
  1018  007650  0100               	movlb	0	; () banked
  1019  007652  6FC1               	movwf	??_main& (0+255),b
  1020  007654  0E00               	movlw	0
  1021  007656  6E19               	movwf	_k,c
  1022  007658  0100               	movlb	0	; () banked
  1023  00765A  51C1               	movf	??_main& (0+255),w,b
  1024  00765C  D00D               	goto	l4419
  1025  00765E                     l4415:
  1026                           
  1027                           ; BSR set to: 0
  1028  00765E  5019               	movf	_k,w,c
  1029  007660  0D01               	mullw	1
  1030  007662  0100               	movlb	0	; () banked
  1031  007664  0E7E               	movlw	low _comando
  1032  007666  24F3               	addwf	prodl,w,c
  1033  007668  6ED9               	movwf	fsr2l,c
  1034  00766A  0100               	movlb	0	; () banked
  1035  00766C  0E00               	movlw	high _comando
  1036  00766E  20F4               	addwfc	prodh,w,c
  1037  007670  6EDA               	movwf	fsr2h,c
  1038  007672  0E20               	movlw	32
  1039  007674  6EDF               	movwf	indf2,c
  1040                           
  1041                           ; BSR set to: 0
  1042  007676  2A19               	incf	_k,f,c
  1043  007678                     l4419:
  1044                           
  1045                           ; BSR set to: 0
  1046  007678  5019               	movf	_k,w,c
  1047  00767A  5C1A               	subwf	_m,w,c
  1048  00767C  B0D8               	btfsc	status,0,c
  1049  00767E  D7EF               	goto	l4415
  1050                           
  1051                           ; BSR set to: 0
  1052                           ;BT_HC05.c: 103: n=0;m=0;
  1053                           
  1054                           ; BSR set to: 0
  1055  007680  0100               	movlb	0	; () banked
  1056  007682  6FC1               	movwf	??_main& (0+255),b
  1057  007684  0E00               	movlw	0
  1058  007686  6E1B               	movwf	_n,c
  1059  007688  0100               	movlb	0	; () banked
  1060  00768A  51C1               	movf	??_main& (0+255),w,b
  1061  00768C  0100               	movlb	0	; () banked
  1062  00768E  6FC1               	movwf	??_main& (0+255),b
  1063  007690  0E00               	movlw	0
  1064  007692  6E1A               	movwf	_m,c
  1065  007694  0100               	movlb	0	; () banked
  1066  007696  51C1               	movf	??_main& (0+255),w,b
  1067                           
  1068                           ; BSR set to: 0
  1069                           ;BT_HC05.c: 104: INTCONbits.TMR0IE = 1;
  1070  007698  8AF2               	bsf	intcon,5,c	;volatile
  1071  00769A                     l623:
  1072                           
  1073                           ;BT_HC05.c: 105: }
  1074                           ;BT_HC05.c: 107: n=0;
  1075  00769A  0100               	movlb	0	; () banked
  1076  00769C  6FC1               	movwf	??_main& (0+255),b
  1077  00769E  0E00               	movlw	0
  1078  0076A0  6E1B               	movwf	_n,c
  1079  0076A2  0100               	movlb	0	; () banked
  1080  0076A4  51C1               	movf	??_main& (0+255),w,b
  1081                           
  1082                           ; BSR set to: 0
  1083                           ;BT_HC05.c: 108: tempo_ms(1000);
  1084  0076A6  0E03               	movlw	3
  1085  0076A8  6E3D               	movwf	tempo_ms@i+1,c
  1086  0076AA  0EE8               	movlw	232
  1087  0076AC  6E3C               	movwf	tempo_ms@i,c
  1088  0076AE  EC8E  F034         	call	_tempo_ms	;wreg free
  1089                           
  1090                           ;BT_HC05.c: 109: if(!PORTEbits.RE3){asm(" reset");}
  1091  0076B2  B684               	btfsc	3972,3,c	;volatile
  1092  0076B4  D73E               	goto	l4345
  1093  0076B6  00FF               	reset		;# 
  1094  0076B8  D73C               	goto	l4345
  1095  0076BA                     __end_of_main:
  1096                           	opt stack 0
  1097                           tblptru	equ	0xFF8
  1098                           tblptrh	equ	0xFF7
  1099                           tblptrl	equ	0xFF6
  1100                           tablat	equ	0xFF5
  1101                           prodh	equ	0xFF4
  1102                           prodl	equ	0xFF3
  1103                           intcon	equ	0xFF2
  1104                           postinc0	equ	0xFEE
  1105                           wreg	equ	0xFE8
  1106                           postdec1	equ	0xFE5
  1107                           fsr1l	equ	0xFE1
  1108                           indf2	equ	0xFDF
  1109                           fsr2h	equ	0xFDA
  1110                           fsr2l	equ	0xFD9
  1111                           status	equ	0xFD8
  1112                           
  1113 ;; *************** function _taxa_serial *****************
  1114 ;; Defined at:
  1115 ;;		line 446 in file "SanUSB48X.h"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;  taxa            4    5[BANK0 ] unsigned long 
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;  baud_sanusb     4   17[BANK0 ] unsigned long 
  1120 ;; Return value:  Size  Location     Type
  1121 ;;		None               void
  1122 ;; Registers used:
  1123 ;;		wreg, status,2, status,0, cstack
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1129 ;;      Params:         0       4       0       0       0       0       0       0       0
  1130 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1131 ;;      Temps:          0       8       0       0       0       0       0       0       0
  1132 ;;      Totals:         0      16       0       0       0       0       0       0       0
  1133 ;;Total ram usage:       16 bytes
  1134 ;; Hardware stack levels used:    1
  1135 ;; Hardware stack levels required when called:    3
  1136 ;; This function calls:
  1137 ;;		___lldiv
  1138 ;; This function is called by:
  1139 ;;		_main
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           	psect	text1
  1144  006BD8                     __ptext1:
  1145                           	opt stack 0
  1146  006BD8                     _taxa_serial:
  1147                           	opt stack 27
  1148                           
  1149                           ;SanUSB48X.h: 447: unsigned long baud_sanusb;
  1150                           ;SanUSB48X.h: 448: TRISCbits.TRISC7=1;
  1151                           
  1152                           ;incstack = 0
  1153  006BD8  8E94               	bsf	3988,7,c	;volatile
  1154                           
  1155                           ;SanUSB48X.h: 449: TRISCbits.TRISC6=0;
  1156  006BDA  9C94               	bcf	3988,6,c	;volatile
  1157                           
  1158                           ;SanUSB48X.h: 450: TXSTA = 0x24;
  1159  006BDC  0E24               	movlw	36
  1160  006BDE  6EAC               	movwf	4012,c	;volatile
  1161                           
  1162                           ;SanUSB48X.h: 451: RCSTA = 0x90;
  1163  006BE0  0E90               	movlw	144
  1164  006BE2  6EAB               	movwf	4011,c	;volatile
  1165                           
  1166                           ;SanUSB48X.h: 452: BAUDCON = 0x08;
  1167  006BE4  0E08               	movlw	8
  1168  006BE6  6EB8               	movwf	4024,c	;volatile
  1169                           
  1170                           ;SanUSB48X.h: 454: baud_sanusb =REG+((48000000/4)/ taxa) - 1;
  1171  006BE8  0E00               	movlw	0
  1172  006BEA  6E36               	movwf	___lldiv@dividend,c
  1173  006BEC  0E1B               	movlw	27
  1174  006BEE  6E37               	movwf	___lldiv@dividend+1,c
  1175  006BF0  0EB7               	movlw	183
  1176  006BF2  6E38               	movwf	___lldiv@dividend+2,c
  1177  006BF4  0E00               	movlw	0
  1178  006BF6  6E39               	movwf	___lldiv@dividend+3,c
  1179  006BF8  C0B1  F03A         	movff	taxa_serial@taxa,___lldiv@divisor
  1180  006BFC  C0B2  F03B         	movff	taxa_serial@taxa+1,___lldiv@divisor+1
  1181  006C00  C0B3  F03C         	movff	taxa_serial@taxa+2,___lldiv@divisor+2
  1182  006C04  C0B4  F03D         	movff	taxa_serial@taxa+3,___lldiv@divisor+3
  1183  006C08  EC8E  F036         	call	___lldiv	;wreg free
  1184  006C0C  C036  F0B5         	movff	?___lldiv,??_taxa_serial
  1185  006C10  C037  F0B6         	movff	?___lldiv+1,??_taxa_serial+1
  1186  006C14  C038  F0B7         	movff	?___lldiv+2,??_taxa_serial+2
  1187  006C18  C039  F0B8         	movff	?___lldiv+3,??_taxa_serial+3
  1188  006C1C  5046               	movf	_REG,w,c
  1189  006C1E  0100               	movlb	0	; () banked
  1190  006C20  25B5               	addwf	??_taxa_serial& (0+255),w,b
  1191  006C22  0100               	movlb	0	; () banked
  1192  006C24  6FB9               	movwf	(??_taxa_serial+4)& (0+255),b
  1193  006C26  0E00               	movlw	0
  1194  006C28  0100               	movlb	0	; () banked
  1195  006C2A  21B6               	addwfc	(??_taxa_serial+1)& (0+255),w,b
  1196  006C2C  0100               	movlb	0	; () banked
  1197  006C2E  6FBA               	movwf	(??_taxa_serial+5)& (0+255),b
  1198  006C30  0E00               	movlw	0
  1199  006C32  0100               	movlb	0	; () banked
  1200  006C34  21B7               	addwfc	(??_taxa_serial+2)& (0+255),w,b
  1201  006C36  0100               	movlb	0	; () banked
  1202  006C38  6FBB               	movwf	(??_taxa_serial+6)& (0+255),b
  1203  006C3A  0E00               	movlw	0
  1204  006C3C  0100               	movlb	0	; () banked
  1205  006C3E  21B8               	addwfc	(??_taxa_serial+3)& (0+255),w,b
  1206  006C40  0100               	movlb	0	; () banked
  1207  006C42  6FBC               	movwf	(??_taxa_serial+7)& (0+255),b
  1208  006C44  0EFF               	movlw	255
  1209  006C46  0100               	movlb	0	; () banked
  1210  006C48  25B9               	addwf	(??_taxa_serial+4)& (0+255),w,b
  1211  006C4A  0100               	movlb	0	; () banked
  1212  006C4C  0100               	movlb	0	; () banked
  1213  006C4E  6FBD               	movwf	taxa_serial@baud_sanusb& (0+255),b
  1214  006C50  0EFF               	movlw	255
  1215  006C52  0100               	movlb	0	; () banked
  1216  006C54  21BA               	addwfc	(??_taxa_serial+5)& (0+255),w,b
  1217  006C56  0100               	movlb	0	; () banked
  1218  006C58  6FBE               	movwf	(taxa_serial@baud_sanusb+1)& (0+255),b
  1219  006C5A  0EFF               	movlw	255
  1220  006C5C  0100               	movlb	0	; () banked
  1221  006C5E  21BB               	addwfc	(??_taxa_serial+6)& (0+255),w,b
  1222  006C60  0100               	movlb	0	; () banked
  1223  006C62  6FBF               	movwf	(taxa_serial@baud_sanusb+2)& (0+255),b
  1224  006C64  0EFF               	movlw	255
  1225  006C66  0100               	movlb	0	; () banked
  1226  006C68  21BC               	addwfc	(??_taxa_serial+7)& (0+255),w,b
  1227  006C6A  0100               	movlb	0	; () banked
  1228  006C6C  6FC0               	movwf	(taxa_serial@baud_sanusb+3)& (0+255),b
  1229                           
  1230                           ; BSR set to: 0
  1231                           ;SanUSB48X.h: 455: SPBRGH = (unsigned char)(baud_sanusb >> 8);
  1232  006C6E  C0BE  FFB0         	movff	taxa_serial@baud_sanusb+1,4016	;volatile
  1233                           
  1234                           ; BSR set to: 0
  1235                           ;SanUSB48X.h: 456: SPBRG = (unsigned char)baud_sanusb;
  1236  006C72  C0BD  FFAF         	movff	taxa_serial@baud_sanusb,4015	;volatile
  1237                           
  1238                           ; BSR set to: 0
  1239  006C76  0012               	return	
  1240  006C78                     __end_of_taxa_serial:
  1241                           	opt stack 0
  1242                           tblptru	equ	0xFF8
  1243                           tblptrh	equ	0xFF7
  1244                           tblptrl	equ	0xFF6
  1245                           tablat	equ	0xFF5
  1246                           prodh	equ	0xFF4
  1247                           prodl	equ	0xFF3
  1248                           intcon	equ	0xFF2
  1249                           postinc0	equ	0xFEE
  1250                           wreg	equ	0xFE8
  1251                           postdec1	equ	0xFE5
  1252                           fsr1l	equ	0xFE1
  1253                           indf2	equ	0xFDF
  1254                           fsr2h	equ	0xFDA
  1255                           fsr2l	equ	0xFD9
  1256                           status	equ	0xFD8
  1257                           
  1258 ;; *************** function ___lldiv *****************
  1259 ;; Defined at:
  1260 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lldiv.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;  dividend        4   20[COMRAM] unsigned long 
  1263 ;;  divisor         4   24[COMRAM] unsigned long 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  quotient        4    0[BANK0 ] unsigned long 
  1266 ;;  counter         1    4[BANK0 ] unsigned char 
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  4   20[COMRAM] unsigned long 
  1269 ;; Registers used:
  1270 ;;		wreg, status,2, status,0
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1276 ;;      Params:         8       0       0       0       0       0       0       0       0
  1277 ;;      Locals:         0       5       0       0       0       0       0       0       0
  1278 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1279 ;;      Totals:         9       5       0       0       0       0       0       0       0
  1280 ;;Total ram usage:       14 bytes
  1281 ;; Hardware stack levels used:    1
  1282 ;; Hardware stack levels required when called:    2
  1283 ;; This function calls:
  1284 ;;		Nothing
  1285 ;; This function is called by:
  1286 ;;		_taxa_serial
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           	psect	text2
  1291  006D1C                     __ptext2:
  1292                           	opt stack 0
  1293  006D1C                     ___lldiv:
  1294                           	opt stack 27
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;incstack = 0
  1298  006D1C  0E00               	movlw	0
  1299  006D1E  0100               	movlb	0	; () banked
  1300  006D20  0100               	movlb	0	; () banked
  1301  006D22  6FAC               	movwf	___lldiv@quotient& (0+255),b
  1302  006D24  0E00               	movlw	0
  1303  006D26  0100               	movlb	0	; () banked
  1304  006D28  6FAD               	movwf	(___lldiv@quotient+1)& (0+255),b
  1305  006D2A  0E00               	movlw	0
  1306  006D2C  0100               	movlb	0	; () banked
  1307  006D2E  6FAE               	movwf	(___lldiv@quotient+2)& (0+255),b
  1308  006D30  0E00               	movlw	0
  1309  006D32  0100               	movlb	0	; () banked
  1310  006D34  6FAF               	movwf	(___lldiv@quotient+3)& (0+255),b
  1311                           
  1312                           ; BSR set to: 0
  1313  006D36  503D               	movf	___lldiv@divisor+3,w,c
  1314  006D38  103A               	iorwf	___lldiv@divisor,w,c
  1315  006D3A  103B               	iorwf	___lldiv@divisor+1,w,c
  1316  006D3C  103C               	iorwf	___lldiv@divisor+2,w,c
  1317  006D3E  B4D8               	btfsc	status,2,c
  1318  006D40  D039               	goto	l1104
  1319                           
  1320                           ; BSR set to: 0
  1321  006D42  6E3E               	movwf	??___lldiv& (0+255),c
  1322  006D44  0E01               	movlw	1
  1323  006D46  0100               	movlb	0	; () banked
  1324  006D48  0100               	movlb	0	; () banked
  1325  006D4A  6FB0               	movwf	___lldiv@counter& (0+255),b
  1326  006D4C  503E               	movf	??___lldiv& (0+255),w,c
  1327  006D4E  D008               	goto	l4239
  1328  006D50                     l4237:
  1329                           
  1330                           ; BSR set to: 0
  1331  006D50  90D8               	bcf	status,0,c
  1332  006D52  363A               	rlcf	___lldiv@divisor,f,c
  1333  006D54  363B               	rlcf	___lldiv@divisor+1,f,c
  1334  006D56  363C               	rlcf	___lldiv@divisor+2,f,c
  1335  006D58  363D               	rlcf	___lldiv@divisor+3,f,c
  1336  006D5A  0100               	movlb	0	; () banked
  1337  006D5C  0100               	movlb	0	; () banked
  1338  006D5E  2BB0               	incf	___lldiv@counter& (0+255),f,b
  1339  006D60                     l4239:
  1340                           
  1341                           ; BSR set to: 0
  1342  006D60  AE3D               	btfss	___lldiv@divisor+3,7,c
  1343  006D62  D7F6               	goto	l4237
  1344  006D64                     l4241:
  1345                           
  1346                           ; BSR set to: 0
  1347  006D64  0100               	movlb	0	; () banked
  1348  006D66  90D8               	bcf	status,0,c
  1349  006D68  0100               	movlb	0	; () banked
  1350  006D6A  37AC               	rlcf	___lldiv@quotient& (0+255),f,b
  1351  006D6C  0100               	movlb	0	; () banked
  1352  006D6E  37AD               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  1353  006D70  0100               	movlb	0	; () banked
  1354  006D72  37AE               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  1355  006D74  0100               	movlb	0	; () banked
  1356  006D76  37AF               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  1357                           
  1358                           ; BSR set to: 0
  1359  006D78  503A               	movf	___lldiv@divisor,w,c
  1360  006D7A  5C36               	subwf	___lldiv@dividend,w,c
  1361  006D7C  503B               	movf	___lldiv@divisor+1,w,c
  1362  006D7E  5837               	subwfb	___lldiv@dividend+1,w,c
  1363  006D80  503C               	movf	___lldiv@divisor+2,w,c
  1364  006D82  5838               	subwfb	___lldiv@dividend+2,w,c
  1365  006D84  503D               	movf	___lldiv@divisor+3,w,c
  1366  006D86  5839               	subwfb	___lldiv@dividend+3,w,c
  1367  006D88  A0D8               	btfss	status,0,c
  1368  006D8A  D00B               	goto	l4249
  1369                           
  1370                           ; BSR set to: 0
  1371  006D8C  503A               	movf	___lldiv@divisor,w,c
  1372  006D8E  5E36               	subwf	___lldiv@dividend,f,c
  1373  006D90  503B               	movf	___lldiv@divisor+1,w,c
  1374  006D92  5A37               	subwfb	___lldiv@dividend+1,f,c
  1375  006D94  503C               	movf	___lldiv@divisor+2,w,c
  1376  006D96  5A38               	subwfb	___lldiv@dividend+2,f,c
  1377  006D98  503D               	movf	___lldiv@divisor+3,w,c
  1378  006D9A  5A39               	subwfb	___lldiv@dividend+3,f,c
  1379                           
  1380                           ; BSR set to: 0
  1381  006D9C  0100               	movlb	0	; () banked
  1382  006D9E  0100               	movlb	0	; () banked
  1383  006DA0  81AC               	bsf	___lldiv@quotient& (0+255),0,b
  1384  006DA2                     l4249:
  1385                           
  1386                           ; BSR set to: 0
  1387  006DA2  90D8               	bcf	status,0,c
  1388  006DA4  323D               	rrcf	___lldiv@divisor+3,f,c
  1389  006DA6  323C               	rrcf	___lldiv@divisor+2,f,c
  1390  006DA8  323B               	rrcf	___lldiv@divisor+1,f,c
  1391  006DAA  323A               	rrcf	___lldiv@divisor,f,c
  1392                           
  1393                           ; BSR set to: 0
  1394  006DAC  0100               	movlb	0	; () banked
  1395  006DAE  0100               	movlb	0	; () banked
  1396  006DB0  2FB0               	decfsz	___lldiv@counter& (0+255),f,b
  1397  006DB2  D7D8               	goto	l4241
  1398  006DB4                     l1104:
  1399                           
  1400                           ; BSR set to: 0
  1401  006DB4  C0AC  F036         	movff	___lldiv@quotient,?___lldiv
  1402  006DB8  C0AD  F037         	movff	___lldiv@quotient+1,?___lldiv+1
  1403  006DBC  C0AE  F038         	movff	___lldiv@quotient+2,?___lldiv+2
  1404  006DC0  C0AF  F039         	movff	___lldiv@quotient+3,?___lldiv+3
  1405                           
  1406                           ; BSR set to: 0
  1407  006DC4  0012               	return	
  1408  006DC6                     __end_of___lldiv:
  1409                           	opt stack 0
  1410                           tblptru	equ	0xFF8
  1411                           tblptrh	equ	0xFF7
  1412                           tblptrl	equ	0xFF6
  1413                           tablat	equ	0xFF5
  1414                           prodh	equ	0xFF4
  1415                           prodl	equ	0xFF3
  1416                           intcon	equ	0xFF2
  1417                           postinc0	equ	0xFEE
  1418                           wreg	equ	0xFE8
  1419                           postdec1	equ	0xFE5
  1420                           fsr1l	equ	0xFE1
  1421                           indf2	equ	0xFDF
  1422                           fsr2h	equ	0xFDA
  1423                           fsr2l	equ	0xFD9
  1424                           status	equ	0xFD8
  1425                           
  1426 ;; *************** function _swputc *****************
  1427 ;; Defined at:
  1428 ;;		line 466 in file "SanUSB48X.h"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;  c               1    wreg     unsigned char 
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;  c               1   20[COMRAM] unsigned char 
  1433 ;; Return value:  Size  Location     Type
  1434 ;;		None               void
  1435 ;; Registers used:
  1436 ;;		wreg, status,2, status,0
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1442 ;;      Params:         0       0       0       0       0       0       0       0       0
  1443 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1444 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1445 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1446 ;;Total ram usage:        1 bytes
  1447 ;; Hardware stack levels used:    1
  1448 ;; Hardware stack levels required when called:    2
  1449 ;; This function calls:
  1450 ;;		Nothing
  1451 ;; This function is called by:
  1452 ;;		_main
  1453 ;;		_sendrw
  1454 ;;		_sendsw
  1455 ;;		_sendnum
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           	psect	text3
  1460  006740                     __ptext3:
  1461                           	opt stack 0
  1462  006740                     _swputc:
  1463                           	opt stack 28
  1464                           
  1465                           ; BSR set to: 0
  1466                           ;incstack = 0
  1467                           ;swputc@c stored from wreg
  1468  006740  CFE8 F036          	movff	wreg,swputc@c
  1469  006744                     l391:
  1470  006744  A2AC               	btfss	4012,1,c	;volatile
  1471  006746  D7FE               	goto	l391
  1472                           
  1473                           ;SanUSB48X.h: 469: TXREG=REG+c;
  1474  006748  5046               	movf	_REG,w,c
  1475  00674A  2436               	addwf	swputc@c,w,c
  1476  00674C  6EAD               	movwf	4013,c	;volatile
  1477  00674E  0012               	return	
  1478  006750                     __end_of_swputc:
  1479                           	opt stack 0
  1480                           tblptru	equ	0xFF8
  1481                           tblptrh	equ	0xFF7
  1482                           tblptrl	equ	0xFF6
  1483                           tablat	equ	0xFF5
  1484                           prodh	equ	0xFF4
  1485                           prodl	equ	0xFF3
  1486                           intcon	equ	0xFF2
  1487                           postinc0	equ	0xFEE
  1488                           wreg	equ	0xFE8
  1489                           postdec1	equ	0xFE5
  1490                           fsr1l	equ	0xFE1
  1491                           indf2	equ	0xFDF
  1492                           fsr2h	equ	0xFDA
  1493                           fsr2l	equ	0xFD9
  1494                           status	equ	0xFD8
  1495                           
  1496 ;; *************** function _habilita_interrupcao *****************
  1497 ;; Defined at:
  1498 ;;		line 68 in file "SanUSB48X.h"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;  tipo            2   20[COMRAM] unsigned int 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;		None
  1503 ;; Return value:  Size  Location     Type
  1504 ;;		None               void
  1505 ;; Registers used:
  1506 ;;		wreg, status,2, status,0
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1512 ;;      Params:         2       0       0       0       0       0       0       0       0
  1513 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1514 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1515 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1516 ;;Total ram usage:        4 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; Hardware stack levels required when called:    2
  1519 ;; This function calls:
  1520 ;;		Nothing
  1521 ;; This function is called by:
  1522 ;;		_main
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           	psect	text4
  1527  006C78                     __ptext4:
  1528                           	opt stack 0
  1529  006C78                     _habilita_interrupcao:
  1530                           	opt stack 28
  1531                           
  1532                           ;SanUSB48X.h: 69: RCONbits.IPEN = 1;
  1533                           
  1534                           ;incstack = 0
  1535  006C78  8ED0               	bsf	4048,7,c	;volatile
  1536                           
  1537                           ;SanUSB48X.h: 70: INTCONbits.GIEH = 1;
  1538  006C7A  8EF2               	bsf	intcon,7,c	;volatile
  1539                           
  1540                           ;SanUSB48X.h: 71: switch(tipo){
  1541  006C7C  D01A               	goto	l3143
  1542  006C7E                     l140:
  1543  006C7E  8AF2               	bsf	intcon,5,c	;volatile
  1544  006C80  8ED5               	bsf	4053,7,c	;volatile
  1545  006C82  D04B               	goto	l150
  1546  006C84                     l142:
  1547  006C84  809D               	bsf	3997,0,c	;volatile
  1548  006C86  80CD               	bsf	4045,0,c	;volatile
  1549  006C88  D048               	goto	l150
  1550  006C8A                     l143:
  1551  006C8A  829D               	bsf	3997,1,c	;volatile
  1552  006C8C  84CA               	bsf	4042,2,c	;volatile
  1553  006C8E  D045               	goto	l150
  1554  006C90                     l144:
  1555  006C90  82A0               	bsf	4000,1,c	;volatile
  1556  006C92  80B1               	bsf	4017,0,c	;volatile
  1557  006C94  D042               	goto	l150
  1558  006C96                     l145:
  1559  006C96  88F2               	bsf	intcon,4,c	;volatile
  1560  006C98  9CF1               	bcf	intcon2,6,c	;volatile
  1561  006C9A  D03F               	goto	l150
  1562  006C9C                     l146:
  1563  006C9C  86F0               	bsf	intcon3,3,c	;volatile
  1564  006C9E  9AF1               	bcf	intcon2,5,c	;volatile
  1565  006CA0  D03C               	goto	l150
  1566  006CA2                     l147:
  1567  006CA2  88F0               	bsf	intcon3,4,c	;volatile
  1568  006CA4  98F1               	bcf	intcon2,4,c	;volatile
  1569  006CA6  D039               	goto	l150
  1570  006CA8                     l148:
  1571  006CA8  8C9D               	bsf	3997,6,c	;volatile
  1572  006CAA  D037               	goto	l150
  1573  006CAC                     l149:
  1574  006CAC  8A9D               	bsf	3997,5,c	;volatile
  1575  006CAE  8A9F               	bsf	3999,5,c	;volatile
  1576  006CB0  D034               	goto	l150
  1577  006CB2                     l3143:
  1578  006CB2  C036  F038         	movff	habilita_interrupcao@tipo,??_habilita_interrupcao
  1579  006CB6  C037  F039         	movff	habilita_interrupcao@tipo+1,??_habilita_interrupcao+1
  1580                           
  1581                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
  1582                           ; Switch size 1, requested type "space"
  1583                           ; Number of cases is 4, Range of values is 157 to 242
  1584                           ; switch strategies available:
  1585                           ; Name         Instructions Cycles
  1586                           ; simple_byte           13     7 (average)
  1587                           ;	Chosen strategy is simple_byte
  1588  006CBA  5039               	movf	??_habilita_interrupcao+1,w,c
  1589  006CBC  0A9D               	xorlw	157	; case 157
  1590  006CBE  B4D8               	btfsc	status,2,c
  1591  006CC0  D00A               	goto	l4711
  1592  006CC2  0A3D               	xorlw	61	; case 160
  1593  006CC4  B4D8               	btfsc	status,2,c
  1594  006CC6  D015               	goto	l4713
  1595  006CC8  0A50               	xorlw	80	; case 240
  1596  006CCA  B4D8               	btfsc	status,2,c
  1597  006CCC  D017               	goto	l4715
  1598  006CCE  0A02               	xorlw	2	; case 242
  1599  006CD0  B4D8               	btfsc	status,2,c
  1600  006CD2  D01C               	goto	l4717
  1601  006CD4  D022               	goto	l150
  1602  006CD6                     l4711:
  1603                           
  1604                           ; Switch size 1, requested type "space"
  1605                           ; Number of cases is 4, Range of values is 1 to 64
  1606                           ; switch strategies available:
  1607                           ; Name         Instructions Cycles
  1608                           ; simple_byte           13     7 (average)
  1609                           ;	Chosen strategy is simple_byte
  1610  006CD6  5038               	movf	??_habilita_interrupcao,w,c
  1611  006CD8  0A01               	xorlw	1	; case 1
  1612  006CDA  B4D8               	btfsc	status,2,c
  1613  006CDC  D7D3               	goto	l142
  1614  006CDE  0A03               	xorlw	3	; case 2
  1615  006CE0  B4D8               	btfsc	status,2,c
  1616  006CE2  D7D3               	goto	l143
  1617  006CE4  0A22               	xorlw	34	; case 32
  1618  006CE6  B4D8               	btfsc	status,2,c
  1619  006CE8  D7E1               	goto	l149
  1620  006CEA  0A60               	xorlw	96	; case 64
  1621  006CEC  B4D8               	btfsc	status,2,c
  1622  006CEE  D7DC               	goto	l148
  1623  006CF0  D014               	goto	l150
  1624  006CF2                     l4713:
  1625                           
  1626                           ; Switch size 1, requested type "space"
  1627                           ; Number of cases is 1, Range of values is 2 to 2
  1628                           ; switch strategies available:
  1629                           ; Name         Instructions Cycles
  1630                           ; simple_byte            4     3 (average)
  1631                           ;	Chosen strategy is simple_byte
  1632  006CF2  5038               	movf	??_habilita_interrupcao,w,c
  1633  006CF4  0A02               	xorlw	2	; case 2
  1634  006CF6  B4D8               	btfsc	status,2,c
  1635  006CF8  D7CB               	goto	l144
  1636  006CFA  D00F               	goto	l150
  1637  006CFC                     l4715:
  1638                           
  1639                           ; Switch size 1, requested type "space"
  1640                           ; Number of cases is 2, Range of values is 8 to 16
  1641                           ; switch strategies available:
  1642                           ; Name         Instructions Cycles
  1643                           ; simple_byte            7     4 (average)
  1644                           ;	Chosen strategy is simple_byte
  1645  006CFC  5038               	movf	??_habilita_interrupcao,w,c
  1646  006CFE  0A08               	xorlw	8	; case 8
  1647  006D00  B4D8               	btfsc	status,2,c
  1648  006D02  D7CC               	goto	l146
  1649  006D04  0A18               	xorlw	24	; case 16
  1650  006D06  B4D8               	btfsc	status,2,c
  1651  006D08  D7CC               	goto	l147
  1652  006D0A  D007               	goto	l150
  1653  006D0C                     l4717:
  1654                           
  1655                           ; Switch size 1, requested type "space"
  1656                           ; Number of cases is 2, Range of values is 16 to 32
  1657                           ; switch strategies available:
  1658                           ; Name         Instructions Cycles
  1659                           ; simple_byte            7     4 (average)
  1660                           ;	Chosen strategy is simple_byte
  1661  006D0C  5038               	movf	??_habilita_interrupcao,w,c
  1662  006D0E  0A10               	xorlw	16	; case 16
  1663  006D10  B4D8               	btfsc	status,2,c
  1664  006D12  D7C1               	goto	l145
  1665  006D14  0A30               	xorlw	48	; case 32
  1666  006D16  B4D8               	btfsc	status,2,c
  1667  006D18  D7B2               	goto	l140
  1668  006D1A                     l150:
  1669  006D1A  0012               	return	
  1670  006D1C                     __end_of_habilita_interrupcao:
  1671                           	opt stack 0
  1672                           tblptru	equ	0xFF8
  1673                           tblptrh	equ	0xFF7
  1674                           tblptrl	equ	0xFF6
  1675                           tablat	equ	0xFF5
  1676                           prodh	equ	0xFF4
  1677                           prodl	equ	0xFF3
  1678                           intcon	equ	0xFF2
  1679                           intcon2	equ	0xFF1
  1680                           intcon3	equ	0xFF0
  1681                           postinc0	equ	0xFEE
  1682                           wreg	equ	0xFE8
  1683                           postdec1	equ	0xFE5
  1684                           fsr1l	equ	0xFE1
  1685                           indf2	equ	0xFDF
  1686                           fsr2h	equ	0xFDA
  1687                           fsr2l	equ	0xFD9
  1688                           status	equ	0xFD8
  1689                           
  1690 ;; *************** function _clock_int_48MHz *****************
  1691 ;; Defined at:
  1692 ;;		line 435 in file "SanUSB48X.h"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;		None
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;		None
  1697 ;; Return value:  Size  Location     Type
  1698 ;;		None               void
  1699 ;; Registers used:
  1700 ;;		wreg, status,2, status,0, prodl, cstack
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1706 ;;      Params:         0       0       0       0       0       0       0       0       0
  1707 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1708 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1709 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1710 ;;Total ram usage:        0 bytes
  1711 ;; Hardware stack levels used:    1
  1712 ;; Hardware stack levels required when called:    3
  1713 ;; This function calls:
  1714 ;;		___awmod
  1715 ;;		___lwdiv
  1716 ;;		_le_eeprom
  1717 ;; This function is called by:
  1718 ;;		_main
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           	psect	text5
  1723  006964                     __ptext5:
  1724                           	opt stack 0
  1725  006964                     _clock_int_48MHz:
  1726                           	opt stack 27
  1727                           
  1728                           ;SanUSB48X.h: 438: EEADR = 0B11111101;
  1729                           
  1730                           ;incstack = 0
  1731  006964  0EFD               	movlw	253
  1732  006966  6EA9               	movwf	4009,c	;volatile
  1733                           
  1734                           ;SanUSB48X.h: 439: EECON1=EEADR & 0B00001011;
  1735  006968  50A9               	movf	4009,w,c	;volatile
  1736  00696A  0B0B               	andlw	11
  1737  00696C  6EA6               	movwf	4006,c	;volatile
  1738  00696E                     l376:
  1739  00696E  66A8               	tstfsz	4008,c	;volatile
  1740  006970  D7FE               	goto	l376
  1741                           
  1742                           ;SanUSB48X.h: 441: REGad=R/((EEADR%126)<<4);
  1743  006972  C042  F03D         	movff	_R,___lwdiv@dividend
  1744  006976  C043  F03E         	movff	_R+1,___lwdiv@dividend+1
  1745  00697A  0E00               	movlw	0
  1746  00697C  6E39               	movwf	___awmod@divisor+1,c
  1747  00697E  0E7E               	movlw	126
  1748  006980  6E38               	movwf	___awmod@divisor,c
  1749  006982  CFA9 F036          	movff	4009,___awmod@dividend	;volatile
  1750  006986  6A37               	clrf	___awmod@dividend+1,c
  1751  006988  EC9E  F035         	call	___awmod	;wreg free
  1752  00698C  3A36               	swapf	?___awmod,f,c
  1753  00698E  3A37               	swapf	?___awmod+1,f,c
  1754  006990  0EF0               	movlw	240
  1755  006992  1637               	andwf	?___awmod+1,f,c
  1756  006994  5036               	movf	?___awmod,w,c
  1757  006996  0B0F               	andlw	15
  1758  006998  1237               	iorwf	?___awmod+1,f,c
  1759  00699A  0EF0               	movlw	240
  1760  00699C  1636               	andwf	?___awmod,f,c
  1761  00699E  C036  F03F         	movff	?___awmod,___lwdiv@divisor
  1762  0069A2  C037  F040         	movff	?___awmod+1,___lwdiv@divisor+1
  1763  0069A6  EC65  F035         	call	___lwdiv	;wreg free
  1764  0069AA  503D               	movf	?___lwdiv,w,c
  1765  0069AC  6E47               	movwf	_REGad,c
  1766                           
  1767                           ;SanUSB48X.h: 442: REG=le_eeprom(REGad);
  1768  0069AE  5047               	movf	_REGad,w,c
  1769  0069B0  ECB1  F033         	call	_le_eeprom
  1770  0069B4  6E46               	movwf	_REG,c
  1771  0069B6  0012               	return	
  1772  0069B8                     __end_of_clock_int_48MHz:
  1773                           	opt stack 0
  1774                           tblptru	equ	0xFF8
  1775                           tblptrh	equ	0xFF7
  1776                           tblptrl	equ	0xFF6
  1777                           tablat	equ	0xFF5
  1778                           prodh	equ	0xFF4
  1779                           prodl	equ	0xFF3
  1780                           intcon	equ	0xFF2
  1781                           intcon2	equ	0xFF1
  1782                           intcon3	equ	0xFF0
  1783                           postinc0	equ	0xFEE
  1784                           wreg	equ	0xFE8
  1785                           postdec1	equ	0xFE5
  1786                           fsr1l	equ	0xFE1
  1787                           indf2	equ	0xFDF
  1788                           fsr2h	equ	0xFDA
  1789                           fsr2l	equ	0xFD9
  1790                           status	equ	0xFD8
  1791                           
  1792 ;; *************** function ___lwdiv *****************
  1793 ;; Defined at:
  1794 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lwdiv.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;  dividend        2   27[COMRAM] unsigned int 
  1797 ;;  divisor         2   29[COMRAM] unsigned int 
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;  quotient        2    1[BANK0 ] unsigned int 
  1800 ;;  counter         1    0[BANK0 ] unsigned char 
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  2   27[COMRAM] unsigned int 
  1803 ;; Registers used:
  1804 ;;		wreg, status,2, status,0
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1810 ;;      Params:         4       0       0       0       0       0       0       0       0
  1811 ;;      Locals:         0       3       0       0       0       0       0       0       0
  1812 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1813 ;;      Totals:         5       3       0       0       0       0       0       0       0
  1814 ;;Total ram usage:        8 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; Hardware stack levels required when called:    2
  1817 ;; This function calls:
  1818 ;;		Nothing
  1819 ;; This function is called by:
  1820 ;;		_clock_int_48MHz
  1821 ;;		_sendnum
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text6
  1826  006ACA                     __ptext6:
  1827                           	opt stack 0
  1828  006ACA                     ___lwdiv:
  1829                           	opt stack 27
  1830                           
  1831                           ;incstack = 0
  1832  006ACA  0E00               	movlw	0
  1833  006ACC  0100               	movlb	0	; () banked
  1834  006ACE  0100               	movlb	0	; () banked
  1835  006AD0  6FAE               	movwf	(___lwdiv@quotient+1)& (0+255),b
  1836  006AD2  0E00               	movlw	0
  1837  006AD4  0100               	movlb	0	; () banked
  1838  006AD6  6FAD               	movwf	___lwdiv@quotient& (0+255),b
  1839                           
  1840                           ; BSR set to: 0
  1841  006AD8  5040               	movf	___lwdiv@divisor+1,w,c
  1842  006ADA  103F               	iorwf	___lwdiv@divisor,w,c
  1843  006ADC  B4D8               	btfsc	status,2,c
  1844  006ADE  D029               	goto	l1173
  1845                           
  1846                           ; BSR set to: 0
  1847  006AE0  6E41               	movwf	??___lwdiv& (0+255),c
  1848  006AE2  0E01               	movlw	1
  1849  006AE4  0100               	movlb	0	; () banked
  1850  006AE6  0100               	movlb	0	; () banked
  1851  006AE8  6FAC               	movwf	___lwdiv@counter& (0+255),b
  1852  006AEA  5041               	movf	??___lwdiv& (0+255),w,c
  1853  006AEC  D006               	goto	l4261
  1854  006AEE                     l4259:
  1855                           
  1856                           ; BSR set to: 0
  1857  006AEE  90D8               	bcf	status,0,c
  1858  006AF0  363F               	rlcf	___lwdiv@divisor,f,c
  1859  006AF2  3640               	rlcf	___lwdiv@divisor+1,f,c
  1860  006AF4  0100               	movlb	0	; () banked
  1861  006AF6  0100               	movlb	0	; () banked
  1862  006AF8  2BAC               	incf	___lwdiv@counter& (0+255),f,b
  1863  006AFA                     l4261:
  1864                           
  1865                           ; BSR set to: 0
  1866  006AFA  AE40               	btfss	___lwdiv@divisor+1,7,c
  1867  006AFC  D7F8               	goto	l4259
  1868  006AFE                     l4263:
  1869                           
  1870                           ; BSR set to: 0
  1871  006AFE  0100               	movlb	0	; () banked
  1872  006B00  0100               	movlb	0	; () banked
  1873  006B02  0100               	movlb	0	; () banked
  1874  006B04  90D8               	bcf	status,0,c
  1875  006B06  37AD               	rlcf	___lwdiv@quotient& (0+255),f,b
  1876  006B08  37AE               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  1877                           
  1878                           ; BSR set to: 0
  1879  006B0A  503F               	movf	___lwdiv@divisor,w,c
  1880  006B0C  5C3D               	subwf	___lwdiv@dividend,w,c
  1881  006B0E  5040               	movf	___lwdiv@divisor+1,w,c
  1882  006B10  583E               	subwfb	___lwdiv@dividend+1,w,c
  1883  006B12  A0D8               	btfss	status,0,c
  1884  006B14  D007               	goto	l4271
  1885                           
  1886                           ; BSR set to: 0
  1887  006B16  503F               	movf	___lwdiv@divisor,w,c
  1888  006B18  5E3D               	subwf	___lwdiv@dividend,f,c
  1889  006B1A  5040               	movf	___lwdiv@divisor+1,w,c
  1890  006B1C  5A3E               	subwfb	___lwdiv@dividend+1,f,c
  1891                           
  1892                           ; BSR set to: 0
  1893  006B1E  0100               	movlb	0	; () banked
  1894  006B20  0100               	movlb	0	; () banked
  1895  006B22  81AD               	bsf	___lwdiv@quotient& (0+255),0,b
  1896  006B24                     l4271:
  1897                           
  1898                           ; BSR set to: 0
  1899  006B24  90D8               	bcf	status,0,c
  1900  006B26  3240               	rrcf	___lwdiv@divisor+1,f,c
  1901  006B28  323F               	rrcf	___lwdiv@divisor,f,c
  1902                           
  1903                           ; BSR set to: 0
  1904  006B2A  0100               	movlb	0	; () banked
  1905  006B2C  0100               	movlb	0	; () banked
  1906  006B2E  2FAC               	decfsz	___lwdiv@counter& (0+255),f,b
  1907  006B30  D7E6               	goto	l4263
  1908  006B32                     l1173:
  1909                           
  1910                           ; BSR set to: 0
  1911  006B32  C0AD  F03D         	movff	___lwdiv@quotient,?___lwdiv
  1912  006B36  C0AE  F03E         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1913                           
  1914                           ; BSR set to: 0
  1915  006B3A  0012               	return	
  1916  006B3C                     __end_of___lwdiv:
  1917                           	opt stack 0
  1918                           tblptru	equ	0xFF8
  1919                           tblptrh	equ	0xFF7
  1920                           tblptrl	equ	0xFF6
  1921                           tablat	equ	0xFF5
  1922                           prodh	equ	0xFF4
  1923                           prodl	equ	0xFF3
  1924                           intcon	equ	0xFF2
  1925                           intcon2	equ	0xFF1
  1926                           intcon3	equ	0xFF0
  1927                           postinc0	equ	0xFEE
  1928                           wreg	equ	0xFE8
  1929                           postdec1	equ	0xFE5
  1930                           fsr1l	equ	0xFE1
  1931                           indf2	equ	0xFDF
  1932                           fsr2h	equ	0xFDA
  1933                           fsr2l	equ	0xFD9
  1934                           status	equ	0xFD8
  1935                           
  1936 ;; *************** function ___awmod *****************
  1937 ;; Defined at:
  1938 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\awmod.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  dividend        2   20[COMRAM] int 
  1941 ;;  divisor         2   22[COMRAM] int 
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;  sign            1   26[COMRAM] unsigned char 
  1944 ;;  counter         1   25[COMRAM] unsigned char 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  2   20[COMRAM] int 
  1947 ;; Registers used:
  1948 ;;		wreg, status,2, status,0, prodl
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1954 ;;      Params:         4       0       0       0       0       0       0       0       0
  1955 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1956 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1957 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1958 ;;Total ram usage:        7 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; Hardware stack levels required when called:    2
  1961 ;; This function calls:
  1962 ;;		Nothing
  1963 ;; This function is called by:
  1964 ;;		_clock_int_48MHz
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           	psect	text7
  1969  006B3C                     __ptext7:
  1970                           	opt stack 0
  1971  006B3C                     ___awmod:
  1972                           	opt stack 27
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;incstack = 0
  1976  006B3C  6E3A               	movwf	??___awmod& (0+255),c
  1977  006B3E  0E00               	movlw	0
  1978  006B40  6E3C               	movwf	___awmod@sign,c
  1979  006B42  503A               	movf	??___awmod& (0+255),w,c
  1980  006B44  5037               	movf	___awmod@dividend+1,w,c
  1981  006B46  0A80               	xorlw	128
  1982  006B48  6EF3               	movwf	prodl,c
  1983  006B4A  0E80               	movlw	128
  1984  006B4C  5CF3               	subwf	prodl,w,c
  1985  006B4E  0E00               	movlw	0
  1986  006B50  B4D8               	btfsc	status,2,c
  1987  006B52  5C36               	subwf	___awmod@dividend,w,c
  1988  006B54  B0D8               	btfsc	status,0,c
  1989  006B56  D008               	goto	l3067
  1990  006B58  6C36               	negf	___awmod@dividend,c
  1991  006B5A  1E37               	comf	___awmod@dividend+1,f,c
  1992  006B5C  B0D8               	btfsc	status,0,c
  1993  006B5E  2A37               	incf	___awmod@dividend+1,f,c
  1994  006B60  6E3A               	movwf	??___awmod& (0+255),c
  1995  006B62  0E01               	movlw	1
  1996  006B64  6E3C               	movwf	___awmod@sign,c
  1997  006B66  503A               	movf	??___awmod& (0+255),w,c
  1998  006B68                     l3067:
  1999  006B68  5039               	movf	___awmod@divisor+1,w,c
  2000  006B6A  0A80               	xorlw	128
  2001  006B6C  6EF3               	movwf	prodl,c
  2002  006B6E  0E80               	movlw	128
  2003  006B70  5CF3               	subwf	prodl,w,c
  2004  006B72  0E00               	movlw	0
  2005  006B74  B4D8               	btfsc	status,2,c
  2006  006B76  5C38               	subwf	___awmod@divisor,w,c
  2007  006B78  B0D8               	btfsc	status,0,c
  2008  006B7A  D004               	goto	l3071
  2009  006B7C  6C38               	negf	___awmod@divisor,c
  2010  006B7E  1E39               	comf	___awmod@divisor+1,f,c
  2011  006B80  B0D8               	btfsc	status,0,c
  2012  006B82  2A39               	incf	___awmod@divisor+1,f,c
  2013  006B84                     l3071:
  2014  006B84  5039               	movf	___awmod@divisor+1,w,c
  2015  006B86  1038               	iorwf	___awmod@divisor,w,c
  2016  006B88  B4D8               	btfsc	status,2,c
  2017  006B8A  D01A               	goto	l3087
  2018  006B8C  6E3A               	movwf	??___awmod& (0+255),c
  2019  006B8E  0E01               	movlw	1
  2020  006B90  6E3B               	movwf	___awmod@counter,c
  2021  006B92  503A               	movf	??___awmod& (0+255),w,c
  2022  006B94  D004               	goto	l3077
  2023  006B96                     l3075:
  2024  006B96  90D8               	bcf	status,0,c
  2025  006B98  3638               	rlcf	___awmod@divisor,f,c
  2026  006B9A  3639               	rlcf	___awmod@divisor+1,f,c
  2027  006B9C  2A3B               	incf	___awmod@counter,f,c
  2028  006B9E                     l3077:
  2029  006B9E  AE39               	btfss	___awmod@divisor+1,7,c
  2030  006BA0  D7FA               	goto	l3075
  2031  006BA2                     l3079:
  2032  006BA2  5038               	movf	___awmod@divisor,w,c
  2033  006BA4  5C36               	subwf	___awmod@dividend,w,c
  2034  006BA6  5039               	movf	___awmod@divisor+1,w,c
  2035  006BA8  5837               	subwfb	___awmod@dividend+1,w,c
  2036  006BAA  A0D8               	btfss	status,0,c
  2037  006BAC  D004               	goto	l3083
  2038  006BAE  5038               	movf	___awmod@divisor,w,c
  2039  006BB0  5E36               	subwf	___awmod@dividend,f,c
  2040  006BB2  5039               	movf	___awmod@divisor+1,w,c
  2041  006BB4  5A37               	subwfb	___awmod@dividend+1,f,c
  2042  006BB6                     l3083:
  2043  006BB6  90D8               	bcf	status,0,c
  2044  006BB8  3239               	rrcf	___awmod@divisor+1,f,c
  2045  006BBA  3238               	rrcf	___awmod@divisor,f,c
  2046  006BBC  2E3B               	decfsz	___awmod@counter,f,c
  2047  006BBE  D7F1               	goto	l3079
  2048  006BC0                     l3087:
  2049  006BC0  503C               	movf	___awmod@sign,w,c
  2050  006BC2  B4D8               	btfsc	status,2,c
  2051  006BC4  D004               	goto	l3091
  2052  006BC6  6C36               	negf	___awmod@dividend,c
  2053  006BC8  1E37               	comf	___awmod@dividend+1,f,c
  2054  006BCA  B0D8               	btfsc	status,0,c
  2055  006BCC  2A37               	incf	___awmod@dividend+1,f,c
  2056  006BCE                     l3091:
  2057  006BCE  C036  F036         	movff	___awmod@dividend,?___awmod
  2058  006BD2  C037  F037         	movff	___awmod@dividend+1,?___awmod+1
  2059  006BD6  0012               	return	
  2060  006BD8                     __end_of___awmod:
  2061                           	opt stack 0
  2062                           tblptru	equ	0xFF8
  2063                           tblptrh	equ	0xFF7
  2064                           tblptrl	equ	0xFF6
  2065                           tablat	equ	0xFF5
  2066                           prodh	equ	0xFF4
  2067                           prodl	equ	0xFF3
  2068                           intcon	equ	0xFF2
  2069                           intcon2	equ	0xFF1
  2070                           intcon3	equ	0xFF0
  2071                           postinc0	equ	0xFEE
  2072                           wreg	equ	0xFE8
  2073                           postdec1	equ	0xFE5
  2074                           fsr1l	equ	0xFE1
  2075                           indf2	equ	0xFDF
  2076                           fsr2h	equ	0xFDA
  2077                           fsr2l	equ	0xFD9
  2078                           status	equ	0xFD8
  2079                           
  2080 ;; *************** function _bt_ini *****************
  2081 ;; Defined at:
  2082 ;;		line 80 in file "bt_usb.h"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;		None
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;		None
  2087 ;; Return value:  Size  Location     Type
  2088 ;;		None               void
  2089 ;; Registers used:
  2090 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2096 ;;      Params:         0       0       0       0       0       0       0       0       0
  2097 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2098 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2099 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2100 ;;Total ram usage:        1 bytes
  2101 ;; Hardware stack levels used:    1
  2102 ;; Hardware stack levels required when called:    7
  2103 ;; This function calls:
  2104 ;;		_configBR6
  2105 ;;		_escreve_eeprom
  2106 ;;		_inverte_saida
  2107 ;;		_le_eeprom
  2108 ;;		_sendr
  2109 ;;		_sputc
  2110 ;;		_tempo_ms
  2111 ;; This function is called by:
  2112 ;;		_main
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           	psect	text8
  2117  007992                     __ptext8:
  2118                           	opt stack 0
  2119  007992                     _bt_ini:
  2120                           	opt stack 23
  2121                           
  2122                           ;bt_usb.h: 82: if (le_eeprom(33)>0 && le_eeprom(34)>0 && le_eeprom(35)>0){
  2123                           
  2124                           ;incstack = 0
  2125  007992  0E21               	movlw	33
  2126  007994  ECB1  F033         	call	_le_eeprom
  2127  007998  0900               	iorlw	0
  2128  00799A  B4D8               	btfsc	status,2,c
  2129  00799C  D1A7               	goto	l3337
  2130  00799E  0E22               	movlw	34
  2131  0079A0  ECB1  F033         	call	_le_eeprom
  2132  0079A4  0900               	iorlw	0
  2133  0079A6  B4D8               	btfsc	status,2,c
  2134  0079A8  D1A1               	goto	l3337
  2135  0079AA  0E23               	movlw	35
  2136  0079AC  ECB1  F033         	call	_le_eeprom
  2137  0079B0  0900               	iorlw	0
  2138  0079B2  B4D8               	btfsc	status,2,c
  2139  0079B4  D19B               	goto	l3337
  2140                           
  2141                           ;bt_usb.h: 83: SPBRGH = 0x04; SPBRG=0xE1; tempo_ms(10);
  2142  0079B6  0E04               	movlw	4
  2143  0079B8  6EB0               	movwf	4016,c	;volatile
  2144  0079BA  0EE1               	movlw	225
  2145  0079BC  6EAF               	movwf	4015,c	;volatile
  2146  0079BE  0E00               	movlw	0
  2147  0079C0  6E3D               	movwf	tempo_ms@i+1,c
  2148  0079C2  0E0A               	movlw	10
  2149  0079C4  6E3C               	movwf	tempo_ms@i,c
  2150  0079C6  EC8E  F034         	call	_tempo_ms	;wreg free
  2151                           
  2152                           ;bt_usb.h: 84: sendr((char *)icp);tempo_ms(200);
  2153  0079CA  0E10               	movlw	high _icp
  2154  0079CC  6E3A               	movwf	sendr@st+1,c
  2155  0079CE  0E8F               	movlw	low _icp
  2156  0079D0  6E39               	movwf	sendr@st,c
  2157  0079D2  ECDC  F034         	call	_sendr	;wreg free
  2158  0079D6  0E00               	movlw	0
  2159  0079D8  6E3D               	movwf	tempo_ms@i+1,c
  2160  0079DA  0EC8               	movlw	200
  2161  0079DC  6E3C               	movwf	tempo_ms@i,c
  2162  0079DE  EC8E  F034         	call	_tempo_ms	;wreg free
  2163                           
  2164                           ;bt_usb.h: 85: if(flagb==1){escreve_eeprom(35, 0); inverte_saida(31759);
  2165  0079E2  040B               	decf	_flagb,w,c
  2166  0079E4  100C               	iorwf	_flagb+1,w,c
  2167  0079E6  A4D8               	btfss	status,2,c
  2168  0079E8  D06F               	goto	l3237
  2169  0079EA  6E40               	movwf	??_bt_ini& (0+255),c
  2170  0079EC  0E00               	movlw	0
  2171  0079EE  6E36               	movwf	escreve_eeprom@dado,c
  2172  0079F0  5040               	movf	??_bt_ini& (0+255),w,c
  2173  0079F2  0E23               	movlw	35
  2174  0079F4  ECCA  F033         	call	_escreve_eeprom
  2175  0079F8  0E7C               	movlw	124
  2176  0079FA  6E37               	movwf	inverte_saida@pino+1,c
  2177  0079FC  0E0F               	movlw	15
  2178  0079FE  6E36               	movwf	inverte_saida@pino,c
  2179  007A00  EC66  F037         	call	_inverte_saida	;wreg free
  2180                           
  2181                           ;bt_usb.h: 86: sendr((char *)icb);tempo_ms(100);inverte_saida(31759);
  2182  007A04  0E10               	movlw	high _icb
  2183  007A06  6E3A               	movwf	sendr@st+1,c
  2184  007A08  0E6F               	movlw	low _icb
  2185  007A0A  6E39               	movwf	sendr@st,c
  2186  007A0C  ECDC  F034         	call	_sendr	;wreg free
  2187  007A10  0E00               	movlw	0
  2188  007A12  6E3D               	movwf	tempo_ms@i+1,c
  2189  007A14  0E64               	movlw	100
  2190  007A16  6E3C               	movwf	tempo_ms@i,c
  2191  007A18  EC8E  F034         	call	_tempo_ms	;wreg free
  2192  007A1C  0E7C               	movlw	124
  2193  007A1E  6E37               	movwf	inverte_saida@pino+1,c
  2194  007A20  0E0F               	movlw	15
  2195  007A22  6E36               	movwf	inverte_saida@pino,c
  2196  007A24  EC66  F037         	call	_inverte_saida	;wreg free
  2197                           
  2198                           ;bt_usb.h: 87: tempo_ms(100);inverte_saida(31759);
  2199  007A28  0E00               	movlw	0
  2200  007A2A  6E3D               	movwf	tempo_ms@i+1,c
  2201  007A2C  0E64               	movlw	100
  2202  007A2E  6E3C               	movwf	tempo_ms@i,c
  2203  007A30  EC8E  F034         	call	_tempo_ms	;wreg free
  2204  007A34  0E7C               	movlw	124
  2205  007A36  6E37               	movwf	inverte_saida@pino+1,c
  2206  007A38  0E0F               	movlw	15
  2207  007A3A  6E36               	movwf	inverte_saida@pino,c
  2208  007A3C  EC66  F037         	call	_inverte_saida	;wreg free
  2209                           
  2210                           ;bt_usb.h: 88: sendr((char *)icn);tempo_ms(100);inverte_saida(31759);
  2211  007A40  0E10               	movlw	high _icn
  2212  007A42  6E3A               	movwf	sendr@st+1,c
  2213  007A44  0E44               	movlw	low _icn
  2214  007A46  6E39               	movwf	sendr@st,c
  2215  007A48  ECDC  F034         	call	_sendr	;wreg free
  2216  007A4C  0E00               	movlw	0
  2217  007A4E  6E3D               	movwf	tempo_ms@i+1,c
  2218  007A50  0E64               	movlw	100
  2219  007A52  6E3C               	movwf	tempo_ms@i,c
  2220  007A54  EC8E  F034         	call	_tempo_ms	;wreg free
  2221  007A58  0E7C               	movlw	124
  2222  007A5A  6E37               	movwf	inverte_saida@pino+1,c
  2223  007A5C  0E0F               	movlw	15
  2224  007A5E  6E36               	movwf	inverte_saida@pino,c
  2225  007A60  EC66  F037         	call	_inverte_saida	;wreg free
  2226                           
  2227                           ;bt_usb.h: 89: tempo_ms(100);inverte_saida(31759);
  2228  007A64  0E00               	movlw	0
  2229  007A66  6E3D               	movwf	tempo_ms@i+1,c
  2230  007A68  0E64               	movlw	100
  2231  007A6A  6E3C               	movwf	tempo_ms@i,c
  2232  007A6C  EC8E  F034         	call	_tempo_ms	;wreg free
  2233  007A70  0E7C               	movlw	124
  2234  007A72  6E37               	movwf	inverte_saida@pino+1,c
  2235  007A74  0E0F               	movlw	15
  2236  007A76  6E36               	movwf	inverte_saida@pino,c
  2237  007A78  EC66  F037         	call	_inverte_saida	;wreg free
  2238                           
  2239                           ;bt_usb.h: 90: sendr((char *)icr);tempo_ms(100);inverte_saida(31759);
  2240  007A7C  0E10               	movlw	high _icr
  2241  007A7E  6E3A               	movwf	sendr@st+1,c
  2242  007A80  0E81               	movlw	low _icr
  2243  007A82  6E39               	movwf	sendr@st,c
  2244  007A84  ECDC  F034         	call	_sendr	;wreg free
  2245  007A88  0E00               	movlw	0
  2246  007A8A  6E3D               	movwf	tempo_ms@i+1,c
  2247  007A8C  0E64               	movlw	100
  2248  007A8E  6E3C               	movwf	tempo_ms@i,c
  2249  007A90  EC8E  F034         	call	_tempo_ms	;wreg free
  2250  007A94  0E7C               	movlw	124
  2251  007A96  6E37               	movwf	inverte_saida@pino+1,c
  2252  007A98  0E0F               	movlw	15
  2253  007A9A  6E36               	movwf	inverte_saida@pino,c
  2254  007A9C  EC66  F037         	call	_inverte_saida	;wreg free
  2255                           
  2256                           ;bt_usb.h: 91: tempo_ms(100);inverte_saida(31759);
  2257  007AA0  0E00               	movlw	0
  2258  007AA2  6E3D               	movwf	tempo_ms@i+1,c
  2259  007AA4  0E64               	movlw	100
  2260  007AA6  6E3C               	movwf	tempo_ms@i,c
  2261  007AA8  EC8E  F034         	call	_tempo_ms	;wreg free
  2262  007AAC  0E7C               	movlw	124
  2263  007AAE  6E37               	movwf	inverte_saida@pino+1,c
  2264  007AB0  0E0F               	movlw	15
  2265  007AB2  6E36               	movwf	inverte_saida@pino,c
  2266  007AB4  EC66  F037         	call	_inverte_saida	;wreg free
  2267                           
  2268                           ;bt_usb.h: 92: flagc=1;flagb=0; }
  2269  007AB8  0E00               	movlw	0
  2270  007ABA  6E0E               	movwf	_flagc+1,c
  2271  007ABC  0E01               	movlw	1
  2272  007ABE  6E0D               	movwf	_flagc,c
  2273  007AC0  0E00               	movlw	0
  2274  007AC2  6E0C               	movwf	_flagb+1,c
  2275  007AC4  0E00               	movlw	0
  2276  007AC6  6E0B               	movwf	_flagb,c
  2277  007AC8                     l3237:
  2278                           
  2279                           ;bt_usb.h: 93: SPBRGH = 0x09; SPBRG=0xC3; tempo_ms(10);
  2280  007AC8  0E09               	movlw	9
  2281  007ACA  6EB0               	movwf	4016,c	;volatile
  2282  007ACC  0EC3               	movlw	195
  2283  007ACE  6EAF               	movwf	4015,c	;volatile
  2284  007AD0  0E00               	movlw	0
  2285  007AD2  6E3D               	movwf	tempo_ms@i+1,c
  2286  007AD4  0E0A               	movlw	10
  2287  007AD6  6E3C               	movwf	tempo_ms@i,c
  2288  007AD8  EC8E  F034         	call	_tempo_ms	;wreg free
  2289                           
  2290                           ;bt_usb.h: 94: sendr((char *)icp);tempo_ms(200);
  2291  007ADC  0E10               	movlw	high _icp
  2292  007ADE  6E3A               	movwf	sendr@st+1,c
  2293  007AE0  0E8F               	movlw	low _icp
  2294  007AE2  6E39               	movwf	sendr@st,c
  2295  007AE4  ECDC  F034         	call	_sendr	;wreg free
  2296  007AE8  0E00               	movlw	0
  2297  007AEA  6E3D               	movwf	tempo_ms@i+1,c
  2298  007AEC  0EC8               	movlw	200
  2299  007AEE  6E3C               	movwf	tempo_ms@i,c
  2300  007AF0  EC8E  F034         	call	_tempo_ms	;wreg free
  2301                           
  2302                           ;bt_usb.h: 95: if(flagb==1){escreve_eeprom(35, 0); inverte_saida(31759);
  2303  007AF4  040B               	decf	_flagb,w,c
  2304  007AF6  100C               	iorwf	_flagb+1,w,c
  2305  007AF8  A4D8               	btfss	status,2,c
  2306  007AFA  D06F               	goto	l3287
  2307  007AFC  6E40               	movwf	??_bt_ini& (0+255),c
  2308  007AFE  0E00               	movlw	0
  2309  007B00  6E36               	movwf	escreve_eeprom@dado,c
  2310  007B02  5040               	movf	??_bt_ini& (0+255),w,c
  2311  007B04  0E23               	movlw	35
  2312  007B06  ECCA  F033         	call	_escreve_eeprom
  2313  007B0A  0E7C               	movlw	124
  2314  007B0C  6E37               	movwf	inverte_saida@pino+1,c
  2315  007B0E  0E0F               	movlw	15
  2316  007B10  6E36               	movwf	inverte_saida@pino,c
  2317  007B12  EC66  F037         	call	_inverte_saida	;wreg free
  2318                           
  2319                           ;bt_usb.h: 96: sendr((char *)icb);tempo_ms(100);inverte_saida(31759);
  2320  007B16  0E10               	movlw	high _icb
  2321  007B18  6E3A               	movwf	sendr@st+1,c
  2322  007B1A  0E6F               	movlw	low _icb
  2323  007B1C  6E39               	movwf	sendr@st,c
  2324  007B1E  ECDC  F034         	call	_sendr	;wreg free
  2325  007B22  0E00               	movlw	0
  2326  007B24  6E3D               	movwf	tempo_ms@i+1,c
  2327  007B26  0E64               	movlw	100
  2328  007B28  6E3C               	movwf	tempo_ms@i,c
  2329  007B2A  EC8E  F034         	call	_tempo_ms	;wreg free
  2330  007B2E  0E7C               	movlw	124
  2331  007B30  6E37               	movwf	inverte_saida@pino+1,c
  2332  007B32  0E0F               	movlw	15
  2333  007B34  6E36               	movwf	inverte_saida@pino,c
  2334  007B36  EC66  F037         	call	_inverte_saida	;wreg free
  2335                           
  2336                           ;bt_usb.h: 97: tempo_ms(100);inverte_saida(31759);
  2337  007B3A  0E00               	movlw	0
  2338  007B3C  6E3D               	movwf	tempo_ms@i+1,c
  2339  007B3E  0E64               	movlw	100
  2340  007B40  6E3C               	movwf	tempo_ms@i,c
  2341  007B42  EC8E  F034         	call	_tempo_ms	;wreg free
  2342  007B46  0E7C               	movlw	124
  2343  007B48  6E37               	movwf	inverte_saida@pino+1,c
  2344  007B4A  0E0F               	movlw	15
  2345  007B4C  6E36               	movwf	inverte_saida@pino,c
  2346  007B4E  EC66  F037         	call	_inverte_saida	;wreg free
  2347                           
  2348                           ;bt_usb.h: 98: sendr((char *)icn);tempo_ms(100);inverte_saida(31759);
  2349  007B52  0E10               	movlw	high _icn
  2350  007B54  6E3A               	movwf	sendr@st+1,c
  2351  007B56  0E44               	movlw	low _icn
  2352  007B58  6E39               	movwf	sendr@st,c
  2353  007B5A  ECDC  F034         	call	_sendr	;wreg free
  2354  007B5E  0E00               	movlw	0
  2355  007B60  6E3D               	movwf	tempo_ms@i+1,c
  2356  007B62  0E64               	movlw	100
  2357  007B64  6E3C               	movwf	tempo_ms@i,c
  2358  007B66  EC8E  F034         	call	_tempo_ms	;wreg free
  2359  007B6A  0E7C               	movlw	124
  2360  007B6C  6E37               	movwf	inverte_saida@pino+1,c
  2361  007B6E  0E0F               	movlw	15
  2362  007B70  6E36               	movwf	inverte_saida@pino,c
  2363  007B72  EC66  F037         	call	_inverte_saida	;wreg free
  2364                           
  2365                           ;bt_usb.h: 99: tempo_ms(100);inverte_saida(31759);
  2366  007B76  0E00               	movlw	0
  2367  007B78  6E3D               	movwf	tempo_ms@i+1,c
  2368  007B7A  0E64               	movlw	100
  2369  007B7C  6E3C               	movwf	tempo_ms@i,c
  2370  007B7E  EC8E  F034         	call	_tempo_ms	;wreg free
  2371  007B82  0E7C               	movlw	124
  2372  007B84  6E37               	movwf	inverte_saida@pino+1,c
  2373  007B86  0E0F               	movlw	15
  2374  007B88  6E36               	movwf	inverte_saida@pino,c
  2375  007B8A  EC66  F037         	call	_inverte_saida	;wreg free
  2376                           
  2377                           ;bt_usb.h: 100: sendr((char *)icr);tempo_ms(100);inverte_saida(31759);
  2378  007B8E  0E10               	movlw	high _icr
  2379  007B90  6E3A               	movwf	sendr@st+1,c
  2380  007B92  0E81               	movlw	low _icr
  2381  007B94  6E39               	movwf	sendr@st,c
  2382  007B96  ECDC  F034         	call	_sendr	;wreg free
  2383  007B9A  0E00               	movlw	0
  2384  007B9C  6E3D               	movwf	tempo_ms@i+1,c
  2385  007B9E  0E64               	movlw	100
  2386  007BA0  6E3C               	movwf	tempo_ms@i,c
  2387  007BA2  EC8E  F034         	call	_tempo_ms	;wreg free
  2388  007BA6  0E7C               	movlw	124
  2389  007BA8  6E37               	movwf	inverte_saida@pino+1,c
  2390  007BAA  0E0F               	movlw	15
  2391  007BAC  6E36               	movwf	inverte_saida@pino,c
  2392  007BAE  EC66  F037         	call	_inverte_saida	;wreg free
  2393                           
  2394                           ;bt_usb.h: 101: tempo_ms(100);inverte_saida(31759);
  2395  007BB2  0E00               	movlw	0
  2396  007BB4  6E3D               	movwf	tempo_ms@i+1,c
  2397  007BB6  0E64               	movlw	100
  2398  007BB8  6E3C               	movwf	tempo_ms@i,c
  2399  007BBA  EC8E  F034         	call	_tempo_ms	;wreg free
  2400  007BBE  0E7C               	movlw	124
  2401  007BC0  6E37               	movwf	inverte_saida@pino+1,c
  2402  007BC2  0E0F               	movlw	15
  2403  007BC4  6E36               	movwf	inverte_saida@pino,c
  2404  007BC6  EC66  F037         	call	_inverte_saida	;wreg free
  2405                           
  2406                           ;bt_usb.h: 102: flagc=1;flagb=0; }
  2407  007BCA  0E00               	movlw	0
  2408  007BCC  6E0E               	movwf	_flagc+1,c
  2409  007BCE  0E01               	movlw	1
  2410  007BD0  6E0D               	movwf	_flagc,c
  2411  007BD2  0E00               	movlw	0
  2412  007BD4  6E0C               	movwf	_flagb+1,c
  2413  007BD6  0E00               	movlw	0
  2414  007BD8  6E0B               	movwf	_flagb,c
  2415  007BDA                     l3287:
  2416                           
  2417                           ;bt_usb.h: 103: SPBRGH = 0x02; SPBRG=0x70; tempo_ms(10);
  2418  007BDA  0E02               	movlw	2
  2419  007BDC  6EB0               	movwf	4016,c	;volatile
  2420  007BDE  0E70               	movlw	112
  2421  007BE0  6EAF               	movwf	4015,c	;volatile
  2422  007BE2  0E00               	movlw	0
  2423  007BE4  6E3D               	movwf	tempo_ms@i+1,c
  2424  007BE6  0E0A               	movlw	10
  2425  007BE8  6E3C               	movwf	tempo_ms@i,c
  2426  007BEA  EC8E  F034         	call	_tempo_ms	;wreg free
  2427                           
  2428                           ;bt_usb.h: 104: sendr((char *)icp);tempo_ms(200);
  2429  007BEE  0E10               	movlw	high _icp
  2430  007BF0  6E3A               	movwf	sendr@st+1,c
  2431  007BF2  0E8F               	movlw	low _icp
  2432  007BF4  6E39               	movwf	sendr@st,c
  2433  007BF6  ECDC  F034         	call	_sendr	;wreg free
  2434  007BFA  0E00               	movlw	0
  2435  007BFC  6E3D               	movwf	tempo_ms@i+1,c
  2436  007BFE  0EC8               	movlw	200
  2437  007C00  6E3C               	movwf	tempo_ms@i,c
  2438  007C02  EC8E  F034         	call	_tempo_ms	;wreg free
  2439                           
  2440                           ;bt_usb.h: 105: if(flagb==1){escreve_eeprom(35, 0); inverte_saida(31759);
  2441  007C06  040B               	decf	_flagb,w,c
  2442  007C08  100C               	iorwf	_flagb+1,w,c
  2443  007C0A  A4D8               	btfss	status,2,c
  2444  007C0C  D06F               	goto	l3337
  2445  007C0E  6E40               	movwf	??_bt_ini& (0+255),c
  2446  007C10  0E00               	movlw	0
  2447  007C12  6E36               	movwf	escreve_eeprom@dado,c
  2448  007C14  5040               	movf	??_bt_ini& (0+255),w,c
  2449  007C16  0E23               	movlw	35
  2450  007C18  ECCA  F033         	call	_escreve_eeprom
  2451  007C1C  0E7C               	movlw	124
  2452  007C1E  6E37               	movwf	inverte_saida@pino+1,c
  2453  007C20  0E0F               	movlw	15
  2454  007C22  6E36               	movwf	inverte_saida@pino,c
  2455  007C24  EC66  F037         	call	_inverte_saida	;wreg free
  2456                           
  2457                           ;bt_usb.h: 106: sendr((char *)icb);tempo_ms(100);inverte_saida(31759);
  2458  007C28  0E10               	movlw	high _icb
  2459  007C2A  6E3A               	movwf	sendr@st+1,c
  2460  007C2C  0E6F               	movlw	low _icb
  2461  007C2E  6E39               	movwf	sendr@st,c
  2462  007C30  ECDC  F034         	call	_sendr	;wreg free
  2463  007C34  0E00               	movlw	0
  2464  007C36  6E3D               	movwf	tempo_ms@i+1,c
  2465  007C38  0E64               	movlw	100
  2466  007C3A  6E3C               	movwf	tempo_ms@i,c
  2467  007C3C  EC8E  F034         	call	_tempo_ms	;wreg free
  2468  007C40  0E7C               	movlw	124
  2469  007C42  6E37               	movwf	inverte_saida@pino+1,c
  2470  007C44  0E0F               	movlw	15
  2471  007C46  6E36               	movwf	inverte_saida@pino,c
  2472  007C48  EC66  F037         	call	_inverte_saida	;wreg free
  2473                           
  2474                           ;bt_usb.h: 107: tempo_ms(100);inverte_saida(31759);
  2475  007C4C  0E00               	movlw	0
  2476  007C4E  6E3D               	movwf	tempo_ms@i+1,c
  2477  007C50  0E64               	movlw	100
  2478  007C52  6E3C               	movwf	tempo_ms@i,c
  2479  007C54  EC8E  F034         	call	_tempo_ms	;wreg free
  2480  007C58  0E7C               	movlw	124
  2481  007C5A  6E37               	movwf	inverte_saida@pino+1,c
  2482  007C5C  0E0F               	movlw	15
  2483  007C5E  6E36               	movwf	inverte_saida@pino,c
  2484  007C60  EC66  F037         	call	_inverte_saida	;wreg free
  2485                           
  2486                           ;bt_usb.h: 108: sendr((char *)icn);tempo_ms(100);inverte_saida(31759);
  2487  007C64  0E10               	movlw	high _icn
  2488  007C66  6E3A               	movwf	sendr@st+1,c
  2489  007C68  0E44               	movlw	low _icn
  2490  007C6A  6E39               	movwf	sendr@st,c
  2491  007C6C  ECDC  F034         	call	_sendr	;wreg free
  2492  007C70  0E00               	movlw	0
  2493  007C72  6E3D               	movwf	tempo_ms@i+1,c
  2494  007C74  0E64               	movlw	100
  2495  007C76  6E3C               	movwf	tempo_ms@i,c
  2496  007C78  EC8E  F034         	call	_tempo_ms	;wreg free
  2497  007C7C  0E7C               	movlw	124
  2498  007C7E  6E37               	movwf	inverte_saida@pino+1,c
  2499  007C80  0E0F               	movlw	15
  2500  007C82  6E36               	movwf	inverte_saida@pino,c
  2501  007C84  EC66  F037         	call	_inverte_saida	;wreg free
  2502                           
  2503                           ;bt_usb.h: 109: tempo_ms(100);inverte_saida(31759);
  2504  007C88  0E00               	movlw	0
  2505  007C8A  6E3D               	movwf	tempo_ms@i+1,c
  2506  007C8C  0E64               	movlw	100
  2507  007C8E  6E3C               	movwf	tempo_ms@i,c
  2508  007C90  EC8E  F034         	call	_tempo_ms	;wreg free
  2509  007C94  0E7C               	movlw	124
  2510  007C96  6E37               	movwf	inverte_saida@pino+1,c
  2511  007C98  0E0F               	movlw	15
  2512  007C9A  6E36               	movwf	inverte_saida@pino,c
  2513  007C9C  EC66  F037         	call	_inverte_saida	;wreg free
  2514                           
  2515                           ;bt_usb.h: 110: sendr((char *)icr);tempo_ms(100);inverte_saida(31759);
  2516  007CA0  0E10               	movlw	high _icr
  2517  007CA2  6E3A               	movwf	sendr@st+1,c
  2518  007CA4  0E81               	movlw	low _icr
  2519  007CA6  6E39               	movwf	sendr@st,c
  2520  007CA8  ECDC  F034         	call	_sendr	;wreg free
  2521  007CAC  0E00               	movlw	0
  2522  007CAE  6E3D               	movwf	tempo_ms@i+1,c
  2523  007CB0  0E64               	movlw	100
  2524  007CB2  6E3C               	movwf	tempo_ms@i,c
  2525  007CB4  EC8E  F034         	call	_tempo_ms	;wreg free
  2526  007CB8  0E7C               	movlw	124
  2527  007CBA  6E37               	movwf	inverte_saida@pino+1,c
  2528  007CBC  0E0F               	movlw	15
  2529  007CBE  6E36               	movwf	inverte_saida@pino,c
  2530  007CC0  EC66  F037         	call	_inverte_saida	;wreg free
  2531                           
  2532                           ;bt_usb.h: 111: tempo_ms(100);inverte_saida(31759);
  2533  007CC4  0E00               	movlw	0
  2534  007CC6  6E3D               	movwf	tempo_ms@i+1,c
  2535  007CC8  0E64               	movlw	100
  2536  007CCA  6E3C               	movwf	tempo_ms@i,c
  2537  007CCC  EC8E  F034         	call	_tempo_ms	;wreg free
  2538  007CD0  0E7C               	movlw	124
  2539  007CD2  6E37               	movwf	inverte_saida@pino+1,c
  2540  007CD4  0E0F               	movlw	15
  2541  007CD6  6E36               	movwf	inverte_saida@pino,c
  2542  007CD8  EC66  F037         	call	_inverte_saida	;wreg free
  2543                           
  2544                           ;bt_usb.h: 112: flagc=1;flagb=0; }
  2545  007CDC  0E00               	movlw	0
  2546  007CDE  6E0E               	movwf	_flagc+1,c
  2547  007CE0  0E01               	movlw	1
  2548  007CE2  6E0D               	movwf	_flagc,c
  2549  007CE4  0E00               	movlw	0
  2550  007CE6  6E0C               	movwf	_flagb+1,c
  2551  007CE8  0E00               	movlw	0
  2552  007CEA  6E0B               	movwf	_flagb,c
  2553  007CEC                     l3337:
  2554                           
  2555                           ;bt_usb.h: 113: }
  2556                           ;bt_usb.h: 115: if(le_eeprom(35)==0 ){
  2557  007CEC  0E23               	movlw	35
  2558  007CEE  ECB1  F033         	call	_le_eeprom
  2559  007CF2  0900               	iorlw	0
  2560  007CF4  A4D8               	btfss	status,2,c
  2561  007CF6  D02D               	goto	l3353
  2562                           
  2563                           ;bt_usb.h: 116: if(icb[0b00000111]==0b01100000){SPBRGH = 0x04; SPBRG=0xE1;}
  2564  007CF8  0E76               	movlw	low (_icb+7)
  2565  007CFA  6EF6               	movwf	tblptrl,c
  2566  007CFC  0E10               	movlw	high (_icb+7)
  2567  007CFE  6EF7               	movwf	tblptrh,c
  2568  007D00  0008               	tblrd		*
  2569  007D02  50F5               	movf	tablat,w,c
  2570  007D04  0A60               	xorlw	96
  2571  007D06  A4D8               	btfss	status,2,c
  2572  007D08  D004               	goto	l3343
  2573  007D0A  0E04               	movlw	4
  2574  007D0C  6EB0               	movwf	4016,c	;volatile
  2575  007D0E  0EE1               	movlw	225
  2576  007D10  6EAF               	movwf	4015,c	;volatile
  2577  007D12                     l3343:
  2578                           
  2579                           ;bt_usb.h: 117: if(icb[0b00000111]==0b01100010){SPBRGH = 0x02; SPBRG=0x70;}
  2580  007D12  0E76               	movlw	low (_icb+7)
  2581  007D14  6EF6               	movwf	tblptrl,c
  2582  007D16  0E10               	movlw	high (_icb+7)
  2583  007D18  6EF7               	movwf	tblptrh,c
  2584  007D1A  0008               	tblrd		*
  2585  007D1C  50F5               	movf	tablat,w,c
  2586  007D1E  0A62               	xorlw	98
  2587  007D20  A4D8               	btfss	status,2,c
  2588  007D22  D004               	goto	l3347
  2589  007D24  0E02               	movlw	2
  2590  007D26  6EB0               	movwf	4016,c	;volatile
  2591  007D28  0E70               	movlw	112
  2592  007D2A  6EAF               	movwf	4015,c	;volatile
  2593  007D2C                     l3347:
  2594                           
  2595                           ;bt_usb.h: 118: if(icb[0b00000111]==0b01101010){SPBRGH = 0x09; SPBRG=0xC3;}
  2596  007D2C  0E76               	movlw	low (_icb+7)
  2597  007D2E  6EF6               	movwf	tblptrl,c
  2598  007D30  0E10               	movlw	high (_icb+7)
  2599  007D32  6EF7               	movwf	tblptrh,c
  2600  007D34  0008               	tblrd		*
  2601  007D36  50F5               	movf	tablat,w,c
  2602  007D38  0A6A               	xorlw	106
  2603  007D3A  A4D8               	btfss	status,2,c
  2604  007D3C  D004               	goto	l3351
  2605  007D3E  0E09               	movlw	9
  2606  007D40  6EB0               	movwf	4016,c	;volatile
  2607  007D42  0EC3               	movlw	195
  2608  007D44  6EAF               	movwf	4015,c	;volatile
  2609  007D46                     l3351:
  2610                           
  2611                           ;bt_usb.h: 119: tempo_ms(100);
  2612  007D46  0E00               	movlw	0
  2613  007D48  6E3D               	movwf	tempo_ms@i+1,c
  2614  007D4A  0E64               	movlw	100
  2615  007D4C  6E3C               	movwf	tempo_ms@i,c
  2616  007D4E  EC8E  F034         	call	_tempo_ms	;wreg free
  2617  007D52                     l3353:
  2618                           
  2619                           ;bt_usb.h: 120: }
  2620                           ;bt_usb.h: 123: if (le_eeprom(33)>0 && le_eeprom(34)>0 && le_eeprom(35)>0){
  2621  007D52  0E21               	movlw	33
  2622  007D54  ECB1  F033         	call	_le_eeprom
  2623  007D58  0900               	iorlw	0
  2624  007D5A  B4D8               	btfsc	status,2,c
  2625  007D5C  D0C8               	goto	l3429
  2626  007D5E  0E22               	movlw	34
  2627  007D60  ECB1  F033         	call	_le_eeprom
  2628  007D64  0900               	iorlw	0
  2629  007D66  B4D8               	btfsc	status,2,c
  2630  007D68  D0C2               	goto	l3429
  2631  007D6A  0E23               	movlw	35
  2632  007D6C  ECB1  F033         	call	_le_eeprom
  2633  007D70  0900               	iorlw	0
  2634  007D72  B4D8               	btfsc	status,2,c
  2635  007D74  D0BC               	goto	l3429
  2636                           
  2637                           ;bt_usb.h: 124: SPBRGH = 0x02; SPBRG=0x70; tempo_ms(10);sendr((char *)icg);tempo_ms(500)
      +                          ;sputc(26);tempo_ms(500);
  2638  007D76  0E02               	movlw	2
  2639  007D78  6EB0               	movwf	4016,c	;volatile
  2640  007D7A  0E70               	movlw	112
  2641  007D7C  6EAF               	movwf	4015,c	;volatile
  2642  007D7E  0E00               	movlw	0
  2643  007D80  6E3D               	movwf	tempo_ms@i+1,c
  2644  007D82  0E0A               	movlw	10
  2645  007D84  6E3C               	movwf	tempo_ms@i,c
  2646  007D86  EC8E  F034         	call	_tempo_ms	;wreg free
  2647  007D8A  0E10               	movlw	high _icg
  2648  007D8C  6E3A               	movwf	sendr@st+1,c
  2649  007D8E  0E78               	movlw	low _icg
  2650  007D90  6E39               	movwf	sendr@st,c
  2651  007D92  ECDC  F034         	call	_sendr	;wreg free
  2652  007D96  0E01               	movlw	1
  2653  007D98  6E3D               	movwf	tempo_ms@i+1,c
  2654  007D9A  0EF4               	movlw	244
  2655  007D9C  6E3C               	movwf	tempo_ms@i,c
  2656  007D9E  EC8E  F034         	call	_tempo_ms	;wreg free
  2657  007DA2  0E1A               	movlw	26
  2658  007DA4  ECDB  F033         	call	_sputc
  2659  007DA8  0E01               	movlw	1
  2660  007DAA  6E3D               	movwf	tempo_ms@i+1,c
  2661  007DAC  0EF4               	movlw	244
  2662  007DAE  6E3C               	movwf	tempo_ms@i,c
  2663  007DB0  EC8E  F034         	call	_tempo_ms	;wreg free
  2664                           
  2665                           ;bt_usb.h: 125: if(flagb==0){
  2666  007DB4  500C               	movf	_flagb+1,w,c
  2667  007DB6  100B               	iorwf	_flagb,w,c
  2668  007DB8  A4D8               	btfss	status,2,c
  2669  007DBA  D01F               	goto	l3385
  2670                           
  2671                           ;bt_usb.h: 126: SPBRGH = 0x04; SPBRG=0xE1; tempo_ms(10);sendr((char *)icg);tempo_ms(500)
      +                          ;sputc(26);tempo_ms(500);}
  2672  007DBC  0E04               	movlw	4
  2673  007DBE  6EB0               	movwf	4016,c	;volatile
  2674  007DC0  0EE1               	movlw	225
  2675  007DC2  6EAF               	movwf	4015,c	;volatile
  2676  007DC4  0E00               	movlw	0
  2677  007DC6  6E3D               	movwf	tempo_ms@i+1,c
  2678  007DC8  0E0A               	movlw	10
  2679  007DCA  6E3C               	movwf	tempo_ms@i,c
  2680  007DCC  EC8E  F034         	call	_tempo_ms	;wreg free
  2681  007DD0  0E10               	movlw	high _icg
  2682  007DD2  6E3A               	movwf	sendr@st+1,c
  2683  007DD4  0E78               	movlw	low _icg
  2684  007DD6  6E39               	movwf	sendr@st,c
  2685  007DD8  ECDC  F034         	call	_sendr	;wreg free
  2686  007DDC  0E01               	movlw	1
  2687  007DDE  6E3D               	movwf	tempo_ms@i+1,c
  2688  007DE0  0EF4               	movlw	244
  2689  007DE2  6E3C               	movwf	tempo_ms@i,c
  2690  007DE4  EC8E  F034         	call	_tempo_ms	;wreg free
  2691  007DE8  0E1A               	movlw	26
  2692  007DEA  ECDB  F033         	call	_sputc
  2693  007DEE  0E01               	movlw	1
  2694  007DF0  6E3D               	movwf	tempo_ms@i+1,c
  2695  007DF2  0EF4               	movlw	244
  2696  007DF4  6E3C               	movwf	tempo_ms@i,c
  2697  007DF6  EC8E  F034         	call	_tempo_ms	;wreg free
  2698  007DFA                     l3385:
  2699                           
  2700                           ;bt_usb.h: 127: if(flagb==0){
  2701  007DFA  500C               	movf	_flagb+1,w,c
  2702  007DFC  100B               	iorwf	_flagb,w,c
  2703  007DFE  A4D8               	btfss	status,2,c
  2704  007E00  D01F               	goto	l3399
  2705                           
  2706                           ;bt_usb.h: 128: SPBRGH = 0x01; SPBRG=0x37; tempo_ms(10);sendr((char *)icg);tempo_ms(500)
      +                          ;sputc(26);tempo_ms(500);}
  2707  007E02  0E01               	movlw	1
  2708  007E04  6EB0               	movwf	4016,c	;volatile
  2709  007E06  0E37               	movlw	55
  2710  007E08  6EAF               	movwf	4015,c	;volatile
  2711  007E0A  0E00               	movlw	0
  2712  007E0C  6E3D               	movwf	tempo_ms@i+1,c
  2713  007E0E  0E0A               	movlw	10
  2714  007E10  6E3C               	movwf	tempo_ms@i,c
  2715  007E12  EC8E  F034         	call	_tempo_ms	;wreg free
  2716  007E16  0E10               	movlw	high _icg
  2717  007E18  6E3A               	movwf	sendr@st+1,c
  2718  007E1A  0E78               	movlw	low _icg
  2719  007E1C  6E39               	movwf	sendr@st,c
  2720  007E1E  ECDC  F034         	call	_sendr	;wreg free
  2721  007E22  0E01               	movlw	1
  2722  007E24  6E3D               	movwf	tempo_ms@i+1,c
  2723  007E26  0EF4               	movlw	244
  2724  007E28  6E3C               	movwf	tempo_ms@i,c
  2725  007E2A  EC8E  F034         	call	_tempo_ms	;wreg free
  2726  007E2E  0E1A               	movlw	26
  2727  007E30  ECDB  F033         	call	_sputc
  2728  007E34  0E01               	movlw	1
  2729  007E36  6E3D               	movwf	tempo_ms@i+1,c
  2730  007E38  0EF4               	movlw	244
  2731  007E3A  6E3C               	movwf	tempo_ms@i,c
  2732  007E3C  EC8E  F034         	call	_tempo_ms	;wreg free
  2733  007E40                     l3399:
  2734                           
  2735                           ;bt_usb.h: 129: if(icg[0b00000111]==0b01101000){SPBRGH = 0x04; SPBRG=0xE1;}
  2736  007E40  0E7F               	movlw	low (_icg+7)
  2737  007E42  6EF6               	movwf	tblptrl,c
  2738  007E44  0E10               	movlw	high (_icg+7)
  2739  007E46  6EF7               	movwf	tblptrh,c
  2740  007E48  0008               	tblrd		*
  2741  007E4A  50F5               	movf	tablat,w,c
  2742  007E4C  0A68               	xorlw	104
  2743  007E4E  A4D8               	btfss	status,2,c
  2744  007E50  D004               	goto	l3403
  2745  007E52  0E04               	movlw	4
  2746  007E54  6EB0               	movwf	4016,c	;volatile
  2747  007E56  0EE1               	movlw	225
  2748  007E58  6EAF               	movwf	4015,c	;volatile
  2749  007E5A                     l3403:
  2750                           
  2751                           ;bt_usb.h: 130: if(icg[0b00000111]==0b01101010){SPBRGH = 0x02; SPBRG=0x70;}
  2752  007E5A  0E7F               	movlw	low (_icg+7)
  2753  007E5C  6EF6               	movwf	tblptrl,c
  2754  007E5E  0E10               	movlw	high (_icg+7)
  2755  007E60  6EF7               	movwf	tblptrh,c
  2756  007E62  0008               	tblrd		*
  2757  007E64  50F5               	movf	tablat,w,c
  2758  007E66  0A6A               	xorlw	106
  2759  007E68  A4D8               	btfss	status,2,c
  2760  007E6A  D004               	goto	l3407
  2761  007E6C  0E02               	movlw	2
  2762  007E6E  6EB0               	movwf	4016,c	;volatile
  2763  007E70  0E70               	movlw	112
  2764  007E72  6EAF               	movwf	4015,c	;volatile
  2765  007E74                     l3407:
  2766                           
  2767                           ;bt_usb.h: 131: if(icg[0b00000111]==0b01101100){SPBRGH = 0x01; SPBRG=0x37;}
  2768  007E74  0E7F               	movlw	low (_icg+7)
  2769  007E76  6EF6               	movwf	tblptrl,c
  2770  007E78  0E10               	movlw	high (_icg+7)
  2771  007E7A  6EF7               	movwf	tblptrh,c
  2772  007E7C  0008               	tblrd		*
  2773  007E7E  50F5               	movf	tablat,w,c
  2774  007E80  0A6C               	xorlw	108
  2775  007E82  A4D8               	btfss	status,2,c
  2776  007E84  D004               	goto	l3411
  2777  007E86  0E01               	movlw	1
  2778  007E88  6EB0               	movwf	4016,c	;volatile
  2779  007E8A  0E37               	movlw	55
  2780  007E8C  6EAF               	movwf	4015,c	;volatile
  2781  007E8E                     l3411:
  2782                           
  2783                           ;bt_usb.h: 132: tempo_ms(500);
  2784  007E8E  0E01               	movlw	1
  2785  007E90  6E3D               	movwf	tempo_ms@i+1,c
  2786  007E92  0EF4               	movlw	244
  2787  007E94  6E3C               	movwf	tempo_ms@i,c
  2788  007E96  EC8E  F034         	call	_tempo_ms	;wreg free
  2789                           
  2790                           ;bt_usb.h: 133: sendr((char *)icm);tempo_ms(500);sputc(26);tempo_ms(500);
  2791  007E9A  0E10               	movlw	high _icm
  2792  007E9C  6E3A               	movwf	sendr@st+1,c
  2793  007E9E  0E55               	movlw	low _icm
  2794  007EA0  6E39               	movwf	sendr@st,c
  2795  007EA2  ECDC  F034         	call	_sendr	;wreg free
  2796  007EA6  0E01               	movlw	1
  2797  007EA8  6E3D               	movwf	tempo_ms@i+1,c
  2798  007EAA  0EF4               	movlw	244
  2799  007EAC  6E3C               	movwf	tempo_ms@i,c
  2800  007EAE  EC8E  F034         	call	_tempo_ms	;wreg free
  2801  007EB2  0E1A               	movlw	26
  2802  007EB4  ECDB  F033         	call	_sputc
  2803  007EB8  0E01               	movlw	1
  2804  007EBA  6E3D               	movwf	tempo_ms@i+1,c
  2805  007EBC  0EF4               	movlw	244
  2806  007EBE  6E3C               	movwf	tempo_ms@i,c
  2807  007EC0  EC8E  F034         	call	_tempo_ms	;wreg free
  2808                           
  2809                           ;bt_usb.h: 134: if(flagb==1){escreve_eeprom(33, 0);flagb=0;tempo_ms(10);}
  2810  007EC4  040B               	decf	_flagb,w,c
  2811  007EC6  100C               	iorwf	_flagb+1,w,c
  2812  007EC8  A4D8               	btfss	status,2,c
  2813  007ECA  D011               	goto	l3429
  2814  007ECC  6E40               	movwf	??_bt_ini& (0+255),c
  2815  007ECE  0E00               	movlw	0
  2816  007ED0  6E36               	movwf	escreve_eeprom@dado,c
  2817  007ED2  5040               	movf	??_bt_ini& (0+255),w,c
  2818  007ED4  0E21               	movlw	33
  2819  007ED6  ECCA  F033         	call	_escreve_eeprom
  2820  007EDA  0E00               	movlw	0
  2821  007EDC  6E0C               	movwf	_flagb+1,c
  2822  007EDE  0E00               	movlw	0
  2823  007EE0  6E0B               	movwf	_flagb,c
  2824  007EE2  0E00               	movlw	0
  2825  007EE4  6E3D               	movwf	tempo_ms@i+1,c
  2826  007EE6  0E0A               	movlw	10
  2827  007EE8  6E3C               	movwf	tempo_ms@i,c
  2828  007EEA  EC8E  F034         	call	_tempo_ms	;wreg free
  2829  007EEE                     l3429:
  2830                           
  2831                           ;bt_usb.h: 135: }
  2832                           ;bt_usb.h: 137: if(le_eeprom(33)==0 ){
  2833  007EEE  0E21               	movlw	33
  2834  007EF0  ECB1  F033         	call	_le_eeprom
  2835  007EF4  0900               	iorlw	0
  2836  007EF6  A4D8               	btfss	status,2,c
  2837  007EF8  D027               	goto	l3443
  2838                           
  2839                           ;bt_usb.h: 138: if(icg[0b00000111]==0b01101000){SPBRGH = 0x04; SPBRG=0xE1;}
  2840  007EFA  0E7F               	movlw	low (_icg+7)
  2841  007EFC  6EF6               	movwf	tblptrl,c
  2842  007EFE  0E10               	movlw	high (_icg+7)
  2843  007F00  6EF7               	movwf	tblptrh,c
  2844  007F02  0008               	tblrd		*
  2845  007F04  50F5               	movf	tablat,w,c
  2846  007F06  0A68               	xorlw	104
  2847  007F08  A4D8               	btfss	status,2,c
  2848  007F0A  D004               	goto	l3435
  2849  007F0C  0E04               	movlw	4
  2850  007F0E  6EB0               	movwf	4016,c	;volatile
  2851  007F10  0EE1               	movlw	225
  2852  007F12  6EAF               	movwf	4015,c	;volatile
  2853  007F14                     l3435:
  2854                           
  2855                           ;bt_usb.h: 139: if(icg[0b00000111]==0b01101010){SPBRGH = 0x02; SPBRG=0x70;}
  2856  007F14  0E7F               	movlw	low (_icg+7)
  2857  007F16  6EF6               	movwf	tblptrl,c
  2858  007F18  0E10               	movlw	high (_icg+7)
  2859  007F1A  6EF7               	movwf	tblptrh,c
  2860  007F1C  0008               	tblrd		*
  2861  007F1E  50F5               	movf	tablat,w,c
  2862  007F20  0A6A               	xorlw	106
  2863  007F22  A4D8               	btfss	status,2,c
  2864  007F24  D004               	goto	l3439
  2865  007F26  0E02               	movlw	2
  2866  007F28  6EB0               	movwf	4016,c	;volatile
  2867  007F2A  0E70               	movlw	112
  2868  007F2C  6EAF               	movwf	4015,c	;volatile
  2869  007F2E                     l3439:
  2870                           
  2871                           ;bt_usb.h: 140: if(icg[0b00000111]==0b01101100){SPBRGH = 0x01; SPBRG=0x37;}
  2872  007F2E  0E7F               	movlw	low (_icg+7)
  2873  007F30  6EF6               	movwf	tblptrl,c
  2874  007F32  0E10               	movlw	high (_icg+7)
  2875  007F34  6EF7               	movwf	tblptrh,c
  2876  007F36  0008               	tblrd		*
  2877  007F38  50F5               	movf	tablat,w,c
  2878  007F3A  0A6C               	xorlw	108
  2879  007F3C  A4D8               	btfss	status,2,c
  2880  007F3E  D004               	goto	l3443
  2881  007F40  0E01               	movlw	1
  2882  007F42  6EB0               	movwf	4016,c	;volatile
  2883  007F44  0E37               	movlw	55
  2884  007F46  6EAF               	movwf	4015,c	;volatile
  2885  007F48                     l3443:
  2886                           
  2887                           ;bt_usb.h: 141: }
  2888                           ;bt_usb.h: 143: if (le_eeprom(33)>0 && le_eeprom(34)>0 && le_eeprom(35)>0) {
  2889  007F48  0E21               	movlw	33
  2890  007F4A  ECB1  F033         	call	_le_eeprom
  2891  007F4E  0900               	iorlw	0
  2892  007F50  B4D8               	btfsc	status,2,c
  2893  007F52  D028               	goto	l3463
  2894  007F54  0E22               	movlw	34
  2895  007F56  ECB1  F033         	call	_le_eeprom
  2896  007F5A  0900               	iorlw	0
  2897  007F5C  B4D8               	btfsc	status,2,c
  2898  007F5E  D022               	goto	l3463
  2899  007F60  0E23               	movlw	35
  2900  007F62  ECB1  F033         	call	_le_eeprom
  2901  007F66  0900               	iorlw	0
  2902  007F68  B4D8               	btfsc	status,2,c
  2903  007F6A  D01C               	goto	l3463
  2904                           
  2905                           ;bt_usb.h: 144: flagb=0;configBR6();
  2906  007F6C  0E00               	movlw	0
  2907  007F6E  6E0C               	movwf	_flagb+1,c
  2908  007F70  0E00               	movlw	0
  2909  007F72  6E0B               	movwf	_flagb,c
  2910  007F74  EC08  F035         	call	_configBR6	;wreg free
  2911                           
  2912                           ;bt_usb.h: 145: INTCON2bits.RBPU = 0;
  2913  007F78  9EF1               	bcf	intcon2,7,c	;volatile
  2914                           
  2915                           ;bt_usb.h: 146: if(flagb==1){escreve_eeprom(34, 0);flagb=0;tempo_ms(10);}
  2916  007F7A  040B               	decf	_flagb,w,c
  2917  007F7C  100C               	iorwf	_flagb+1,w,c
  2918  007F7E  A4D8               	btfss	status,2,c
  2919  007F80  D011               	goto	l3463
  2920  007F82  6E40               	movwf	??_bt_ini& (0+255),c
  2921  007F84  0E00               	movlw	0
  2922  007F86  6E36               	movwf	escreve_eeprom@dado,c
  2923  007F88  5040               	movf	??_bt_ini& (0+255),w,c
  2924  007F8A  0E22               	movlw	34
  2925  007F8C  ECCA  F033         	call	_escreve_eeprom
  2926  007F90  0E00               	movlw	0
  2927  007F92  6E0C               	movwf	_flagb+1,c
  2928  007F94  0E00               	movlw	0
  2929  007F96  6E0B               	movwf	_flagb,c
  2930  007F98  0E00               	movlw	0
  2931  007F9A  6E3D               	movwf	tempo_ms@i+1,c
  2932  007F9C  0E0A               	movlw	10
  2933  007F9E  6E3C               	movwf	tempo_ms@i,c
  2934  007FA0  EC8E  F034         	call	_tempo_ms	;wreg free
  2935  007FA4                     l3463:
  2936                           
  2937                           ;bt_usb.h: 147: }
  2938                           ;bt_usb.h: 148: if(le_eeprom(34)==0 ){
  2939  007FA4  0E22               	movlw	34
  2940  007FA6  ECB1  F033         	call	_le_eeprom
  2941  007FAA  0900               	iorlw	0
  2942  007FAC  A4D8               	btfss	status,2,c
  2943  007FAE  D027               	goto	l539
  2944                           
  2945                           ;bt_usb.h: 149: if(icgs[0b00001000]==0b01110010){SPBRGH = 0x04; SPBRG=0xE1;}
  2946  007FB0  0E25               	movlw	low (_icgs+8)
  2947  007FB2  6EF6               	movwf	tblptrl,c
  2948  007FB4  0E10               	movlw	high (_icgs+8)
  2949  007FB6  6EF7               	movwf	tblptrh,c
  2950  007FB8  0008               	tblrd		*
  2951  007FBA  50F5               	movf	tablat,w,c
  2952  007FBC  0A72               	xorlw	114
  2953  007FBE  A4D8               	btfss	status,2,c
  2954  007FC0  D004               	goto	l3469
  2955  007FC2  0E04               	movlw	4
  2956  007FC4  6EB0               	movwf	4016,c	;volatile
  2957  007FC6  0EE1               	movlw	225
  2958  007FC8  6EAF               	movwf	4015,c	;volatile
  2959  007FCA                     l3469:
  2960                           
  2961                           ;bt_usb.h: 150: if(icgs[0b00001000]==0b01100010){SPBRGH = 0x02; SPBRG=0x70;}
  2962  007FCA  0E25               	movlw	low (_icgs+8)
  2963  007FCC  6EF6               	movwf	tblptrl,c
  2964  007FCE  0E10               	movlw	high (_icgs+8)
  2965  007FD0  6EF7               	movwf	tblptrh,c
  2966  007FD2  0008               	tblrd		*
  2967  007FD4  50F5               	movf	tablat,w,c
  2968  007FD6  0A62               	xorlw	98
  2969  007FD8  A4D8               	btfss	status,2,c
  2970  007FDA  D004               	goto	l3473
  2971  007FDC  0E02               	movlw	2
  2972  007FDE  6EB0               	movwf	4016,c	;volatile
  2973  007FE0  0E70               	movlw	112
  2974  007FE2  6EAF               	movwf	4015,c	;volatile
  2975  007FE4                     l3473:
  2976                           
  2977                           ;bt_usb.h: 151: if(icgs[0b00001000]==0b01100110){SPBRGH = 0x01; SPBRG=0x37;}
  2978  007FE4  0E25               	movlw	low (_icgs+8)
  2979  007FE6  6EF6               	movwf	tblptrl,c
  2980  007FE8  0E10               	movlw	high (_icgs+8)
  2981  007FEA  6EF7               	movwf	tblptrh,c
  2982  007FEC  0008               	tblrd		*
  2983  007FEE  50F5               	movf	tablat,w,c
  2984  007FF0  0A66               	xorlw	102
  2985  007FF2  A4D8               	btfss	status,2,c
  2986  007FF4  D004               	goto	l539
  2987  007FF6  0E01               	movlw	1
  2988  007FF8  6EB0               	movwf	4016,c	;volatile
  2989  007FFA  0E37               	movlw	55
  2990  007FFC  6EAF               	movwf	4015,c	;volatile
  2991  007FFE                     l539:
  2992  007FFE  0012               	return	
  2993  008000                     __end_of_bt_ini:
  2994                           	opt stack 0
  2995                           tblptru	equ	0xFF8
  2996                           tblptrh	equ	0xFF7
  2997                           tblptrl	equ	0xFF6
  2998                           tablat	equ	0xFF5
  2999                           prodh	equ	0xFF4
  3000                           prodl	equ	0xFF3
  3001                           intcon	equ	0xFF2
  3002                           intcon2	equ	0xFF1
  3003                           intcon3	equ	0xFF0
  3004                           postinc0	equ	0xFEE
  3005                           wreg	equ	0xFE8
  3006                           postdec1	equ	0xFE5
  3007                           fsr1l	equ	0xFE1
  3008                           indf2	equ	0xFDF
  3009                           fsr2h	equ	0xFDA
  3010                           fsr2l	equ	0xFD9
  3011                           status	equ	0xFD8
  3012                           
  3013 ;; *************** function _le_eeprom *****************
  3014 ;; Defined at:
  3015 ;;		line 425 in file "SanUSB48X.h"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;  endereco        1    wreg     unsigned char 
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;  endereco        1   20[COMRAM] unsigned char 
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  1    wreg      unsigned char 
  3022 ;; Registers used:
  3023 ;;		wreg, status,2
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3029 ;;      Params:         0       0       0       0       0       0       0       0       0
  3030 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3031 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3032 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3033 ;;Total ram usage:        1 bytes
  3034 ;; Hardware stack levels used:    1
  3035 ;; Hardware stack levels required when called:    2
  3036 ;; This function calls:
  3037 ;;		Nothing
  3038 ;; This function is called by:
  3039 ;;		_clock_int_48MHz
  3040 ;;		_bt_ini
  3041 ;;		_main
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           	psect	text9
  3046  006762                     __ptext9:
  3047                           	opt stack 0
  3048  006762                     _le_eeprom:
  3049                           	opt stack 28
  3050                           
  3051                           ;incstack = 0
  3052                           ;le_eeprom@endereco stored from wreg
  3053  006762  CFE8 F036          	movff	wreg,le_eeprom@endereco
  3054                           
  3055                           ;SanUSB48X.h: 427: EEADR = endereco;
  3056  006766  C036  FFA9         	movff	le_eeprom@endereco,4009	;volatile
  3057                           
  3058                           ;SanUSB48X.h: 428: EECON1bits.WREN = 0;
  3059  00676A  94A6               	bcf	4006,2,c	;volatile
  3060                           
  3061                           ;SanUSB48X.h: 429: EECON1bits.EEPGD = 0;
  3062  00676C  9EA6               	bcf	4006,7,c	;volatile
  3063                           
  3064                           ;SanUSB48X.h: 430: EECON1bits.CFGS = 0;
  3065  00676E  9CA6               	bcf	4006,6,c	;volatile
  3066                           
  3067                           ;SanUSB48X.h: 431: EECON1bits.RD = 1;
  3068  006770  80A6               	bsf	4006,0,c	;volatile
  3069                           
  3070                           ;SanUSB48X.h: 432: return EEDATA;
  3071  006772  50A8               	movf	4008,w,c	;volatile
  3072  006774  0012               	return	
  3073  006776                     __end_of_le_eeprom:
  3074                           	opt stack 0
  3075                           tblptru	equ	0xFF8
  3076                           tblptrh	equ	0xFF7
  3077                           tblptrl	equ	0xFF6
  3078                           tablat	equ	0xFF5
  3079                           prodh	equ	0xFF4
  3080                           prodl	equ	0xFF3
  3081                           intcon	equ	0xFF2
  3082                           intcon2	equ	0xFF1
  3083                           intcon3	equ	0xFF0
  3084                           postinc0	equ	0xFEE
  3085                           wreg	equ	0xFE8
  3086                           postdec1	equ	0xFE5
  3087                           fsr1l	equ	0xFE1
  3088                           indf2	equ	0xFDF
  3089                           fsr2h	equ	0xFDA
  3090                           fsr2l	equ	0xFD9
  3091                           status	equ	0xFD8
  3092                           
  3093 ;; *************** function _escreve_eeprom *****************
  3094 ;; Defined at:
  3095 ;;		line 412 in file "SanUSB48X.h"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;  endereco        1    wreg     unsigned char 
  3098 ;;  dado            1   20[COMRAM] unsigned char 
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;  endereco        1   21[COMRAM] unsigned char 
  3101 ;; Return value:  Size  Location     Type
  3102 ;;		None               void
  3103 ;; Registers used:
  3104 ;;		wreg, status,2
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3110 ;;      Params:         1       0       0       0       0       0       0       0       0
  3111 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3112 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3113 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3114 ;;Total ram usage:        2 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:    2
  3117 ;; This function calls:
  3118 ;;		Nothing
  3119 ;; This function is called by:
  3120 ;;		_bt_ini
  3121 ;;		_main
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           	psect	text10
  3126  006794                     __ptext10:
  3127                           	opt stack 0
  3128  006794                     _escreve_eeprom:
  3129                           	opt stack 28
  3130                           
  3131                           ;incstack = 0
  3132                           ;escreve_eeprom@endereco stored from wreg
  3133  006794  CFE8 F037          	movff	wreg,escreve_eeprom@endereco
  3134                           
  3135                           ;SanUSB48X.h: 414: EECON1bits.EEPGD = 0;
  3136  006798  9EA6               	bcf	4006,7,c	;volatile
  3137                           
  3138                           ;SanUSB48X.h: 415: EECON1bits.CFGS = 0;
  3139  00679A  9CA6               	bcf	4006,6,c	;volatile
  3140                           
  3141                           ;SanUSB48X.h: 416: EECON1bits.WREN = 1;
  3142  00679C  84A6               	bsf	4006,2,c	;volatile
  3143                           
  3144                           ;SanUSB48X.h: 417: EEADR = endereco;
  3145  00679E  C037  FFA9         	movff	escreve_eeprom@endereco,4009	;volatile
  3146                           
  3147                           ;SanUSB48X.h: 418: EEDATA = dado;
  3148  0067A2  C036  FFA8         	movff	escreve_eeprom@dado,4008	;volatile
  3149                           
  3150                           ;SanUSB48X.h: 419: EECON2 = 0x55;
  3151  0067A6  0E55               	movlw	85
  3152  0067A8  6EA7               	movwf	4007,c	;volatile
  3153                           
  3154                           ;SanUSB48X.h: 420: EECON2 = 0xaa;
  3155  0067AA  0EAA               	movlw	170
  3156  0067AC  6EA7               	movwf	4007,c	;volatile
  3157                           
  3158                           ;SanUSB48X.h: 421: EECON1bits.WR = 1;
  3159  0067AE  82A6               	bsf	4006,1,c	;volatile
  3160  0067B0                     l367:
  3161  0067B0  A2A6               	btfss	4006,1,c	;volatile
  3162  0067B2  0012               	return	
  3163  0067B4  D7FD               	goto	l367
  3164  0067B6                     __end_of_escreve_eeprom:
  3165                           	opt stack 0
  3166                           tblptru	equ	0xFF8
  3167                           tblptrh	equ	0xFF7
  3168                           tblptrl	equ	0xFF6
  3169                           tablat	equ	0xFF5
  3170                           prodh	equ	0xFF4
  3171                           prodl	equ	0xFF3
  3172                           intcon	equ	0xFF2
  3173                           intcon2	equ	0xFF1
  3174                           intcon3	equ	0xFF0
  3175                           postinc0	equ	0xFEE
  3176                           wreg	equ	0xFE8
  3177                           postdec1	equ	0xFE5
  3178                           fsr1l	equ	0xFE1
  3179                           indf2	equ	0xFDF
  3180                           fsr2h	equ	0xFDA
  3181                           fsr2l	equ	0xFD9
  3182                           status	equ	0xFD8
  3183                           
  3184 ;; *************** function _configBR6 *****************
  3185 ;; Defined at:
  3186 ;;		line 68 in file "bt_usb.h"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;		None
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;		None
  3191 ;; Return value:  Size  Location     Type
  3192 ;;		None               void
  3193 ;; Registers used:
  3194 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3200 ;;      Params:         0       0       0       0       0       0       0       0       0
  3201 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3202 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3203 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3204 ;;Total ram usage:        0 bytes
  3205 ;; Hardware stack levels used:    1
  3206 ;; Hardware stack levels required when called:    6
  3207 ;; This function calls:
  3208 ;;		_inverte_saida
  3209 ;;		_modoAttention
  3210 ;;		_modoNormal
  3211 ;;		_sendr
  3212 ;;		_tempo_ms
  3213 ;; This function is called by:
  3214 ;;		_bt_ini
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text11
  3219  006A10                     __ptext11:
  3220                           	opt stack 0
  3221  006A10                     _configBR6:
  3222                           	opt stack 23
  3223                           
  3224                           ;bt_usb.h: 70: modoAttention();
  3225                           
  3226                           ;incstack = 0
  3227  006A10  EC4C  F034         	call	_modoAttention	;wreg free
  3228                           
  3229                           ;bt_usb.h: 71: flagb=0;sendr((char *)icgs);
  3230  006A14  0E00               	movlw	0
  3231  006A16  6E0C               	movwf	_flagb+1,c
  3232  006A18  0E00               	movlw	0
  3233  006A1A  6E0B               	movwf	_flagb,c
  3234  006A1C  0E10               	movlw	high _icgs
  3235  006A1E  6E3A               	movwf	sendr@st+1,c
  3236  006A20  0E1D               	movlw	low _icgs
  3237  006A22  6E39               	movwf	sendr@st,c
  3238  006A24  ECDC  F034         	call	_sendr	;wreg free
  3239                           
  3240                           ;bt_usb.h: 72: inverte_saida(31759); tempo_ms(1000);
  3241  006A28  0E7C               	movlw	124
  3242  006A2A  6E37               	movwf	inverte_saida@pino+1,c
  3243  006A2C  0E0F               	movlw	15
  3244  006A2E  6E36               	movwf	inverte_saida@pino,c
  3245  006A30  EC66  F037         	call	_inverte_saida	;wreg free
  3246  006A34  0E03               	movlw	3
  3247  006A36  6E3D               	movwf	tempo_ms@i+1,c
  3248  006A38  0EE8               	movlw	232
  3249  006A3A  6E3C               	movwf	tempo_ms@i,c
  3250  006A3C  EC8E  F034         	call	_tempo_ms	;wreg free
  3251                           
  3252                           ;bt_usb.h: 73: sendr((char *)icms);
  3253  006A40  0E10               	movlw	high _icms
  3254  006A42  6E3A               	movwf	sendr@st+1,c
  3255  006A44  0E31               	movlw	low _icms
  3256  006A46  6E39               	movwf	sendr@st,c
  3257  006A48  ECDC  F034         	call	_sendr	;wreg free
  3258                           
  3259                           ;bt_usb.h: 74: inverte_saida(31759); tempo_ms(1000);
  3260  006A4C  0E7C               	movlw	124
  3261  006A4E  6E37               	movwf	inverte_saida@pino+1,c
  3262  006A50  0E0F               	movlw	15
  3263  006A52  6E36               	movwf	inverte_saida@pino,c
  3264  006A54  EC66  F037         	call	_inverte_saida	;wreg free
  3265  006A58  0E03               	movlw	3
  3266  006A5A  6E3D               	movwf	tempo_ms@i+1,c
  3267  006A5C  0EE8               	movlw	232
  3268  006A5E  6E3C               	movwf	tempo_ms@i,c
  3269  006A60  EC8E  F034         	call	_tempo_ms	;wreg free
  3270                           
  3271                           ;bt_usb.h: 75: modoNormal();
  3272  006A64  EC35  F035         	call	_modoNormal	;wreg free
  3273  006A68  0012               	return	
  3274  006A6A                     __end_of_configBR6:
  3275                           	opt stack 0
  3276                           tblptru	equ	0xFF8
  3277                           tblptrh	equ	0xFF7
  3278                           tblptrl	equ	0xFF6
  3279                           tablat	equ	0xFF5
  3280                           prodh	equ	0xFF4
  3281                           prodl	equ	0xFF3
  3282                           intcon	equ	0xFF2
  3283                           intcon2	equ	0xFF1
  3284                           intcon3	equ	0xFF0
  3285                           postinc0	equ	0xFEE
  3286                           wreg	equ	0xFE8
  3287                           postdec1	equ	0xFE5
  3288                           fsr1l	equ	0xFE1
  3289                           indf2	equ	0xFDF
  3290                           fsr2h	equ	0xFDA
  3291                           fsr2l	equ	0xFD9
  3292                           status	equ	0xFD8
  3293                           
  3294 ;; *************** function _modoNormal *****************
  3295 ;; Defined at:
  3296 ;;		line 59 in file "bt_usb.h"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;		None
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;		None
  3301 ;; Return value:  Size  Location     Type
  3302 ;;		None               void
  3303 ;; Registers used:
  3304 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3305 ;; Tracked objects:
  3306 ;;		On entry : 0/0
  3307 ;;		On exit  : 0/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3310 ;;      Params:         0       0       0       0       0       0       0       0       0
  3311 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3312 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3313 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3314 ;;Total ram usage:        0 bytes
  3315 ;; Hardware stack levels used:    1
  3316 ;; Hardware stack levels required when called:    5
  3317 ;; This function calls:
  3318 ;;		_nivel_baixo
  3319 ;;		_resetBT
  3320 ;; This function is called by:
  3321 ;;		_configBR6
  3322 ;;		_main
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326                           	psect	text12
  3327  006A6A                     __ptext12:
  3328                           	opt stack 0
  3329  006A6A                     _modoNormal:
  3330                           	opt stack 25
  3331                           
  3332                           ;bt_usb.h: 61: nivel_baixo(31754);
  3333                           
  3334                           ;incstack = 0
  3335  006A6A  0E7C               	movlw	124
  3336  006A6C  6E37               	movwf	nivel_baixo@pino+1,c
  3337  006A6E  0E0A               	movlw	10
  3338  006A70  6E36               	movwf	nivel_baixo@pino,c
  3339  006A72  ECB4  F039         	call	_nivel_baixo	;wreg free
  3340                           
  3341                           ;bt_usb.h: 62: resetBT();
  3342  006A76  EC2D  F034         	call	_resetBT	;wreg free
  3343                           
  3344                           ;bt_usb.h: 63: if(icgs[0b00001000]==0b01110010){SPBRGH = 0x04; SPBRG=0xE1;}
  3345  006A7A  0E25               	movlw	low (_icgs+8)
  3346  006A7C  6EF6               	movwf	tblptrl,c
  3347  006A7E  0E10               	movlw	high (_icgs+8)
  3348  006A80  6EF7               	movwf	tblptrh,c
  3349  006A82  0008               	tblrd		*
  3350  006A84  50F5               	movf	tablat,w,c
  3351  006A86  0A72               	xorlw	114
  3352  006A88  A4D8               	btfss	status,2,c
  3353  006A8A  D004               	goto	l3007
  3354  006A8C  0E04               	movlw	4
  3355  006A8E  6EB0               	movwf	4016,c	;volatile
  3356  006A90  0EE1               	movlw	225
  3357  006A92  6EAF               	movwf	4015,c	;volatile
  3358  006A94                     l3007:
  3359                           
  3360                           ;bt_usb.h: 64: if(icgs[0b00001000]==0b01100010){SPBRGH = 0x02; SPBRG=0x70;}
  3361  006A94  0E25               	movlw	low (_icgs+8)
  3362  006A96  6EF6               	movwf	tblptrl,c
  3363  006A98  0E10               	movlw	high (_icgs+8)
  3364  006A9A  6EF7               	movwf	tblptrh,c
  3365  006A9C  0008               	tblrd		*
  3366  006A9E  50F5               	movf	tablat,w,c
  3367  006AA0  0A62               	xorlw	98
  3368  006AA2  A4D8               	btfss	status,2,c
  3369  006AA4  D004               	goto	l3011
  3370  006AA6  0E02               	movlw	2
  3371  006AA8  6EB0               	movwf	4016,c	;volatile
  3372  006AAA  0E70               	movlw	112
  3373  006AAC  6EAF               	movwf	4015,c	;volatile
  3374  006AAE                     l3011:
  3375                           
  3376                           ;bt_usb.h: 65: if(icgs[0b00001000]==0b01100110){SPBRGH = 0x01; SPBRG=0x37;}
  3377  006AAE  0E25               	movlw	low (_icgs+8)
  3378  006AB0  6EF6               	movwf	tblptrl,c
  3379  006AB2  0E10               	movlw	high (_icgs+8)
  3380  006AB4  6EF7               	movwf	tblptrh,c
  3381  006AB6  0008               	tblrd		*
  3382  006AB8  50F5               	movf	tablat,w,c
  3383  006ABA  0A66               	xorlw	102
  3384  006ABC  A4D8               	btfss	status,2,c
  3385  006ABE  D004               	goto	l508
  3386  006AC0  0E01               	movlw	1
  3387  006AC2  6EB0               	movwf	4016,c	;volatile
  3388  006AC4  0E37               	movlw	55
  3389  006AC6  6EAF               	movwf	4015,c	;volatile
  3390  006AC8                     l508:
  3391  006AC8  0012               	return	
  3392  006ACA                     __end_of_modoNormal:
  3393                           	opt stack 0
  3394                           tblptru	equ	0xFF8
  3395                           tblptrh	equ	0xFF7
  3396                           tblptrl	equ	0xFF6
  3397                           tablat	equ	0xFF5
  3398                           prodh	equ	0xFF4
  3399                           prodl	equ	0xFF3
  3400                           intcon	equ	0xFF2
  3401                           intcon2	equ	0xFF1
  3402                           intcon3	equ	0xFF0
  3403                           postinc0	equ	0xFEE
  3404                           wreg	equ	0xFE8
  3405                           postdec1	equ	0xFE5
  3406                           fsr1l	equ	0xFE1
  3407                           indf2	equ	0xFDF
  3408                           fsr2h	equ	0xFDA
  3409                           fsr2l	equ	0xFD9
  3410                           status	equ	0xFD8
  3411                           
  3412 ;; *************** function _resetBT *****************
  3413 ;; Defined at:
  3414 ;;		line 40 in file "bt_usb.h"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;		None
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;		None
  3419 ;; Return value:  Size  Location     Type
  3420 ;;		None               void
  3421 ;; Registers used:
  3422 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3428 ;;      Params:         0       0       0       0       0       0       0       0       0
  3429 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3430 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3431 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3432 ;;Total ram usage:        0 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; Hardware stack levels required when called:    4
  3435 ;; This function calls:
  3436 ;;		_inverte_saida
  3437 ;;		_sendr
  3438 ;;		_tempo_ms
  3439 ;; This function is called by:
  3440 ;;		_modoNormal
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444                           	psect	text13
  3445  00685A                     __ptext13:
  3446                           	opt stack 0
  3447  00685A                     _resetBT:
  3448                           	opt stack 25
  3449                           
  3450                           ;bt_usb.h: 42: inverte_saida(31759); tempo_ms(1000);
  3451                           
  3452                           ;incstack = 0
  3453  00685A  0E7C               	movlw	124
  3454  00685C  6E37               	movwf	inverte_saida@pino+1,c
  3455  00685E  0E0F               	movlw	15
  3456  006860  6E36               	movwf	inverte_saida@pino,c
  3457  006862  EC66  F037         	call	_inverte_saida	;wreg free
  3458  006866  0E03               	movlw	3
  3459  006868  6E3D               	movwf	tempo_ms@i+1,c
  3460  00686A  0EE8               	movlw	232
  3461  00686C  6E3C               	movwf	tempo_ms@i,c
  3462  00686E  EC8E  F034         	call	_tempo_ms	;wreg free
  3463                           
  3464                           ;bt_usb.h: 43: sendr((char *)icrs);
  3465  006872  0E10               	movlw	high _icrs
  3466  006874  6E3A               	movwf	sendr@st+1,c
  3467  006876  0E64               	movlw	low _icrs
  3468  006878  6E39               	movwf	sendr@st,c
  3469  00687A  ECDC  F034         	call	_sendr	;wreg free
  3470                           
  3471                           ;bt_usb.h: 44: inverte_saida(31759); tempo_ms(2000);
  3472  00687E  0E7C               	movlw	124
  3473  006880  6E37               	movwf	inverte_saida@pino+1,c
  3474  006882  0E0F               	movlw	15
  3475  006884  6E36               	movwf	inverte_saida@pino,c
  3476  006886  EC66  F037         	call	_inverte_saida	;wreg free
  3477  00688A  0E07               	movlw	7
  3478  00688C  6E3D               	movwf	tempo_ms@i+1,c
  3479  00688E  0ED0               	movlw	208
  3480  006890  6E3C               	movwf	tempo_ms@i,c
  3481  006892  EC8E  F034         	call	_tempo_ms	;wreg free
  3482  006896  0012               	return	
  3483  006898                     __end_of_resetBT:
  3484                           	opt stack 0
  3485                           tblptru	equ	0xFF8
  3486                           tblptrh	equ	0xFF7
  3487                           tblptrl	equ	0xFF6
  3488                           tablat	equ	0xFF5
  3489                           prodh	equ	0xFF4
  3490                           prodl	equ	0xFF3
  3491                           intcon	equ	0xFF2
  3492                           intcon2	equ	0xFF1
  3493                           intcon3	equ	0xFF0
  3494                           postinc0	equ	0xFEE
  3495                           wreg	equ	0xFE8
  3496                           postdec1	equ	0xFE5
  3497                           fsr1l	equ	0xFE1
  3498                           indf2	equ	0xFDF
  3499                           fsr2h	equ	0xFDA
  3500                           fsr2l	equ	0xFD9
  3501                           status	equ	0xFD8
  3502                           
  3503 ;; *************** function _nivel_baixo *****************
  3504 ;; Defined at:
  3505 ;;		line 199 in file "SanUSB48X.h"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;  pino            2   20[COMRAM] unsigned int 
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;		None
  3510 ;; Return value:  Size  Location     Type
  3511 ;;		None               void
  3512 ;; Registers used:
  3513 ;;		wreg, status,2, status,0
  3514 ;; Tracked objects:
  3515 ;;		On entry : 0/0
  3516 ;;		On exit  : 0/0
  3517 ;;		Unchanged: 0/0
  3518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3519 ;;      Params:         2       0       0       0       0       0       0       0       0
  3520 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3521 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3522 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3523 ;;Total ram usage:        4 bytes
  3524 ;; Hardware stack levels used:    1
  3525 ;; Hardware stack levels required when called:    2
  3526 ;; This function calls:
  3527 ;;		Nothing
  3528 ;; This function is called by:
  3529 ;;		_modoNormal
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532                           
  3533                           	psect	text14
  3534  007368                     __ptext14:
  3535                           	opt stack 0
  3536  007368                     _nivel_baixo:
  3537                           	opt stack 27
  3538                           
  3539                           ;SanUSB48X.h: 201: switch(pino){
  3540                           
  3541                           ;incstack = 0
  3542  007368  D048               	goto	l2949
  3543  00736A                     l205:
  3544  00736A  9092               	bcf	3986,0,c	;volatile
  3545  00736C  9080               	bcf	3968,0,c	;volatile
  3546  00736E  D096               	goto	l228
  3547  007370                     l207:
  3548  007370  9292               	bcf	3986,1,c	;volatile
  3549  007372  9280               	bcf	3968,1,c	;volatile
  3550  007374  D093               	goto	l228
  3551  007376                     l208:
  3552  007376  9492               	bcf	3986,2,c	;volatile
  3553  007378  9480               	bcf	3968,2,c	;volatile
  3554  00737A  D090               	goto	l228
  3555  00737C                     l209:
  3556  00737C  9692               	bcf	3986,3,c	;volatile
  3557  00737E  9680               	bcf	3968,3,c	;volatile
  3558  007380  D08D               	goto	l228
  3559  007382                     l210:
  3560  007382  9892               	bcf	3986,4,c	;volatile
  3561  007384  9880               	bcf	3968,4,c	;volatile
  3562  007386  D08A               	goto	l228
  3563  007388                     l211:
  3564  007388  9A92               	bcf	3986,5,c	;volatile
  3565  00738A  9A80               	bcf	3968,5,c	;volatile
  3566  00738C  D087               	goto	l228
  3567  00738E                     l2941:
  3568  00738E  0E00               	movlw	0
  3569  007390  6E92               	movwf	3986,c	;volatile
  3570  007392  0E00               	movlw	0
  3571  007394  6E89               	movwf	3977,c	;volatile
  3572  007396  D082               	goto	l228
  3573  007398                     l213:
  3574  007398  9093               	bcf	3987,0,c	;volatile
  3575  00739A  9081               	bcf	3969,0,c	;volatile
  3576  00739C  D07F               	goto	l228
  3577  00739E                     l214:
  3578  00739E  9293               	bcf	3987,1,c	;volatile
  3579  0073A0  9281               	bcf	3969,1,c	;volatile
  3580  0073A2  D07C               	goto	l228
  3581  0073A4                     l215:
  3582  0073A4  9493               	bcf	3987,2,c	;volatile
  3583  0073A6  9481               	bcf	3969,2,c	;volatile
  3584  0073A8  D079               	goto	l228
  3585  0073AA                     l216:
  3586  0073AA  9693               	bcf	3987,3,c	;volatile
  3587  0073AC  9681               	bcf	3969,3,c	;volatile
  3588  0073AE  D076               	goto	l228
  3589  0073B0                     l217:
  3590  0073B0  9893               	bcf	3987,4,c	;volatile
  3591  0073B2  9881               	bcf	3969,4,c	;volatile
  3592  0073B4  D073               	goto	l228
  3593  0073B6                     l218:
  3594  0073B6  9A93               	bcf	3987,5,c	;volatile
  3595  0073B8  9A81               	bcf	3969,5,c	;volatile
  3596  0073BA  D070               	goto	l228
  3597  0073BC                     l219:
  3598  0073BC  9C93               	bcf	3987,6,c	;volatile
  3599  0073BE  9C81               	bcf	3969,6,c	;volatile
  3600  0073C0  D06D               	goto	l228
  3601  0073C2                     l220:
  3602  0073C2  9E93               	bcf	3987,7,c	;volatile
  3603  0073C4  9E81               	bcf	3969,7,c	;volatile
  3604  0073C6  D06A               	goto	l228
  3605  0073C8                     l2943:
  3606  0073C8  0E00               	movlw	0
  3607  0073CA  6E93               	movwf	3987,c	;volatile
  3608  0073CC  0E00               	movlw	0
  3609  0073CE  6E8A               	movwf	3978,c	;volatile
  3610  0073D0  D065               	goto	l228
  3611  0073D2                     l222:
  3612  0073D2  9094               	bcf	3988,0,c	;volatile
  3613  0073D4  9082               	bcf	3970,0,c	;volatile
  3614  0073D6  D062               	goto	l228
  3615  0073D8                     l223:
  3616  0073D8  9294               	bcf	3988,1,c	;volatile
  3617  0073DA  9282               	bcf	3970,1,c	;volatile
  3618  0073DC  D05F               	goto	l228
  3619  0073DE                     l224:
  3620  0073DE  9494               	bcf	3988,2,c	;volatile
  3621  0073E0  9482               	bcf	3970,2,c	;volatile
  3622  0073E2  D05C               	goto	l228
  3623  0073E4                     l225:
  3624  0073E4  9C94               	bcf	3988,6,c	;volatile
  3625  0073E6  9C82               	bcf	3970,6,c	;volatile
  3626  0073E8  D059               	goto	l228
  3627  0073EA                     l226:
  3628  0073EA  9E94               	bcf	3988,7,c	;volatile
  3629  0073EC  9E82               	bcf	3970,7,c	;volatile
  3630  0073EE  D056               	goto	l228
  3631  0073F0                     l2945:
  3632  0073F0  0E00               	movlw	0
  3633  0073F2  6E94               	movwf	3988,c	;volatile
  3634  0073F4  0E00               	movlw	0
  3635  0073F6  6E8B               	movwf	3979,c	;volatile
  3636  0073F8  D051               	goto	l228
  3637  0073FA                     l2949:
  3638  0073FA  C036  F038         	movff	nivel_baixo@pino,??_nivel_baixo
  3639  0073FE  C037  F039         	movff	nivel_baixo@pino+1,??_nivel_baixo+1
  3640                           
  3641                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  3642                           ; Switch size 1, requested type "space"
  3643                           ; Number of cases is 2, Range of values is 15 to 124
  3644                           ; switch strategies available:
  3645                           ; Name         Instructions Cycles
  3646                           ; simple_byte            7     4 (average)
  3647                           ;	Chosen strategy is simple_byte
  3648  007402  5039               	movf	??_nivel_baixo+1,w,c
  3649  007404  0A0F               	xorlw	15	; case 15
  3650  007406  B4D8               	btfsc	status,2,c
  3651  007408  D004               	goto	l4719
  3652  00740A  0A73               	xorlw	115	; case 124
  3653  00740C  B4D8               	btfsc	status,2,c
  3654  00740E  D00C               	goto	l4721
  3655  007410  D045               	goto	l228
  3656  007412                     l4719:
  3657                           
  3658                           ; Switch size 1, requested type "space"
  3659                           ; Number of cases is 3, Range of values is 128 to 130
  3660                           ; switch strategies available:
  3661                           ; Name         Instructions Cycles
  3662                           ; simple_byte           10     6 (average)
  3663                           ;	Chosen strategy is simple_byte
  3664  007412  5038               	movf	??_nivel_baixo,w,c
  3665  007414  0A80               	xorlw	128	; case 128
  3666  007416  B4D8               	btfsc	status,2,c
  3667  007418  D7BA               	goto	l2941
  3668  00741A  0A01               	xorlw	1	; case 129
  3669  00741C  B4D8               	btfsc	status,2,c
  3670  00741E  D7D4               	goto	l2943
  3671  007420  0A03               	xorlw	3	; case 130
  3672  007422  B4D8               	btfsc	status,2,c
  3673  007424  D7E5               	goto	l2945
  3674  007426  D03A               	goto	l228
  3675  007428                     l4721:
  3676                           
  3677                           ; Switch size 1, requested type "space"
  3678                           ; Number of cases is 19, Range of values is 0 to 23
  3679                           ; switch strategies available:
  3680                           ; Name         Instructions Cycles
  3681                           ; simple_byte           58    30 (average)
  3682                           ;	Chosen strategy is simple_byte
  3683  007428  5038               	movf	??_nivel_baixo,w,c
  3684  00742A  0A00               	xorlw	0	; case 0
  3685  00742C  B4D8               	btfsc	status,2,c
  3686  00742E  D79D               	goto	l205
  3687  007430  0A01               	xorlw	1	; case 1
  3688  007432  B4D8               	btfsc	status,2,c
  3689  007434  D79D               	goto	l207
  3690  007436  0A03               	xorlw	3	; case 2
  3691  007438  B4D8               	btfsc	status,2,c
  3692  00743A  D79D               	goto	l208
  3693  00743C  0A01               	xorlw	1	; case 3
  3694  00743E  B4D8               	btfsc	status,2,c
  3695  007440  D79D               	goto	l209
  3696  007442  0A07               	xorlw	7	; case 4
  3697  007444  B4D8               	btfsc	status,2,c
  3698  007446  D79D               	goto	l210
  3699  007448  0A01               	xorlw	1	; case 5
  3700  00744A  B4D8               	btfsc	status,2,c
  3701  00744C  D79D               	goto	l211
  3702  00744E  0A0D               	xorlw	13	; case 8
  3703  007450  B4D8               	btfsc	status,2,c
  3704  007452  D7A2               	goto	l213
  3705  007454  0A01               	xorlw	1	; case 9
  3706  007456  B4D8               	btfsc	status,2,c
  3707  007458  D7A2               	goto	l214
  3708  00745A  0A03               	xorlw	3	; case 10
  3709  00745C  B4D8               	btfsc	status,2,c
  3710  00745E  D7A2               	goto	l215
  3711  007460  0A01               	xorlw	1	; case 11
  3712  007462  B4D8               	btfsc	status,2,c
  3713  007464  D7A2               	goto	l216
  3714  007466  0A07               	xorlw	7	; case 12
  3715  007468  B4D8               	btfsc	status,2,c
  3716  00746A  D7A2               	goto	l217
  3717  00746C  0A01               	xorlw	1	; case 13
  3718  00746E  B4D8               	btfsc	status,2,c
  3719  007470  D7A2               	goto	l218
  3720  007472  0A03               	xorlw	3	; case 14
  3721  007474  B4D8               	btfsc	status,2,c
  3722  007476  D7A2               	goto	l219
  3723  007478  0A01               	xorlw	1	; case 15
  3724  00747A  B4D8               	btfsc	status,2,c
  3725  00747C  D7A2               	goto	l220
  3726  00747E  0A1F               	xorlw	31	; case 16
  3727  007480  B4D8               	btfsc	status,2,c
  3728  007482  D7A7               	goto	l222
  3729  007484  0A01               	xorlw	1	; case 17
  3730  007486  B4D8               	btfsc	status,2,c
  3731  007488  D7A7               	goto	l223
  3732  00748A  0A03               	xorlw	3	; case 18
  3733  00748C  B4D8               	btfsc	status,2,c
  3734  00748E  D7A7               	goto	l224
  3735  007490  0A04               	xorlw	4	; case 22
  3736  007492  B4D8               	btfsc	status,2,c
  3737  007494  D7A7               	goto	l225
  3738  007496  0A01               	xorlw	1	; case 23
  3739  007498  B4D8               	btfsc	status,2,c
  3740  00749A  D7A7               	goto	l226
  3741  00749C                     l228:
  3742  00749C  0012               	return	
  3743  00749E                     __end_of_nivel_baixo:
  3744                           	opt stack 0
  3745                           tblptru	equ	0xFF8
  3746                           tblptrh	equ	0xFF7
  3747                           tblptrl	equ	0xFF6
  3748                           tablat	equ	0xFF5
  3749                           prodh	equ	0xFF4
  3750                           prodl	equ	0xFF3
  3751                           intcon	equ	0xFF2
  3752                           intcon2	equ	0xFF1
  3753                           intcon3	equ	0xFF0
  3754                           postinc0	equ	0xFEE
  3755                           wreg	equ	0xFE8
  3756                           postdec1	equ	0xFE5
  3757                           fsr1l	equ	0xFE1
  3758                           indf2	equ	0xFDF
  3759                           fsr2h	equ	0xFDA
  3760                           fsr2l	equ	0xFD9
  3761                           status	equ	0xFD8
  3762                           
  3763 ;; *************** function _modoAttention *****************
  3764 ;; Defined at:
  3765 ;;		line 47 in file "bt_usb.h"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;		None
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;		None
  3770 ;; Return value:  Size  Location     Type
  3771 ;;		None               void
  3772 ;; Registers used:
  3773 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3779 ;;      Params:         0       0       0       0       0       0       0       0       0
  3780 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3781 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3782 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3783 ;;Total ram usage:        0 bytes
  3784 ;; Hardware stack levels used:    1
  3785 ;; Hardware stack levels required when called:    5
  3786 ;; This function calls:
  3787 ;;		_ATC
  3788 ;;		_nivel_alto
  3789 ;; This function is called by:
  3790 ;;		_configBR6
  3791 ;;		_main
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795                           	psect	text15
  3796  006898                     __ptext15:
  3797                           	opt stack 0
  3798  006898                     _modoAttention:
  3799                           	opt stack 25
  3800                           
  3801                           ;bt_usb.h: 49: nivel_alto(31754);
  3802                           
  3803                           ;incstack = 0
  3804  006898  0E7C               	movlw	124
  3805  00689A  6E37               	movwf	nivel_alto@pino+1,c
  3806  00689C  0E0A               	movlw	10
  3807  00689E  6E36               	movwf	nivel_alto@pino,c
  3808  0068A0  EC81  F038         	call	_nivel_alto	;wreg free
  3809                           
  3810                           ;bt_usb.h: 50: SPBRGH = 0x02; SPBRG=0x70; ATC();
  3811  0068A4  0E02               	movlw	2
  3812  0068A6  6EB0               	movwf	4016,c	;volatile
  3813  0068A8  0E70               	movlw	112
  3814  0068AA  6EAF               	movwf	4015,c	;volatile
  3815  0068AC  EC0E  F034         	call	_ATC	;wreg free
  3816                           
  3817                           ;bt_usb.h: 51: if(flagb==0){
  3818  0068B0  500C               	movf	_flagb+1,w,c
  3819  0068B2  100B               	iorwf	_flagb,w,c
  3820  0068B4  A4D8               	btfss	status,2,c
  3821  0068B6  D006               	goto	l2993
  3822                           
  3823                           ;bt_usb.h: 52: SPBRGH = 0x01; SPBRG=0x37; ATC();
  3824  0068B8  0E01               	movlw	1
  3825  0068BA  6EB0               	movwf	4016,c	;volatile
  3826  0068BC  0E37               	movlw	55
  3827  0068BE  6EAF               	movwf	4015,c	;volatile
  3828  0068C0  EC0E  F034         	call	_ATC	;wreg free
  3829  0068C4                     l2993:
  3830                           
  3831                           ;bt_usb.h: 53: }
  3832                           ;bt_usb.h: 54: if(flagb==0){
  3833  0068C4  500C               	movf	_flagb+1,w,c
  3834  0068C6  100B               	iorwf	_flagb,w,c
  3835  0068C8  A4D8               	btfss	status,2,c
  3836  0068CA  D006               	goto	l502
  3837                           
  3838                           ;bt_usb.h: 55: SPBRGH = 0x04; SPBRG=0xE1; ATC();
  3839  0068CC  0E04               	movlw	4
  3840  0068CE  6EB0               	movwf	4016,c	;volatile
  3841  0068D0  0EE1               	movlw	225
  3842  0068D2  6EAF               	movwf	4015,c	;volatile
  3843  0068D4  EC0E  F034         	call	_ATC	;wreg free
  3844  0068D8                     l502:
  3845  0068D8  0012               	return	
  3846  0068DA                     __end_of_modoAttention:
  3847                           	opt stack 0
  3848                           tblptru	equ	0xFF8
  3849                           tblptrh	equ	0xFF7
  3850                           tblptrl	equ	0xFF6
  3851                           tablat	equ	0xFF5
  3852                           prodh	equ	0xFF4
  3853                           prodl	equ	0xFF3
  3854                           intcon	equ	0xFF2
  3855                           intcon2	equ	0xFF1
  3856                           intcon3	equ	0xFF0
  3857                           postinc0	equ	0xFEE
  3858                           wreg	equ	0xFE8
  3859                           postdec1	equ	0xFE5
  3860                           fsr1l	equ	0xFE1
  3861                           indf2	equ	0xFDF
  3862                           fsr2h	equ	0xFDA
  3863                           fsr2l	equ	0xFD9
  3864                           status	equ	0xFD8
  3865                           
  3866 ;; *************** function _nivel_alto *****************
  3867 ;; Defined at:
  3868 ;;		line 169 in file "SanUSB48X.h"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  pino            2   20[COMRAM] unsigned int 
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;		None
  3873 ;; Return value:  Size  Location     Type
  3874 ;;		None               void
  3875 ;; Registers used:
  3876 ;;		wreg, status,2, status,0
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3882 ;;      Params:         2       0       0       0       0       0       0       0       0
  3883 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3884 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3885 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3886 ;;Total ram usage:        4 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; Hardware stack levels required when called:    2
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_modoAttention
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           	psect	text16
  3897  007102                     __ptext16:
  3898                           	opt stack 0
  3899  007102                     _nivel_alto:
  3900                           	opt stack 27
  3901                           
  3902                           ;SanUSB48X.h: 172: switch(pino){
  3903                           
  3904                           ;incstack = 0
  3905  007102  D045               	goto	l2929
  3906  007104                     l178:
  3907  007104  9092               	bcf	3986,0,c	;volatile
  3908  007106  8080               	bsf	3968,0,c	;volatile
  3909  007108  D093               	goto	l201
  3910  00710A                     l180:
  3911  00710A  9292               	bcf	3986,1,c	;volatile
  3912  00710C  8280               	bsf	3968,1,c	;volatile
  3913  00710E  D090               	goto	l201
  3914  007110                     l181:
  3915  007110  9492               	bcf	3986,2,c	;volatile
  3916  007112  8480               	bsf	3968,2,c	;volatile
  3917  007114  D08D               	goto	l201
  3918  007116                     l182:
  3919  007116  9692               	bcf	3986,3,c	;volatile
  3920  007118  8680               	bsf	3968,3,c	;volatile
  3921  00711A  D08A               	goto	l201
  3922  00711C                     l183:
  3923  00711C  9892               	bcf	3986,4,c	;volatile
  3924  00711E  8880               	bsf	3968,4,c	;volatile
  3925  007120  D087               	goto	l201
  3926  007122                     l184:
  3927  007122  9A92               	bcf	3986,5,c	;volatile
  3928  007124  8A80               	bsf	3968,5,c	;volatile
  3929  007126  D084               	goto	l201
  3930  007128                     l2915:
  3931  007128  0E00               	movlw	0
  3932  00712A  6E92               	movwf	3986,c	;volatile
  3933  00712C  6889               	setf	3977,c	;volatile
  3934  00712E  D080               	goto	l201
  3935  007130                     l186:
  3936  007130  9093               	bcf	3987,0,c	;volatile
  3937  007132  8081               	bsf	3969,0,c	;volatile
  3938  007134  D07D               	goto	l201
  3939  007136                     l187:
  3940  007136  9293               	bcf	3987,1,c	;volatile
  3941  007138  8281               	bsf	3969,1,c	;volatile
  3942  00713A  D07A               	goto	l201
  3943  00713C                     l188:
  3944  00713C  9493               	bcf	3987,2,c	;volatile
  3945  00713E  8481               	bsf	3969,2,c	;volatile
  3946  007140  D077               	goto	l201
  3947  007142                     l189:
  3948  007142  9693               	bcf	3987,3,c	;volatile
  3949  007144  8681               	bsf	3969,3,c	;volatile
  3950  007146  D074               	goto	l201
  3951  007148                     l190:
  3952  007148  9893               	bcf	3987,4,c	;volatile
  3953  00714A  8881               	bsf	3969,4,c	;volatile
  3954  00714C  D071               	goto	l201
  3955  00714E                     l191:
  3956  00714E  9A93               	bcf	3987,5,c	;volatile
  3957  007150  8A81               	bsf	3969,5,c	;volatile
  3958  007152  D06E               	goto	l201
  3959  007154                     l192:
  3960  007154  9C93               	bcf	3987,6,c	;volatile
  3961  007156  8C81               	bsf	3969,6,c	;volatile
  3962  007158  D06B               	goto	l201
  3963  00715A                     l193:
  3964  00715A  9E93               	bcf	3987,7,c	;volatile
  3965  00715C  8E81               	bsf	3969,7,c	;volatile
  3966  00715E  D068               	goto	l201
  3967  007160                     l2919:
  3968  007160  0E00               	movlw	0
  3969  007162  6E93               	movwf	3987,c	;volatile
  3970  007164  688A               	setf	3978,c	;volatile
  3971  007166  D064               	goto	l201
  3972  007168                     l195:
  3973  007168  9094               	bcf	3988,0,c	;volatile
  3974  00716A  8082               	bsf	3970,0,c	;volatile
  3975  00716C  D061               	goto	l201
  3976  00716E                     l196:
  3977  00716E  9294               	bcf	3988,1,c	;volatile
  3978  007170  8282               	bsf	3970,1,c	;volatile
  3979  007172  D05E               	goto	l201
  3980  007174                     l197:
  3981  007174  9494               	bcf	3988,2,c	;volatile
  3982  007176  8482               	bsf	3970,2,c	;volatile
  3983  007178  D05B               	goto	l201
  3984  00717A                     l198:
  3985  00717A  9C94               	bcf	3988,6,c	;volatile
  3986  00717C  8C82               	bsf	3970,6,c	;volatile
  3987  00717E  D058               	goto	l201
  3988  007180                     l199:
  3989  007180  9E94               	bcf	3988,7,c	;volatile
  3990  007182  8E82               	bsf	3970,7,c	;volatile
  3991  007184  D055               	goto	l201
  3992  007186                     l2923:
  3993  007186  0E00               	movlw	0
  3994  007188  6E94               	movwf	3988,c	;volatile
  3995  00718A  688B               	setf	3979,c	;volatile
  3996  00718C  D051               	goto	l201
  3997  00718E                     l2929:
  3998  00718E  C036  F038         	movff	nivel_alto@pino,??_nivel_alto
  3999  007192  C037  F039         	movff	nivel_alto@pino+1,??_nivel_alto+1
  4000                           
  4001                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4002                           ; Switch size 1, requested type "space"
  4003                           ; Number of cases is 2, Range of values is 15 to 124
  4004                           ; switch strategies available:
  4005                           ; Name         Instructions Cycles
  4006                           ; simple_byte            7     4 (average)
  4007                           ;	Chosen strategy is simple_byte
  4008  007196  5039               	movf	??_nivel_alto+1,w,c
  4009  007198  0A0F               	xorlw	15	; case 15
  4010  00719A  B4D8               	btfsc	status,2,c
  4011  00719C  D004               	goto	l4723
  4012  00719E  0A73               	xorlw	115	; case 124
  4013  0071A0  B4D8               	btfsc	status,2,c
  4014  0071A2  D00C               	goto	l4725
  4015  0071A4  D045               	goto	l201
  4016  0071A6                     l4723:
  4017                           
  4018                           ; Switch size 1, requested type "space"
  4019                           ; Number of cases is 3, Range of values is 128 to 130
  4020                           ; switch strategies available:
  4021                           ; Name         Instructions Cycles
  4022                           ; simple_byte           10     6 (average)
  4023                           ;	Chosen strategy is simple_byte
  4024  0071A6  5038               	movf	??_nivel_alto,w,c
  4025  0071A8  0A80               	xorlw	128	; case 128
  4026  0071AA  B4D8               	btfsc	status,2,c
  4027  0071AC  D7BD               	goto	l2915
  4028  0071AE  0A01               	xorlw	1	; case 129
  4029  0071B0  B4D8               	btfsc	status,2,c
  4030  0071B2  D7D6               	goto	l2919
  4031  0071B4  0A03               	xorlw	3	; case 130
  4032  0071B6  B4D8               	btfsc	status,2,c
  4033  0071B8  D7E6               	goto	l2923
  4034  0071BA  D03A               	goto	l201
  4035  0071BC                     l4725:
  4036                           
  4037                           ; Switch size 1, requested type "space"
  4038                           ; Number of cases is 19, Range of values is 0 to 23
  4039                           ; switch strategies available:
  4040                           ; Name         Instructions Cycles
  4041                           ; simple_byte           58    30 (average)
  4042                           ;	Chosen strategy is simple_byte
  4043  0071BC  5038               	movf	??_nivel_alto,w,c
  4044  0071BE  0A00               	xorlw	0	; case 0
  4045  0071C0  B4D8               	btfsc	status,2,c
  4046  0071C2  D7A0               	goto	l178
  4047  0071C4  0A01               	xorlw	1	; case 1
  4048  0071C6  B4D8               	btfsc	status,2,c
  4049  0071C8  D7A0               	goto	l180
  4050  0071CA  0A03               	xorlw	3	; case 2
  4051  0071CC  B4D8               	btfsc	status,2,c
  4052  0071CE  D7A0               	goto	l181
  4053  0071D0  0A01               	xorlw	1	; case 3
  4054  0071D2  B4D8               	btfsc	status,2,c
  4055  0071D4  D7A0               	goto	l182
  4056  0071D6  0A07               	xorlw	7	; case 4
  4057  0071D8  B4D8               	btfsc	status,2,c
  4058  0071DA  D7A0               	goto	l183
  4059  0071DC  0A01               	xorlw	1	; case 5
  4060  0071DE  B4D8               	btfsc	status,2,c
  4061  0071E0  D7A0               	goto	l184
  4062  0071E2  0A0D               	xorlw	13	; case 8
  4063  0071E4  B4D8               	btfsc	status,2,c
  4064  0071E6  D7A4               	goto	l186
  4065  0071E8  0A01               	xorlw	1	; case 9
  4066  0071EA  B4D8               	btfsc	status,2,c
  4067  0071EC  D7A4               	goto	l187
  4068  0071EE  0A03               	xorlw	3	; case 10
  4069  0071F0  B4D8               	btfsc	status,2,c
  4070  0071F2  D7A4               	goto	l188
  4071  0071F4  0A01               	xorlw	1	; case 11
  4072  0071F6  B4D8               	btfsc	status,2,c
  4073  0071F8  D7A4               	goto	l189
  4074  0071FA  0A07               	xorlw	7	; case 12
  4075  0071FC  B4D8               	btfsc	status,2,c
  4076  0071FE  D7A4               	goto	l190
  4077  007200  0A01               	xorlw	1	; case 13
  4078  007202  B4D8               	btfsc	status,2,c
  4079  007204  D7A4               	goto	l191
  4080  007206  0A03               	xorlw	3	; case 14
  4081  007208  B4D8               	btfsc	status,2,c
  4082  00720A  D7A4               	goto	l192
  4083  00720C  0A01               	xorlw	1	; case 15
  4084  00720E  B4D8               	btfsc	status,2,c
  4085  007210  D7A4               	goto	l193
  4086  007212  0A1F               	xorlw	31	; case 16
  4087  007214  B4D8               	btfsc	status,2,c
  4088  007216  D7A8               	goto	l195
  4089  007218  0A01               	xorlw	1	; case 17
  4090  00721A  B4D8               	btfsc	status,2,c
  4091  00721C  D7A8               	goto	l196
  4092  00721E  0A03               	xorlw	3	; case 18
  4093  007220  B4D8               	btfsc	status,2,c
  4094  007222  D7A8               	goto	l197
  4095  007224  0A04               	xorlw	4	; case 22
  4096  007226  B4D8               	btfsc	status,2,c
  4097  007228  D7A8               	goto	l198
  4098  00722A  0A01               	xorlw	1	; case 23
  4099  00722C  B4D8               	btfsc	status,2,c
  4100  00722E  D7A8               	goto	l199
  4101  007230                     l201:
  4102  007230  0012               	return	
  4103  007232                     __end_of_nivel_alto:
  4104                           	opt stack 0
  4105                           tblptru	equ	0xFF8
  4106                           tblptrh	equ	0xFF7
  4107                           tblptrl	equ	0xFF6
  4108                           tablat	equ	0xFF5
  4109                           prodh	equ	0xFF4
  4110                           prodl	equ	0xFF3
  4111                           intcon	equ	0xFF2
  4112                           intcon2	equ	0xFF1
  4113                           intcon3	equ	0xFF0
  4114                           postinc0	equ	0xFEE
  4115                           wreg	equ	0xFE8
  4116                           postdec1	equ	0xFE5
  4117                           fsr1l	equ	0xFE1
  4118                           indf2	equ	0xFDF
  4119                           fsr2h	equ	0xFDA
  4120                           fsr2l	equ	0xFD9
  4121                           status	equ	0xFD8
  4122                           
  4123 ;; *************** function _ATC *****************
  4124 ;; Defined at:
  4125 ;;		line 34 in file "bt_usb.h"
  4126 ;; Parameters:    Size  Location     Type
  4127 ;;		None
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;		None
  4130 ;; Return value:  Size  Location     Type
  4131 ;;		None               void
  4132 ;; Registers used:
  4133 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/0
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4139 ;;      Params:         0       0       0       0       0       0       0       0       0
  4140 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4141 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4142 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4143 ;;Total ram usage:        0 bytes
  4144 ;; Hardware stack levels used:    1
  4145 ;; Hardware stack levels required when called:    4
  4146 ;; This function calls:
  4147 ;;		_inverte_saida
  4148 ;;		_sendr
  4149 ;;		_tempo_ms
  4150 ;; This function is called by:
  4151 ;;		_modoAttention
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           	psect	text17
  4156  00681C                     __ptext17:
  4157                           	opt stack 0
  4158  00681C                     _ATC:
  4159                           	opt stack 25
  4160                           
  4161                           ;bt_usb.h: 36: inverte_saida(31759); tempo_ms(500);
  4162                           
  4163                           ;incstack = 0
  4164  00681C  0E7C               	movlw	124
  4165  00681E  6E37               	movwf	inverte_saida@pino+1,c
  4166  006820  0E0F               	movlw	15
  4167  006822  6E36               	movwf	inverte_saida@pino,c
  4168  006824  EC66  F037         	call	_inverte_saida	;wreg free
  4169  006828  0E01               	movlw	1
  4170  00682A  6E3D               	movwf	tempo_ms@i+1,c
  4171  00682C  0EF4               	movlw	244
  4172  00682E  6E3C               	movwf	tempo_ms@i,c
  4173  006830  EC8E  F034         	call	_tempo_ms	;wreg free
  4174                           
  4175                           ;bt_usb.h: 37: sendr((char *)atc);
  4176  006834  0E10               	movlw	high _atc
  4177  006836  6E3A               	movwf	sendr@st+1,c
  4178  006838  0E8A               	movlw	low _atc
  4179  00683A  6E39               	movwf	sendr@st,c
  4180  00683C  ECDC  F034         	call	_sendr	;wreg free
  4181                           
  4182                           ;bt_usb.h: 38: inverte_saida(31759); tempo_ms(1000);
  4183  006840  0E7C               	movlw	124
  4184  006842  6E37               	movwf	inverte_saida@pino+1,c
  4185  006844  0E0F               	movlw	15
  4186  006846  6E36               	movwf	inverte_saida@pino,c
  4187  006848  EC66  F037         	call	_inverte_saida	;wreg free
  4188  00684C  0E03               	movlw	3
  4189  00684E  6E3D               	movwf	tempo_ms@i+1,c
  4190  006850  0EE8               	movlw	232
  4191  006852  6E3C               	movwf	tempo_ms@i,c
  4192  006854  EC8E  F034         	call	_tempo_ms	;wreg free
  4193  006858  0012               	return	
  4194  00685A                     __end_of_ATC:
  4195                           	opt stack 0
  4196                           tblptru	equ	0xFF8
  4197                           tblptrh	equ	0xFF7
  4198                           tblptrl	equ	0xFF6
  4199                           tablat	equ	0xFF5
  4200                           prodh	equ	0xFF4
  4201                           prodl	equ	0xFF3
  4202                           intcon	equ	0xFF2
  4203                           intcon2	equ	0xFF1
  4204                           intcon3	equ	0xFF0
  4205                           postinc0	equ	0xFEE
  4206                           wreg	equ	0xFE8
  4207                           postdec1	equ	0xFE5
  4208                           fsr1l	equ	0xFE1
  4209                           indf2	equ	0xFDF
  4210                           fsr2h	equ	0xFDA
  4211                           fsr2l	equ	0xFD9
  4212                           status	equ	0xFD8
  4213                           
  4214 ;; *************** function _tempo_ms *****************
  4215 ;; Defined at:
  4216 ;;		line 290 in file "SanUSB48X.h"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;  i               2   26[COMRAM] unsigned int 
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;  k               2   28[COMRAM] unsigned int 
  4221 ;; Return value:  Size  Location     Type
  4222 ;;		None               void
  4223 ;; Registers used:
  4224 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4230 ;;      Params:         2       0       0       0       0       0       0       0       0
  4231 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4232 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4233 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4234 ;;Total ram usage:        4 bytes
  4235 ;; Hardware stack levels used:    1
  4236 ;; Hardware stack levels required when called:    3
  4237 ;; This function calls:
  4238 ;;		_Delay1KTCYx
  4239 ;;		___wmul
  4240 ;; This function is called by:
  4241 ;;		_ATC
  4242 ;;		_resetBT
  4243 ;;		_configBR6
  4244 ;;		_bt_ini
  4245 ;;		_main
  4246 ;;		_le_AD8bits
  4247 ;;		_le_AD10bits
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           	psect	text18
  4252  00691C                     __ptext18:
  4253                           	opt stack 0
  4254  00691C                     _tempo_ms:
  4255                           	opt stack 27
  4256                           
  4257                           ;SanUSB48X.h: 292: EEADR =REG+0B11111100+1;
  4258                           
  4259                           ;incstack = 0
  4260  00691C  5046               	movf	_REG,w,c
  4261  00691E  0FFD               	addlw	253
  4262  006920  6EA9               	movwf	4009,c	;volatile
  4263                           
  4264                           ;SanUSB48X.h: 293: EECON1=REG+EEADR & 0B00001011;
  4265  006922  5046               	movf	_REG,w,c
  4266  006924  24A9               	addwf	4009,w,c	;volatile
  4267  006926  0B0B               	andlw	11
  4268  006928  6EA6               	movwf	4006,c	;volatile
  4269  00692A                     l286:
  4270  00692A  66A8               	tstfsz	4008,c	;volatile
  4271  00692C  D7FE               	goto	l286
  4272                           
  4273                           ;SanUSB48X.h: 295: for(k=0;k<12*i;k++) { Delay1KTCYx(1);}
  4274  00692E  0E00               	movlw	0
  4275  006930  6E3F               	movwf	tempo_ms@k+1,c
  4276  006932  0E00               	movlw	0
  4277  006934  6E3E               	movwf	tempo_ms@k,c
  4278  006936  D005               	goto	l2903
  4279  006938                     l2899:
  4280  006938  0E01               	movlw	1
  4281  00693A  ECA8  F033         	call	_Delay1KTCYx
  4282  00693E  4A3E               	infsnz	tempo_ms@k,f,c
  4283  006940  2A3F               	incf	tempo_ms@k+1,f,c
  4284  006942                     l2903:
  4285  006942  C03C  F036         	movff	tempo_ms@i,___wmul@multiplier
  4286  006946  C03D  F037         	movff	tempo_ms@i+1,___wmul@multiplier+1
  4287  00694A  0E00               	movlw	0
  4288  00694C  6E39               	movwf	___wmul@multiplicand+1,c
  4289  00694E  0E0C               	movlw	12
  4290  006950  6E38               	movwf	___wmul@multiplicand,c
  4291  006952  ECF1  F033         	call	___wmul	;wreg free
  4292  006956  5036               	movf	?___wmul,w,c
  4293  006958  5C3E               	subwf	tempo_ms@k,w,c
  4294  00695A  5037               	movf	?___wmul+1,w,c
  4295  00695C  583F               	subwfb	tempo_ms@k+1,w,c
  4296  00695E  B0D8               	btfsc	status,0,c
  4297  006960  0012               	return	
  4298  006962  D7EA               	goto	l2899
  4299  006964                     __end_of_tempo_ms:
  4300                           	opt stack 0
  4301                           tblptru	equ	0xFF8
  4302                           tblptrh	equ	0xFF7
  4303                           tblptrl	equ	0xFF6
  4304                           tablat	equ	0xFF5
  4305                           prodh	equ	0xFF4
  4306                           prodl	equ	0xFF3
  4307                           intcon	equ	0xFF2
  4308                           intcon2	equ	0xFF1
  4309                           intcon3	equ	0xFF0
  4310                           postinc0	equ	0xFEE
  4311                           wreg	equ	0xFE8
  4312                           postdec1	equ	0xFE5
  4313                           fsr1l	equ	0xFE1
  4314                           indf2	equ	0xFDF
  4315                           fsr2h	equ	0xFDA
  4316                           fsr2l	equ	0xFD9
  4317                           status	equ	0xFD8
  4318                           
  4319 ;; *************** function ___wmul *****************
  4320 ;; Defined at:
  4321 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\wmul.c"
  4322 ;; Parameters:    Size  Location     Type
  4323 ;;  multiplier      2   20[COMRAM] unsigned int 
  4324 ;;  multiplicand    2   22[COMRAM] unsigned int 
  4325 ;; Auto vars:     Size  Location     Type
  4326 ;;  product         2   24[COMRAM] unsigned int 
  4327 ;; Return value:  Size  Location     Type
  4328 ;;                  2   20[COMRAM] unsigned int 
  4329 ;; Registers used:
  4330 ;;		wreg, status,2, status,0, prodl, prodh
  4331 ;; Tracked objects:
  4332 ;;		On entry : 0/0
  4333 ;;		On exit  : 0/0
  4334 ;;		Unchanged: 0/0
  4335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4336 ;;      Params:         4       0       0       0       0       0       0       0       0
  4337 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4338 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4339 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4340 ;;Total ram usage:        6 bytes
  4341 ;; Hardware stack levels used:    1
  4342 ;; Hardware stack levels required when called:    2
  4343 ;; This function calls:
  4344 ;;		Nothing
  4345 ;; This function is called by:
  4346 ;;		_tempo_ms
  4347 ;;		_tempo_us
  4348 ;;		_timer0_ms
  4349 ;;		_SetaPWM1
  4350 ;;		_SetaPWM2
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           	psect	text19
  4355  0067E2                     __ptext19:
  4356                           	opt stack 0
  4357  0067E2                     ___wmul:
  4358                           	opt stack 27
  4359                           
  4360                           ;incstack = 0
  4361  0067E2  5036               	movf	___wmul@multiplier,w,c
  4362  0067E4  0238               	mulwf	___wmul@multiplicand,c
  4363  0067E6  CFF3 F03A          	movff	prodl,___wmul@product
  4364  0067EA  CFF4 F03B          	movff	prodh,___wmul@product+1
  4365  0067EE  5036               	movf	___wmul@multiplier,w,c
  4366  0067F0  0239               	mulwf	___wmul@multiplicand+1,c
  4367  0067F2  CFF3 FFF4          	movff	prodl,prodh
  4368  0067F6  6AF3               	clrf	prodl,c
  4369  0067F8  50F3               	movf	prodl,w,c
  4370  0067FA  263A               	addwf	___wmul@product,f,c
  4371  0067FC  50F4               	movf	prodh,w,c
  4372  0067FE  223B               	addwfc	___wmul@product+1,f,c
  4373  006800  5037               	movf	___wmul@multiplier+1,w,c
  4374  006802  0238               	mulwf	___wmul@multiplicand,c
  4375  006804  CFF3 FFF4          	movff	prodl,prodh
  4376  006808  6AF3               	clrf	prodl,c
  4377  00680A  50F3               	movf	prodl,w,c
  4378  00680C  263A               	addwf	___wmul@product,f,c
  4379  00680E  50F4               	movf	prodh,w,c
  4380  006810  223B               	addwfc	___wmul@product+1,f,c
  4381  006812  C03A  F036         	movff	___wmul@product,?___wmul
  4382  006816  C03B  F037         	movff	___wmul@product+1,?___wmul+1
  4383  00681A  0012               	return	
  4384  00681C                     __end_of___wmul:
  4385                           	opt stack 0
  4386                           tblptru	equ	0xFF8
  4387                           tblptrh	equ	0xFF7
  4388                           tblptrl	equ	0xFF6
  4389                           tablat	equ	0xFF5
  4390                           prodh	equ	0xFF4
  4391                           prodl	equ	0xFF3
  4392                           intcon	equ	0xFF2
  4393                           intcon2	equ	0xFF1
  4394                           intcon3	equ	0xFF0
  4395                           postinc0	equ	0xFEE
  4396                           wreg	equ	0xFE8
  4397                           postdec1	equ	0xFE5
  4398                           fsr1l	equ	0xFE1
  4399                           indf2	equ	0xFDF
  4400                           fsr2h	equ	0xFDA
  4401                           fsr2l	equ	0xFD9
  4402                           status	equ	0xFD8
  4403                           
  4404 ;; *************** function _Delay1KTCYx *****************
  4405 ;; Defined at:
  4406 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\pic18\d1ktcyx.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;  unit            1    wreg     unsigned char 
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;  unit            1   20[COMRAM] unsigned char 
  4411 ;; Return value:  Size  Location     Type
  4412 ;;		None               void
  4413 ;; Registers used:
  4414 ;;		wreg
  4415 ;; Tracked objects:
  4416 ;;		On entry : 0/0
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4420 ;;      Params:         0       0       0       0       0       0       0       0       0
  4421 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4422 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4423 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4424 ;;Total ram usage:        1 bytes
  4425 ;; Hardware stack levels used:    1
  4426 ;; Hardware stack levels required when called:    2
  4427 ;; This function calls:
  4428 ;;		Nothing
  4429 ;; This function is called by:
  4430 ;;		_tempo_ms
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           	psect	text20
  4435  006750                     __ptext20:
  4436                           	opt stack 0
  4437  006750                     _Delay1KTCYx:
  4438                           	opt stack 27
  4439                           
  4440                           ;incstack = 0
  4441                           ;Delay1KTCYx@unit stored from wreg
  4442  006750  CFE8 F036          	movff	wreg,Delay1KTCYx@unit
  4443  006754                     l871:
  4444  006754  0EFA               	movlw	250
  4445  006756                     u2517:
  4446  006756  F000               	nop	
  4447  006758  2EE8               	decfsz	wreg,f,c
  4448  00675A  D7FD               	goto	u2517
  4449  00675C  2E36               	decfsz	Delay1KTCYx@unit,f,c
  4450  00675E  D7FA               	goto	l871
  4451  006760  0012               	return	
  4452  006762                     __end_of_Delay1KTCYx:
  4453                           	opt stack 0
  4454                           tblptru	equ	0xFF8
  4455                           tblptrh	equ	0xFF7
  4456                           tblptrl	equ	0xFF6
  4457                           tablat	equ	0xFF5
  4458                           prodh	equ	0xFF4
  4459                           prodl	equ	0xFF3
  4460                           intcon	equ	0xFF2
  4461                           intcon2	equ	0xFF1
  4462                           intcon3	equ	0xFF0
  4463                           postinc0	equ	0xFEE
  4464                           wreg	equ	0xFE8
  4465                           postdec1	equ	0xFE5
  4466                           fsr1l	equ	0xFE1
  4467                           indf2	equ	0xFDF
  4468                           fsr2h	equ	0xFDA
  4469                           fsr2l	equ	0xFD9
  4470                           status	equ	0xFD8
  4471                           
  4472 ;; *************** function _sendr *****************
  4473 ;; Defined at:
  4474 ;;		line 482 in file "SanUSB48X.h"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;  st              2   23[COMRAM] PTR unsigned char 
  4477 ;;		 -> icm(15), icg(9), icr(9), icn(17), 
  4478 ;;		 -> icb(9), icp(3), icms(19), icgs(20), 
  4479 ;;		 -> icrs(11), atc(5), 
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;		None
  4482 ;; Return value:  Size  Location     Type
  4483 ;;		None               void
  4484 ;; Registers used:
  4485 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4486 ;; Tracked objects:
  4487 ;;		On entry : 0/0
  4488 ;;		On exit  : 0/0
  4489 ;;		Unchanged: 0/0
  4490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4491 ;;      Params:         2       0       0       0       0       0       0       0       0
  4492 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4493 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4494 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4495 ;;Total ram usage:        4 bytes
  4496 ;; Hardware stack levels used:    1
  4497 ;; Hardware stack levels required when called:    3
  4498 ;; This function calls:
  4499 ;;		_sputc
  4500 ;; This function is called by:
  4501 ;;		_ATC
  4502 ;;		_resetBT
  4503 ;;		_configBR6
  4504 ;;		_bt_ini
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           	psect	text21
  4509  0069B8                     __ptext21:
  4510                           	opt stack 0
  4511  0069B8                     _sendr:
  4512                           	opt stack 25
  4513                           
  4514                           ;SanUSB48X.h: 483: for(k=0;st[k]!='\0';k++) {sputc(st[k]);}
  4515                           
  4516                           ;incstack = 0
  4517  0069B8  6E3B               	movwf	??_sendr& (0+255),c
  4518  0069BA  0E00               	movlw	0
  4519  0069BC  6E19               	movwf	_k,c
  4520  0069BE  503B               	movf	??_sendr& (0+255),w,c
  4521  0069C0  D013               	goto	l2911
  4522  0069C2                     l2907:
  4523  0069C2  5019               	movf	_k,w,c
  4524  0069C4  0D01               	mullw	1
  4525  0069C6  C039  F03B         	movff	sendr@st,??_sendr
  4526  0069CA  C03A  F03C         	movff	sendr@st+1,??_sendr+1
  4527  0069CE  50F3               	movf	prodl,w,c
  4528  0069D0  263B               	addwf	??_sendr,f,c
  4529  0069D2  50F4               	movf	prodh,w,c
  4530  0069D4  223C               	addwfc	??_sendr+1,f,c
  4531  0069D6  C03B  FFF6         	movff	??_sendr,tblptrl
  4532  0069DA  C03C  FFF7         	movff	??_sendr+1,tblptrh
  4533  0069DE  0008               	tblrd		*
  4534  0069E0  50F5               	movf	tablat,w,c
  4535  0069E2  ECDB  F033         	call	_sputc
  4536  0069E6  2A19               	incf	_k,f,c
  4537  0069E8                     l2911:
  4538  0069E8  5019               	movf	_k,w,c
  4539  0069EA  0D01               	mullw	1
  4540  0069EC  C039  F03B         	movff	sendr@st,??_sendr
  4541  0069F0  C03A  F03C         	movff	sendr@st+1,??_sendr+1
  4542  0069F4  50F3               	movf	prodl,w,c
  4543  0069F6  263B               	addwf	??_sendr,f,c
  4544  0069F8  50F4               	movf	prodh,w,c
  4545  0069FA  223C               	addwfc	??_sendr+1,f,c
  4546  0069FC  C03B  FFF6         	movff	??_sendr,tblptrl
  4547  006A00  C03C  FFF7         	movff	??_sendr+1,tblptrh
  4548  006A04  0008               	tblrd		*
  4549  006A06  50F5               	movf	tablat,w,c
  4550  006A08  0900               	iorlw	0
  4551  006A0A  B4D8               	btfsc	status,2,c
  4552  006A0C  0012               	return	
  4553  006A0E  D7D9               	goto	l2907
  4554  006A10                     __end_of_sendr:
  4555                           	opt stack 0
  4556                           tblptru	equ	0xFF8
  4557                           tblptrh	equ	0xFF7
  4558                           tblptrl	equ	0xFF6
  4559                           tablat	equ	0xFF5
  4560                           prodh	equ	0xFF4
  4561                           prodl	equ	0xFF3
  4562                           intcon	equ	0xFF2
  4563                           intcon2	equ	0xFF1
  4564                           intcon3	equ	0xFF0
  4565                           postinc0	equ	0xFEE
  4566                           wreg	equ	0xFE8
  4567                           postdec1	equ	0xFE5
  4568                           fsr1l	equ	0xFE1
  4569                           indf2	equ	0xFDF
  4570                           fsr2h	equ	0xFDA
  4571                           fsr2l	equ	0xFD9
  4572                           status	equ	0xFD8
  4573                           
  4574 ;; *************** function _sputc *****************
  4575 ;; Defined at:
  4576 ;;		line 471 in file "SanUSB48X.h"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;  c               1    wreg     unsigned char 
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;  c               1   22[COMRAM] unsigned char 
  4581 ;; Return value:  Size  Location     Type
  4582 ;;		None               void
  4583 ;; Registers used:
  4584 ;;		wreg, status,2, status,0
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4590 ;;      Params:         0       0       0       0       0       0       0       0       0
  4591 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4592 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4593 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4594 ;;Total ram usage:        3 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; Hardware stack levels required when called:    2
  4597 ;; This function calls:
  4598 ;;		Nothing
  4599 ;; This function is called by:
  4600 ;;		_sendr
  4601 ;;		_bt_ini
  4602 ;;		_main
  4603 ;;		_sends
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           	psect	text22
  4608  0067B6                     __ptext22:
  4609                           	opt stack 0
  4610  0067B6                     _sputc:
  4611                           	opt stack 28
  4612                           
  4613                           ;incstack = 0
  4614                           ;sputc@c stored from wreg
  4615  0067B6  CFE8 F038          	movff	wreg,sputc@c
  4616  0067BA                     l397:
  4617  0067BA  A2AC               	btfss	4012,1,c	;volatile
  4618  0067BC  D7FE               	goto	l397
  4619                           
  4620                           ;SanUSB48X.h: 474: TXREG=(c>>BAUDCONbits.BRG16)+REG;
  4621  0067BE  A6B8               	btfss	4024,3,c	;volatile
  4622  0067C0  D003               	goto	u1270
  4623  0067C2  6A36               	clrf	??_sputc& (0+255),c
  4624  0067C4  2A36               	incf	??_sputc& (0+255),f,c
  4625  0067C6  D001               	goto	u1278
  4626  0067C8                     u1270:
  4627  0067C8  6A36               	clrf	??_sputc& (0+255),c
  4628  0067CA                     u1278:
  4629  0067CA  C038  F037         	movff	sputc@c,??_sputc+1
  4630  0067CE  2A36               	incf	??_sputc,f,c
  4631  0067D0  D002               	goto	u1284
  4632  0067D2                     u1285:
  4633  0067D2  90D8               	bcf	status,0,c
  4634  0067D4  3237               	rrcf	??_sputc+1,f,c
  4635  0067D6                     u1284:
  4636  0067D6  2E36               	decfsz	??_sputc,f,c
  4637  0067D8  D7FC               	goto	u1285
  4638  0067DA  5037               	movf	??_sputc+1,w,c
  4639  0067DC  2446               	addwf	_REG,w,c
  4640  0067DE  6EAD               	movwf	4013,c	;volatile
  4641  0067E0  0012               	return	
  4642  0067E2                     __end_of_sputc:
  4643                           	opt stack 0
  4644                           tblptru	equ	0xFF8
  4645                           tblptrh	equ	0xFF7
  4646                           tblptrl	equ	0xFF6
  4647                           tablat	equ	0xFF5
  4648                           prodh	equ	0xFF4
  4649                           prodl	equ	0xFF3
  4650                           intcon	equ	0xFF2
  4651                           intcon2	equ	0xFF1
  4652                           intcon3	equ	0xFF0
  4653                           postinc0	equ	0xFEE
  4654                           wreg	equ	0xFE8
  4655                           postdec1	equ	0xFE5
  4656                           fsr1l	equ	0xFE1
  4657                           indf2	equ	0xFDF
  4658                           fsr2h	equ	0xFDA
  4659                           fsr2l	equ	0xFD9
  4660                           status	equ	0xFD8
  4661                           
  4662 ;; *************** function _inverte_saida *****************
  4663 ;; Defined at:
  4664 ;;		line 228 in file "SanUSB48X.h"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;  pino            2   20[COMRAM] unsigned int 
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;		None
  4669 ;; Return value:  Size  Location     Type
  4670 ;;		None               void
  4671 ;; Registers used:
  4672 ;;		wreg, status,2, status,0
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4678 ;;      Params:         2       0       0       0       0       0       0       0       0
  4679 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4680 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4681 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4682 ;;Total ram usage:        4 bytes
  4683 ;; Hardware stack levels used:    1
  4684 ;; Hardware stack levels required when called:    2
  4685 ;; This function calls:
  4686 ;;		Nothing
  4687 ;; This function is called by:
  4688 ;;		_ATC
  4689 ;;		_resetBT
  4690 ;;		_configBR6
  4691 ;;		_bt_ini
  4692 ;;		_main
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           	psect	text23
  4697  006ECC                     __ptext23:
  4698                           	opt stack 0
  4699  006ECC                     _inverte_saida:
  4700                           	opt stack 26
  4701                           
  4702                           ;SanUSB48X.h: 230: switch(pino){
  4703                           
  4704                           ;incstack = 0
  4705  006ECC  D03C               	goto	l2889
  4706  006ECE                     l232:
  4707  006ECE  9092               	bcf	3986,0,c	;volatile
  4708  006ED0  7080               	btg	3968,0,c	;volatile
  4709  006ED2  D07E               	goto	l253
  4710  006ED4                     l234:
  4711  006ED4  9292               	bcf	3986,1,c	;volatile
  4712  006ED6  7280               	btg	3968,1,c	;volatile
  4713  006ED8  D07B               	goto	l253
  4714  006EDA                     l235:
  4715  006EDA  9492               	bcf	3986,2,c	;volatile
  4716  006EDC  7480               	btg	3968,2,c	;volatile
  4717  006EDE  D078               	goto	l253
  4718  006EE0                     l236:
  4719  006EE0  9692               	bcf	3986,3,c	;volatile
  4720  006EE2  7680               	btg	3968,3,c	;volatile
  4721  006EE4  D075               	goto	l253
  4722  006EE6                     l237:
  4723  006EE6  9892               	bcf	3986,4,c	;volatile
  4724  006EE8  7880               	btg	3968,4,c	;volatile
  4725  006EEA  D072               	goto	l253
  4726  006EEC                     l238:
  4727  006EEC  9A92               	bcf	3986,5,c	;volatile
  4728  006EEE  7A80               	btg	3968,5,c	;volatile
  4729  006EF0  D06F               	goto	l253
  4730  006EF2                     l239:
  4731  006EF2  9093               	bcf	3987,0,c	;volatile
  4732  006EF4  7081               	btg	3969,0,c	;volatile
  4733  006EF6  D06C               	goto	l253
  4734  006EF8                     l240:
  4735  006EF8  9293               	bcf	3987,1,c	;volatile
  4736  006EFA  7281               	btg	3969,1,c	;volatile
  4737  006EFC  D069               	goto	l253
  4738  006EFE                     l241:
  4739  006EFE  9493               	bcf	3987,2,c	;volatile
  4740  006F00  7481               	btg	3969,2,c	;volatile
  4741  006F02  D066               	goto	l253
  4742  006F04                     l242:
  4743  006F04  9693               	bcf	3987,3,c	;volatile
  4744  006F06  7681               	btg	3969,3,c	;volatile
  4745  006F08  D063               	goto	l253
  4746  006F0A                     l243:
  4747  006F0A  9893               	bcf	3987,4,c	;volatile
  4748  006F0C  7881               	btg	3969,4,c	;volatile
  4749  006F0E  D060               	goto	l253
  4750  006F10                     l244:
  4751  006F10  9A93               	bcf	3987,5,c	;volatile
  4752  006F12  7A81               	btg	3969,5,c	;volatile
  4753  006F14  D05D               	goto	l253
  4754  006F16                     l245:
  4755  006F16  9C93               	bcf	3987,6,c	;volatile
  4756  006F18  7C81               	btg	3969,6,c	;volatile
  4757  006F1A  D05A               	goto	l253
  4758  006F1C                     l246:
  4759  006F1C  9E93               	bcf	3987,7,c	;volatile
  4760  006F1E  7E81               	btg	3969,7,c	;volatile
  4761  006F20  D057               	goto	l253
  4762  006F22                     l247:
  4763  006F22  9094               	bcf	3988,0,c	;volatile
  4764  006F24  7082               	btg	3970,0,c	;volatile
  4765  006F26  D054               	goto	l253
  4766  006F28                     l248:
  4767  006F28  9294               	bcf	3988,1,c	;volatile
  4768  006F2A  7282               	btg	3970,1,c	;volatile
  4769  006F2C  D051               	goto	l253
  4770  006F2E                     l249:
  4771  006F2E  9494               	bcf	3988,2,c	;volatile
  4772  006F30  7482               	btg	3970,2,c	;volatile
  4773  006F32  D04E               	goto	l253
  4774  006F34                     l250:
  4775  006F34  9C94               	bcf	3988,6,c	;volatile
  4776  006F36  7C82               	btg	3970,6,c	;volatile
  4777  006F38  D04B               	goto	l253
  4778  006F3A                     l251:
  4779  006F3A  9E94               	bcf	3988,7,c	;volatile
  4780  006F3C  7E82               	btg	3970,7,c	;volatile
  4781  006F3E  D048               	goto	l253
  4782  006F40                     l252:
  4783  006F40  9E95               	bcf	3989,7,c	;volatile
  4784  006F42  7E83               	btg	3971,7,c	;volatile
  4785  006F44  D045               	goto	l253
  4786  006F46                     l2889:
  4787  006F46  C036  F038         	movff	inverte_saida@pino,??_inverte_saida
  4788  006F4A  C037  F039         	movff	inverte_saida@pino+1,??_inverte_saida+1
  4789                           
  4790                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4791                           ; Switch size 1, requested type "space"
  4792                           ; Number of cases is 1, Range of values is 124 to 124
  4793                           ; switch strategies available:
  4794                           ; Name         Instructions Cycles
  4795                           ; simple_byte            4     3 (average)
  4796                           ;	Chosen strategy is simple_byte
  4797  006F4E  5039               	movf	??_inverte_saida+1,w,c
  4798  006F50  0A7C               	xorlw	124	; case 124
  4799  006F52  A4D8               	btfss	status,2,c
  4800  006F54  D03D               	goto	l253
  4801                           
  4802                           ; Switch size 1, requested type "space"
  4803                           ; Number of cases is 20, Range of values is 0 to 31
  4804                           ; switch strategies available:
  4805                           ; Name         Instructions Cycles
  4806                           ; simple_byte           61    31 (average)
  4807                           ;	Chosen strategy is simple_byte
  4808  006F56  5038               	movf	??_inverte_saida,w,c
  4809  006F58  0A00               	xorlw	0	; case 0
  4810  006F5A  B4D8               	btfsc	status,2,c
  4811  006F5C  D7B8               	goto	l232
  4812  006F5E  0A01               	xorlw	1	; case 1
  4813  006F60  B4D8               	btfsc	status,2,c
  4814  006F62  D7B8               	goto	l234
  4815  006F64  0A03               	xorlw	3	; case 2
  4816  006F66  B4D8               	btfsc	status,2,c
  4817  006F68  D7B8               	goto	l235
  4818  006F6A  0A01               	xorlw	1	; case 3
  4819  006F6C  B4D8               	btfsc	status,2,c
  4820  006F6E  D7B8               	goto	l236
  4821  006F70  0A07               	xorlw	7	; case 4
  4822  006F72  B4D8               	btfsc	status,2,c
  4823  006F74  D7B8               	goto	l237
  4824  006F76  0A01               	xorlw	1	; case 5
  4825  006F78  B4D8               	btfsc	status,2,c
  4826  006F7A  D7B8               	goto	l238
  4827  006F7C  0A0D               	xorlw	13	; case 8
  4828  006F7E  B4D8               	btfsc	status,2,c
  4829  006F80  D7B8               	goto	l239
  4830  006F82  0A01               	xorlw	1	; case 9
  4831  006F84  B4D8               	btfsc	status,2,c
  4832  006F86  D7B8               	goto	l240
  4833  006F88  0A03               	xorlw	3	; case 10
  4834  006F8A  B4D8               	btfsc	status,2,c
  4835  006F8C  D7B8               	goto	l241
  4836  006F8E  0A01               	xorlw	1	; case 11
  4837  006F90  B4D8               	btfsc	status,2,c
  4838  006F92  D7B8               	goto	l242
  4839  006F94  0A07               	xorlw	7	; case 12
  4840  006F96  B4D8               	btfsc	status,2,c
  4841  006F98  D7B8               	goto	l243
  4842  006F9A  0A01               	xorlw	1	; case 13
  4843  006F9C  B4D8               	btfsc	status,2,c
  4844  006F9E  D7B8               	goto	l244
  4845  006FA0  0A03               	xorlw	3	; case 14
  4846  006FA2  B4D8               	btfsc	status,2,c
  4847  006FA4  D7B8               	goto	l245
  4848  006FA6  0A01               	xorlw	1	; case 15
  4849  006FA8  B4D8               	btfsc	status,2,c
  4850  006FAA  D7B8               	goto	l246
  4851  006FAC  0A1F               	xorlw	31	; case 16
  4852  006FAE  B4D8               	btfsc	status,2,c
  4853  006FB0  D7B8               	goto	l247
  4854  006FB2  0A01               	xorlw	1	; case 17
  4855  006FB4  B4D8               	btfsc	status,2,c
  4856  006FB6  D7B8               	goto	l248
  4857  006FB8  0A03               	xorlw	3	; case 18
  4858  006FBA  B4D8               	btfsc	status,2,c
  4859  006FBC  D7B8               	goto	l249
  4860  006FBE  0A04               	xorlw	4	; case 22
  4861  006FC0  B4D8               	btfsc	status,2,c
  4862  006FC2  D7B8               	goto	l250
  4863  006FC4  0A01               	xorlw	1	; case 23
  4864  006FC6  B4D8               	btfsc	status,2,c
  4865  006FC8  D7B8               	goto	l251
  4866  006FCA  0A08               	xorlw	8	; case 31
  4867  006FCC  B4D8               	btfsc	status,2,c
  4868  006FCE  D7B8               	goto	l252
  4869  006FD0                     l253:
  4870  006FD0  0012               	return	
  4871  006FD2                     __end_of_inverte_saida:
  4872                           	opt stack 0
  4873                           tblptru	equ	0xFF8
  4874                           tblptrh	equ	0xFF7
  4875                           tblptrl	equ	0xFF6
  4876                           tablat	equ	0xFF5
  4877                           prodh	equ	0xFF4
  4878                           prodl	equ	0xFF3
  4879                           intcon	equ	0xFF2
  4880                           intcon2	equ	0xFF1
  4881                           intcon3	equ	0xFF0
  4882                           postinc0	equ	0xFEE
  4883                           wreg	equ	0xFE8
  4884                           postdec1	equ	0xFE5
  4885                           fsr1l	equ	0xFE1
  4886                           indf2	equ	0xFDF
  4887                           fsr2h	equ	0xFDA
  4888                           fsr2l	equ	0xFD9
  4889                           status	equ	0xFD8
  4890                           
  4891 ;; *************** function _interrupcao *****************
  4892 ;; Defined at:
  4893 ;;		line 20 in file "BT_HC05.c"
  4894 ;; Parameters:    Size  Location     Type
  4895 ;;		None
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;		None
  4898 ;; Return value:  Size  Location     Type
  4899 ;;		None               void
  4900 ;; Registers used:
  4901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4902 ;; Tracked objects:
  4903 ;;		On entry : 0/0
  4904 ;;		On exit  : 0/0
  4905 ;;		Unchanged: 0/0
  4906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4907 ;;      Params:         0       0       0       0       0       0       0       0       0
  4908 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4909 ;;      Temps:         16       0       0       0       0       0       0       0       0
  4910 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4911 ;;Total ram usage:       16 bytes
  4912 ;; Hardware stack levels used:    1
  4913 ;; Hardware stack levels required when called:    1
  4914 ;; This function calls:
  4915 ;;		_ReadUSART
  4916 ;;		i2_inverte_saida
  4917 ;;		i2_nivel_alto
  4918 ;;		i2_nivel_baixo
  4919 ;; This function is called by:
  4920 ;;		Interrupt level 2
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924                           	psect	intcode
  4925  001008                     __pintcode:
  4926                           	opt stack 0
  4927  001008                     _interrupcao:
  4928                           	opt stack 23
  4929                           
  4930                           ;incstack = 0
  4931  001008  CFFA F028          	movff	pclath,??_interrupcao+2
  4932  00100C  CFFB F029          	movff	pclatu,??_interrupcao+3
  4933  001010  CFE9 F02A          	movff	fsr0l,??_interrupcao+4
  4934  001014  ED5D  F03B         	call	int_func,f	;refresh shadow registers
  4935                           pclatu	equ	0xFFB
  4936                           pclath	equ	0xFFA
  4937                           tblptru	equ	0xFF8
  4938                           tblptrh	equ	0xFF7
  4939                           tblptrl	equ	0xFF6
  4940                           tablat	equ	0xFF5
  4941                           prodh	equ	0xFF4
  4942                           prodl	equ	0xFF3
  4943                           intcon	equ	0xFF2
  4944                           intcon2	equ	0xFF1
  4945                           intcon3	equ	0xFF0
  4946                           postinc0	equ	0xFEE
  4947                           fsr0l	equ	0xFE9
  4948                           wreg	equ	0xFE8
  4949                           postdec1	equ	0xFE5
  4950                           fsr1l	equ	0xFE1
  4951                           indf2	equ	0xFDF
  4952                           fsr2h	equ	0xFDA
  4953                           fsr2l	equ	0xFD9
  4954                           status	equ	0xFD8
  4955                           
  4956                           	psect	intcode_body
  4957  0076BA                     __pintcode_body:
  4958                           	opt stack 23
  4959  0076BA                     int_func:
  4960                           	opt stack 23
  4961  0076BA  0006               	pop		; remove dummy address from shadow register refresh
  4962  0076BC  CFEA F02B          	movff	fsr0h,??_interrupcao+5
  4963  0076C0  CFE1 F02C          	movff	fsr1l,??_interrupcao+6
  4964  0076C4  CFE2 F02D          	movff	fsr1h,??_interrupcao+7
  4965  0076C8  CFD9 F02E          	movff	fsr2l,??_interrupcao+8
  4966  0076CC  CFDA F02F          	movff	fsr2h,??_interrupcao+9
  4967  0076D0  CFF3 F030          	movff	prodl,??_interrupcao+10
  4968  0076D4  CFF4 F031          	movff	prodh,??_interrupcao+11
  4969  0076D8  CFF6 F032          	movff	tblptrl,??_interrupcao+12
  4970  0076DC  CFF7 F033          	movff	tblptrh,??_interrupcao+13
  4971  0076E0  CFF8 F034          	movff	tblptru,??_interrupcao+14
  4972  0076E4  CFF5 F035          	movff	tablat,??_interrupcao+15
  4973                           
  4974                           ;BT_HC05.c: 22: if (INTCONbits.TMR0IF) {
  4975  0076E8  A4F2               	btfss	intcon,2,c	;volatile
  4976  0076EA  D058               	goto	i2l3727
  4977                           
  4978                           ;BT_HC05.c: 23: INTCONbits.TMR0IF = 0;
  4979  0076EC  94F2               	bcf	intcon,2,c	;volatile
  4980                           
  4981                           ;BT_HC05.c: 24: i++; if(i>255){i=0;}
  4982  0076EE  4A0F               	infsnz	_i,f,c
  4983  0076F0  2A10               	incf	_i+1,f,c
  4984  0076F2  0E00               	movlw	0
  4985  0076F4  5C0F               	subwf	_i,w,c
  4986  0076F6  0E01               	movlw	1
  4987  0076F8  5810               	subwfb	_i+1,w,c
  4988  0076FA  A0D8               	btfss	status,0,c
  4989  0076FC  D004               	goto	i2l3707
  4990  0076FE  0E00               	movlw	0
  4991  007700  6E10               	movwf	_i+1,c
  4992  007702  0E00               	movlw	0
  4993  007704  6E0F               	movwf	_i,c
  4994  007706                     i2l3707:
  4995                           
  4996                           ;BT_HC05.c: 25: if(i>=comand[1]){nivel_alto(31762);} else {nivel_baixo(31762);}
  4997  007706  0100               	movlb	0	; () banked
  4998  007708  0100               	movlb	0	; () banked
  4999  00770A  5161               	movf	(_comand+1)& (0+255),w,b
  5000  00770C  6E26               	movwf	??_interrupcao& (0+255),c
  5001  00770E  6A27               	clrf	(??_interrupcao+1)& (0+255),c
  5002  007710  5026               	movf	??_interrupcao,w,c
  5003  007712  5C0F               	subwf	_i,w,c
  5004  007714  5027               	movf	??_interrupcao+1,w,c
  5005  007716  5810               	subwfb	_i+1,w,c
  5006  007718  A0D8               	btfss	status,0,c
  5007  00771A  D007               	goto	i2l3711
  5008                           
  5009                           ; BSR set to: 0
  5010  00771C  0E7C               	movlw	124
  5011  00771E  6E23               	movwf	i2nivel_alto@pino+1,c
  5012  007720  0E12               	movlw	18
  5013  007722  6E22               	movwf	i2nivel_alto@pino,c
  5014  007724  ECE9  F037         	call	i2_nivel_alto	;wreg free
  5015  007728  D006               	goto	i2l3713
  5016  00772A                     i2l3711:
  5017  00772A  0E7C               	movlw	124
  5018  00772C  6E23               	movwf	i2nivel_baixo@pino+1,c
  5019  00772E  0E12               	movlw	18
  5020  007730  6E22               	movwf	i2nivel_baixo@pino,c
  5021  007732  EC19  F039         	call	i2_nivel_baixo	;wreg free
  5022  007736                     i2l3713:
  5023                           
  5024                           ;BT_HC05.c: 26: if(i>=comand[2]){nivel_alto(31760);} else {nivel_baixo(31760);}
  5025  007736  0100               	movlb	0	; () banked
  5026  007738  0100               	movlb	0	; () banked
  5027  00773A  5162               	movf	(_comand+2)& (0+255),w,b
  5028  00773C  6E26               	movwf	??_interrupcao& (0+255),c
  5029  00773E  6A27               	clrf	(??_interrupcao+1)& (0+255),c
  5030  007740  5026               	movf	??_interrupcao,w,c
  5031  007742  5C0F               	subwf	_i,w,c
  5032  007744  5027               	movf	??_interrupcao+1,w,c
  5033  007746  5810               	subwfb	_i+1,w,c
  5034  007748  A0D8               	btfss	status,0,c
  5035  00774A  D007               	goto	i2l3717
  5036                           
  5037                           ; BSR set to: 0
  5038  00774C  0E7C               	movlw	124
  5039  00774E  6E23               	movwf	i2nivel_alto@pino+1,c
  5040  007750  0E10               	movlw	16
  5041  007752  6E22               	movwf	i2nivel_alto@pino,c
  5042  007754  ECE9  F037         	call	i2_nivel_alto	;wreg free
  5043  007758  D006               	goto	i2l3719
  5044  00775A                     i2l3717:
  5045  00775A  0E7C               	movlw	124
  5046  00775C  6E23               	movwf	i2nivel_baixo@pino+1,c
  5047  00775E  0E10               	movlw	16
  5048  007760  6E22               	movwf	i2nivel_baixo@pino,c
  5049  007762  EC19  F039         	call	i2_nivel_baixo	;wreg free
  5050  007766                     i2l3719:
  5051                           
  5052                           ;BT_HC05.c: 27: if(i>=comand[3]){nivel_alto(31761);} else {nivel_baixo(31761);}
  5053  007766  0100               	movlb	0	; () banked
  5054  007768  0100               	movlb	0	; () banked
  5055  00776A  5163               	movf	(_comand+3)& (0+255),w,b
  5056  00776C  6E26               	movwf	??_interrupcao& (0+255),c
  5057  00776E  6A27               	clrf	(??_interrupcao+1)& (0+255),c
  5058  007770  5026               	movf	??_interrupcao,w,c
  5059  007772  5C0F               	subwf	_i,w,c
  5060  007774  5027               	movf	??_interrupcao+1,w,c
  5061  007776  5810               	subwfb	_i+1,w,c
  5062  007778  A0D8               	btfss	status,0,c
  5063  00777A  D007               	goto	i2l3723
  5064                           
  5065                           ; BSR set to: 0
  5066  00777C  0E7C               	movlw	124
  5067  00777E  6E23               	movwf	i2nivel_alto@pino+1,c
  5068  007780  0E11               	movlw	17
  5069  007782  6E22               	movwf	i2nivel_alto@pino,c
  5070  007784  ECE9  F037         	call	i2_nivel_alto	;wreg free
  5071  007788  D006               	goto	i2l3725
  5072  00778A                     i2l3723:
  5073  00778A  0E7C               	movlw	124
  5074  00778C  6E23               	movwf	i2nivel_baixo@pino+1,c
  5075  00778E  0E11               	movlw	17
  5076  007790  6E22               	movwf	i2nivel_baixo@pino,c
  5077  007792  EC19  F039         	call	i2_nivel_baixo	;wreg free
  5078  007796                     i2l3725:
  5079                           
  5080                           ;BT_HC05.c: 29: TMR0L = TMR0L + 16;
  5081  007796  50D6               	movf	4054,w,c	;volatile
  5082  007798  0F10               	addlw	16
  5083  00779A  6ED6               	movwf	4054,c	;volatile
  5084  00779C                     i2l3727:
  5085                           
  5086                           ;BT_HC05.c: 30: }
  5087                           ;BT_HC05.c: 32: if (PIR1bits.RCIF) { INTCONbits.TMR0IE = 0;
  5088  00779C  AA9E               	btfss	3998,5,c	;volatile
  5089  00779E  D0DC               	goto	i2l614
  5090  0077A0  9AF2               	bcf	intcon,5,c	;volatile
  5091                           
  5092                           ;BT_HC05.c: 33: PIR1bits.RCIF=0;
  5093  0077A2  9A9E               	bcf	3998,5,c	;volatile
  5094                           
  5095                           ;BT_HC05.c: 34: comando[n] = ReadUSART();
  5096  0077A4  501B               	movf	_n,w,c
  5097  0077A6  0D01               	mullw	1
  5098  0077A8  0100               	movlb	0	; () banked
  5099  0077AA  0E7E               	movlw	low _comando
  5100  0077AC  24F3               	addwf	prodl,w,c
  5101  0077AE  6ED9               	movwf	fsr2l,c
  5102  0077B0  0100               	movlb	0	; () banked
  5103  0077B2  0E00               	movlw	high _comando
  5104  0077B4  20F4               	addwfc	prodh,w,c
  5105  0077B6  6EDA               	movwf	fsr2h,c
  5106  0077B8  ECBB  F033         	call	_ReadUSART	;wreg free
  5107  0077BC  6EDF               	movwf	indf2,c
  5108                           
  5109                           ;BT_HC05.c: 35: if (comando[n]==79) {flagb=1;n=0;}
  5110  0077BE  501B               	movf	_n,w,c
  5111  0077C0  0D01               	mullw	1
  5112  0077C2  0100               	movlb	0	; () banked
  5113  0077C4  0E7E               	movlw	low _comando
  5114  0077C6  24F3               	addwf	prodl,w,c
  5115  0077C8  6ED9               	movwf	fsr2l,c
  5116  0077CA  0100               	movlb	0	; () banked
  5117  0077CC  0E00               	movlw	high _comando
  5118  0077CE  20F4               	addwfc	prodh,w,c
  5119  0077D0  6EDA               	movwf	fsr2h,c
  5120  0077D2  0E4F               	movlw	79
  5121  0077D4  62DF               	cpfseq	indf2,c
  5122  0077D6  D008               	goto	i2l602
  5123                           
  5124                           ; BSR set to: 0
  5125  0077D8  0E00               	movlw	0
  5126  0077DA  6E0C               	movwf	_flagb+1,c
  5127  0077DC  0E01               	movlw	1
  5128  0077DE  6E0B               	movwf	_flagb,c
  5129                           
  5130                           ; BSR set to: 0
  5131  0077E0  6E26               	movwf	??_interrupcao& (0+255),c
  5132  0077E2  0E00               	movlw	0
  5133  0077E4  6E1B               	movwf	_n,c
  5134  0077E6  5026               	movf	??_interrupcao& (0+255),w,c
  5135  0077E8                     i2l602:
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;BT_HC05.c: 37: if (m>13 && comando[0]==65) {m=n; flag=1;pisca=0;}
  5139  0077E8  0E0D               	movlw	13
  5140  0077EA  641A               	cpfsgt	_m,c
  5141  0077EC  D010               	goto	i2l3745
  5142                           
  5143                           ; BSR set to: 0
  5144  0077EE  0100               	movlb	0	; () banked
  5145  0077F0  0100               	movlb	0	; () banked
  5146  0077F2  517E               	movf	_comando& (0+255),w,b
  5147  0077F4  0A41               	xorlw	65
  5148  0077F6  A4D8               	btfss	status,2,c
  5149  0077F8  D00A               	goto	i2l3745
  5150                           
  5151                           ; BSR set to: 0
  5152  0077FA  C01B  F01A         	movff	_n,_m
  5153                           
  5154                           ; BSR set to: 0
  5155  0077FE  0E00               	movlw	0
  5156  007800  6E06               	movwf	_flag+1,c
  5157  007802  0E01               	movlw	1
  5158  007804  6E05               	movwf	_flag,c
  5159  007806  0E00               	movlw	0
  5160  007808  6E12               	movwf	_pisca+1,c
  5161  00780A  0E00               	movlw	0
  5162  00780C  6E11               	movwf	_pisca,c
  5163  00780E                     i2l3745:
  5164                           
  5165                           ; BSR set to: 0
  5166                           ;BT_HC05.c: 39: if (comando[n]=='R'){n=0;comando[0] = 'R';}
  5167  00780E  501B               	movf	_n,w,c
  5168  007810  0D01               	mullw	1
  5169  007812  0100               	movlb	0	; () banked
  5170  007814  0E7E               	movlw	low _comando
  5171  007816  24F3               	addwf	prodl,w,c
  5172  007818  6ED9               	movwf	fsr2l,c
  5173  00781A  0100               	movlb	0	; () banked
  5174  00781C  0E00               	movlw	high _comando
  5175  00781E  20F4               	addwfc	prodh,w,c
  5176  007820  6EDA               	movwf	fsr2h,c
  5177  007822  0E52               	movlw	82
  5178  007824  62DF               	cpfseq	indf2,c
  5179  007826  D00A               	goto	i2l3749
  5180                           
  5181                           ; BSR set to: 0
  5182  007828  6E26               	movwf	??_interrupcao& (0+255),c
  5183  00782A  0E00               	movlw	0
  5184  00782C  6E1B               	movwf	_n,c
  5185  00782E  5026               	movf	??_interrupcao& (0+255),w,c
  5186  007830  6E26               	movwf	??_interrupcao& (0+255),c
  5187  007832  0E52               	movlw	82
  5188  007834  0100               	movlb	0	; () banked
  5189  007836  0100               	movlb	0	; () banked
  5190  007838  6F7E               	movwf	_comando& (0+255),b
  5191  00783A  5026               	movf	??_interrupcao& (0+255),w,c
  5192  00783C                     i2l3749:
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;BT_HC05.c: 41: if (n>=3 && comando[0]=='R') {
  5196  00783C  0E02               	movlw	2
  5197  00783E  641B               	cpfsgt	_n,c
  5198  007840  D06F               	goto	i2l3795
  5199                           
  5200                           ; BSR set to: 0
  5201  007842  0100               	movlb	0	; () banked
  5202  007844  0100               	movlb	0	; () banked
  5203  007846  517E               	movf	_comando& (0+255),w,b
  5204  007848  0A52               	xorlw	82
  5205  00784A  A4D8               	btfss	status,2,c
  5206  00784C  D069               	goto	i2l3795
  5207                           
  5208                           ; BSR set to: 0
  5209                           ;BT_HC05.c: 42: comand[1]= comando[1];
  5210  00784E  C07F  F061         	movff	_comando+1,_comand+1
  5211                           
  5212                           ;BT_HC05.c: 43: comand[2]= comando[2];
  5213  007852  C080  F062         	movff	_comando+2,_comand+2
  5214                           
  5215                           ;BT_HC05.c: 44: comand[3]= comando[3];
  5216  007856  C081  F063         	movff	_comando+3,_comand+3
  5217                           
  5218                           ; BSR set to: 0
  5219                           ;BT_HC05.c: 45: n=0; comando[0] = 32;
  5220  00785A  6E26               	movwf	??_interrupcao& (0+255),c
  5221  00785C  0E00               	movlw	0
  5222  00785E  6E1B               	movwf	_n,c
  5223  007860  5026               	movf	??_interrupcao& (0+255),w,c
  5224  007862  6E26               	movwf	??_interrupcao& (0+255),c
  5225  007864  0E20               	movlw	32
  5226  007866  0100               	movlb	0	; () banked
  5227  007868  0100               	movlb	0	; () banked
  5228  00786A  6F7E               	movwf	_comando& (0+255),b
  5229  00786C  5026               	movf	??_interrupcao& (0+255),w,c
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;BT_HC05.c: 46: inverte_saida(31759); INTCONbits.TMR0IE = 1;
  5233  00786E  0E7C               	movlw	124
  5234  007870  6E23               	movwf	i2inverte_saida@pino+1,c
  5235  007872  0E0F               	movlw	15
  5236  007874  6E22               	movwf	i2inverte_saida@pino,c
  5237  007876  ECE3  F036         	call	i2_inverte_saida	;wreg free
  5238  00787A  8AF2               	bsf	intcon,5,c	;volatile
  5239  00787C  D051               	goto	i2l3795
  5240  00787E                     i2l3761:
  5241  00787E  0E00               	movlw	0
  5242  007880  6E06               	movwf	_flag+1,c
  5243  007882  0E00               	movlw	0
  5244  007884  6E05               	movwf	_flag,c
  5245  007886  0E00               	movlw	0
  5246  007888  6E04               	movwf	_chegou+1,c
  5247  00788A  0E01               	movlw	1
  5248  00788C  6E03               	movwf	_chegou,c
  5249  00788E  6E26               	movwf	??_interrupcao& (0+255),c
  5250  007890  0E00               	movlw	0
  5251  007892  6E1A               	movwf	_m,c
  5252  007894  5026               	movf	??_interrupcao& (0+255),w,c
  5253  007896  0E00               	movlw	0
  5254  007898  6E12               	movwf	_pisca+1,c
  5255  00789A  0E00               	movlw	0
  5256  00789C  6E11               	movwf	_pisca,c
  5257  00789E                     i2l3767:
  5258  00789E  0E00               	movlw	0
  5259  0078A0  6E06               	movwf	_flag+1,c
  5260  0078A2  0E00               	movlw	0
  5261  0078A4  6E05               	movwf	_flag,c
  5262  0078A6  6E26               	movwf	??_interrupcao& (0+255),c
  5263  0078A8  0E00               	movlw	0
  5264  0078AA  6E1B               	movwf	_n,c
  5265  0078AC  5026               	movf	??_interrupcao& (0+255),w,c
  5266  0078AE  0E00               	movlw	0
  5267  0078B0  6E02               	movwf	_c+1,c
  5268  0078B2  0E01               	movlw	1
  5269  0078B4  6E01               	movwf	_c,c
  5270  0078B6  0E7C               	movlw	124
  5271  0078B8  6E23               	movwf	i2nivel_alto@pino+1,c
  5272  0078BA  0E0F               	movlw	15
  5273  0078BC  6E22               	movwf	i2nivel_alto@pino,c
  5274  0078BE  ECE9  F037         	call	i2_nivel_alto	;wreg free
  5275  0078C2  D00E               	goto	L3
  5276  0078C4                     i2l3775:
  5277  0078C4  0E00               	movlw	0
  5278  0078C6  6E06               	movwf	_flag+1,c
  5279  0078C8  0E00               	movlw	0
  5280  0078CA  6E05               	movwf	_flag,c
  5281  0078CC  6E26               	movwf	??_interrupcao& (0+255),c
  5282  0078CE  0E00               	movlw	0
  5283  0078D0  6E1B               	movwf	_n,c
  5284  0078D2  5026               	movf	??_interrupcao& (0+255),w,c
  5285  0078D4  0E7C               	movlw	124
  5286  0078D6  6E23               	movwf	i2nivel_baixo@pino+1,c
  5287  0078D8  0E0F               	movlw	15
  5288  0078DA  6E22               	movwf	i2nivel_baixo@pino,c
  5289  0078DC  EC19  F039         	call	i2_nivel_baixo	;wreg free
  5290  0078E0                     L3:
  5291  0078E0  0E00               	movlw	0
  5292  0078E2  6E12               	movwf	_pisca+1,c
  5293  0078E4  0E00               	movlw	0
  5294  0078E6  6E11               	movwf	_pisca,c
  5295                           
  5296                           ;BT_HC05.c: 53: break;
  5297  0078E8  D02D               	goto	i2l3797
  5298  0078EA                     i2l3783:
  5299  0078EA  0E00               	movlw	0
  5300  0078EC  6E06               	movwf	_flag+1,c
  5301  0078EE  0E00               	movlw	0
  5302  0078F0  6E05               	movwf	_flag,c
  5303  0078F2  0E00               	movlw	0
  5304  0078F4  6E12               	movwf	_pisca+1,c
  5305  0078F6  0E01               	movlw	1
  5306  0078F8  D00D               	goto	L4
  5307  0078FA                     i2l3787:
  5308  0078FA  0E00               	movlw	0
  5309  0078FC  6E06               	movwf	_flag+1,c
  5310  0078FE  0E00               	movlw	0
  5311  007900  6E05               	movwf	_flag,c
  5312  007902  0E7C               	movlw	124
  5313  007904  6E23               	movwf	i2inverte_saida@pino+1,c
  5314  007906  0E0F               	movlw	15
  5315  007908  6E22               	movwf	i2inverte_saida@pino,c
  5316  00790A  ECE3  F036         	call	i2_inverte_saida	;wreg free
  5317  00790E  0E00               	movlw	0
  5318  007910  6E12               	movwf	_pisca+1,c
  5319  007912  0E00               	movlw	0
  5320  007914                     L4:
  5321  007914  6E11               	movwf	_pisca,c
  5322  007916  6E26               	movwf	??_interrupcao& (0+255),c
  5323  007918  0E00               	movlw	0
  5324  00791A  6E1B               	movwf	_n,c
  5325  00791C  5026               	movf	??_interrupcao& (0+255),w,c
  5326                           
  5327                           ;BT_HC05.c: 57: }
  5328  00791E  D012               	goto	i2l3797
  5329  007920                     i2l3795:
  5330  007920  0100               	movlb	0	; () banked
  5331  007922  0100               	movlb	0	; () banked
  5332  007924  517E               	movf	_comando& (0+255),w,b
  5333                           
  5334                           ; Switch size 1, requested type "space"
  5335                           ; Number of cases is 5, Range of values is 48 to 80
  5336                           ; switch strategies available:
  5337                           ; Name         Instructions Cycles
  5338                           ; simple_byte           16     9 (average)
  5339                           ;	Chosen strategy is simple_byte
  5340  007926  0A30               	xorlw	48	; case 48
  5341  007928  B4D8               	btfsc	status,2,c
  5342  00792A  D7E7               	goto	i2l3787
  5343  00792C  0A74               	xorlw	116	; case 68
  5344  00792E  B4D8               	btfsc	status,2,c
  5345  007930  D7C9               	goto	i2l3775
  5346  007932  0A08               	xorlw	8	; case 76
  5347  007934  B4D8               	btfsc	status,2,c
  5348  007936  D7B3               	goto	i2l3767
  5349  007938  0A03               	xorlw	3	; case 79
  5350  00793A  B4D8               	btfsc	status,2,c
  5351  00793C  D7A0               	goto	i2l3761
  5352  00793E  0A1F               	xorlw	31	; case 80
  5353  007940  B4D8               	btfsc	status,2,c
  5354  007942  D7D3               	goto	i2l3783
  5355  007944                     i2l3797:
  5356                           
  5357                           ;BT_HC05.c: 59: ++n; m=n; if(n>=29){n=0;}
  5358  007944  2A1B               	incf	_n,f,c
  5359  007946  C01B  F01A         	movff	_n,_m
  5360  00794A  0E1C               	movlw	28
  5361  00794C  641B               	cpfsgt	_n,c
  5362  00794E  D004               	goto	i2l614
  5363  007950  6E26               	movwf	??_interrupcao& (0+255),c
  5364  007952  0E00               	movlw	0
  5365  007954  6E1B               	movwf	_n,c
  5366  007956  5026               	movf	??_interrupcao& (0+255),w,c
  5367  007958                     i2l614:
  5368  007958  C035  FFF5         	movff	??_interrupcao+15,tablat
  5369  00795C  C034  FFF8         	movff	??_interrupcao+14,tblptru
  5370  007960  C033  FFF7         	movff	??_interrupcao+13,tblptrh
  5371  007964  C032  FFF6         	movff	??_interrupcao+12,tblptrl
  5372  007968  C031  FFF4         	movff	??_interrupcao+11,prodh
  5373  00796C  C030  FFF3         	movff	??_interrupcao+10,prodl
  5374  007970  C02F  FFDA         	movff	??_interrupcao+9,fsr2h
  5375  007974  C02E  FFD9         	movff	??_interrupcao+8,fsr2l
  5376  007978  C02D  FFE2         	movff	??_interrupcao+7,fsr1h
  5377  00797C  C02C  FFE1         	movff	??_interrupcao+6,fsr1l
  5378  007980  C02B  FFEA         	movff	??_interrupcao+5,fsr0h
  5379  007984  C02A  FFE9         	movff	??_interrupcao+4,fsr0l
  5380  007988  C029  FFFB         	movff	??_interrupcao+3,pclatu
  5381  00798C  C028  FFFA         	movff	??_interrupcao+2,pclath
  5382  007990  0011               	retfie		f
  5383  007992                     __end_of_interrupcao:
  5384                           	opt stack 0
  5385                           pclatu	equ	0xFFB
  5386                           pclath	equ	0xFFA
  5387                           tblptru	equ	0xFF8
  5388                           tblptrh	equ	0xFF7
  5389                           tblptrl	equ	0xFF6
  5390                           tablat	equ	0xFF5
  5391                           prodh	equ	0xFF4
  5392                           prodl	equ	0xFF3
  5393                           intcon	equ	0xFF2
  5394                           intcon2	equ	0xFF1
  5395                           intcon3	equ	0xFF0
  5396                           postinc0	equ	0xFEE
  5397                           fsr0h	equ	0xFEA
  5398                           fsr0l	equ	0xFE9
  5399                           wreg	equ	0xFE8
  5400                           postdec1	equ	0xFE5
  5401                           fsr1h	equ	0xFE2
  5402                           fsr1l	equ	0xFE1
  5403                           indf2	equ	0xFDF
  5404                           fsr2h	equ	0xFDA
  5405                           fsr2l	equ	0xFD9
  5406                           status	equ	0xFD8
  5407                           
  5408 ;; *************** function i2_nivel_baixo *****************
  5409 ;; Defined at:
  5410 ;;		line 199 in file "SanUSB48X.h"
  5411 ;; Parameters:    Size  Location     Type
  5412 ;;  pino            2    0[COMRAM] unsigned int 
  5413 ;; Auto vars:     Size  Location     Type
  5414 ;;		None
  5415 ;; Return value:  Size  Location     Type
  5416 ;;		None               void
  5417 ;; Registers used:
  5418 ;;		wreg, status,2, status,0
  5419 ;; Tracked objects:
  5420 ;;		On entry : 0/0
  5421 ;;		On exit  : 0/0
  5422 ;;		Unchanged: 0/0
  5423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5424 ;;      Params:         2       0       0       0       0       0       0       0       0
  5425 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5426 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5427 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5428 ;;Total ram usage:        4 bytes
  5429 ;; Hardware stack levels used:    1
  5430 ;; This function calls:
  5431 ;;		Nothing
  5432 ;; This function is called by:
  5433 ;;		_interrupcao
  5434 ;; This function uses a non-reentrant model
  5435 ;;
  5436                           
  5437                           	psect	text25
  5438  007232                     __ptext25:
  5439                           	opt stack 0
  5440  007232                     i2_nivel_baixo:
  5441                           	opt stack 23
  5442                           
  5443                           ;SanUSB48X.h: 201: switch(pino){
  5444                           
  5445                           ;incstack = 0
  5446  007232  D048               	goto	i2l3529
  5447  007234                     i2l205:
  5448  007234  9092               	bcf	3986,0,c	;volatile
  5449  007236  9080               	bcf	3968,0,c	;volatile
  5450  007238  D096               	goto	i2l228
  5451  00723A                     i2l207:
  5452  00723A  9292               	bcf	3986,1,c	;volatile
  5453  00723C  9280               	bcf	3968,1,c	;volatile
  5454  00723E  D093               	goto	i2l228
  5455  007240                     i2l208:
  5456  007240  9492               	bcf	3986,2,c	;volatile
  5457  007242  9480               	bcf	3968,2,c	;volatile
  5458  007244  D090               	goto	i2l228
  5459  007246                     i2l209:
  5460  007246  9692               	bcf	3986,3,c	;volatile
  5461  007248  9680               	bcf	3968,3,c	;volatile
  5462  00724A  D08D               	goto	i2l228
  5463  00724C                     i2l210:
  5464  00724C  9892               	bcf	3986,4,c	;volatile
  5465  00724E  9880               	bcf	3968,4,c	;volatile
  5466  007250  D08A               	goto	i2l228
  5467  007252                     i2l211:
  5468  007252  9A92               	bcf	3986,5,c	;volatile
  5469  007254  9A80               	bcf	3968,5,c	;volatile
  5470  007256  D087               	goto	i2l228
  5471  007258                     i2l3521:
  5472  007258  0E00               	movlw	0
  5473  00725A  6E92               	movwf	3986,c	;volatile
  5474  00725C  0E00               	movlw	0
  5475  00725E  6E89               	movwf	3977,c	;volatile
  5476  007260  D082               	goto	i2l228
  5477  007262                     i2l213:
  5478  007262  9093               	bcf	3987,0,c	;volatile
  5479  007264  9081               	bcf	3969,0,c	;volatile
  5480  007266  D07F               	goto	i2l228
  5481  007268                     i2l214:
  5482  007268  9293               	bcf	3987,1,c	;volatile
  5483  00726A  9281               	bcf	3969,1,c	;volatile
  5484  00726C  D07C               	goto	i2l228
  5485  00726E                     i2l215:
  5486  00726E  9493               	bcf	3987,2,c	;volatile
  5487  007270  9481               	bcf	3969,2,c	;volatile
  5488  007272  D079               	goto	i2l228
  5489  007274                     i2l216:
  5490  007274  9693               	bcf	3987,3,c	;volatile
  5491  007276  9681               	bcf	3969,3,c	;volatile
  5492  007278  D076               	goto	i2l228
  5493  00727A                     i2l217:
  5494  00727A  9893               	bcf	3987,4,c	;volatile
  5495  00727C  9881               	bcf	3969,4,c	;volatile
  5496  00727E  D073               	goto	i2l228
  5497  007280                     i2l218:
  5498  007280  9A93               	bcf	3987,5,c	;volatile
  5499  007282  9A81               	bcf	3969,5,c	;volatile
  5500  007284  D070               	goto	i2l228
  5501  007286                     i2l219:
  5502  007286  9C93               	bcf	3987,6,c	;volatile
  5503  007288  9C81               	bcf	3969,6,c	;volatile
  5504  00728A  D06D               	goto	i2l228
  5505  00728C                     i2l220:
  5506  00728C  9E93               	bcf	3987,7,c	;volatile
  5507  00728E  9E81               	bcf	3969,7,c	;volatile
  5508  007290  D06A               	goto	i2l228
  5509  007292                     i2l3523:
  5510  007292  0E00               	movlw	0
  5511  007294  6E93               	movwf	3987,c	;volatile
  5512  007296  0E00               	movlw	0
  5513  007298  6E8A               	movwf	3978,c	;volatile
  5514  00729A  D065               	goto	i2l228
  5515  00729C                     i2l222:
  5516  00729C  9094               	bcf	3988,0,c	;volatile
  5517  00729E  9082               	bcf	3970,0,c	;volatile
  5518  0072A0  D062               	goto	i2l228
  5519  0072A2                     i2l223:
  5520  0072A2  9294               	bcf	3988,1,c	;volatile
  5521  0072A4  9282               	bcf	3970,1,c	;volatile
  5522  0072A6  D05F               	goto	i2l228
  5523  0072A8                     i2l224:
  5524  0072A8  9494               	bcf	3988,2,c	;volatile
  5525  0072AA  9482               	bcf	3970,2,c	;volatile
  5526  0072AC  D05C               	goto	i2l228
  5527  0072AE                     i2l225:
  5528  0072AE  9C94               	bcf	3988,6,c	;volatile
  5529  0072B0  9C82               	bcf	3970,6,c	;volatile
  5530  0072B2  D059               	goto	i2l228
  5531  0072B4                     i2l226:
  5532  0072B4  9E94               	bcf	3988,7,c	;volatile
  5533  0072B6  9E82               	bcf	3970,7,c	;volatile
  5534  0072B8  D056               	goto	i2l228
  5535  0072BA                     i2l3525:
  5536  0072BA  0E00               	movlw	0
  5537  0072BC  6E94               	movwf	3988,c	;volatile
  5538  0072BE  0E00               	movlw	0
  5539  0072C0  6E8B               	movwf	3979,c	;volatile
  5540  0072C2  D051               	goto	i2l228
  5541  0072C4                     i2l3529:
  5542  0072C4  C022  F024         	movff	i2nivel_baixo@pino,??i2_nivel_baixo
  5543  0072C8  C023  F025         	movff	i2nivel_baixo@pino+1,??i2_nivel_baixo+1
  5544                           
  5545                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  5546                           ; Switch size 1, requested type "space"
  5547                           ; Number of cases is 2, Range of values is 15 to 124
  5548                           ; switch strategies available:
  5549                           ; Name         Instructions Cycles
  5550                           ; simple_byte            7     4 (average)
  5551                           ;	Chosen strategy is simple_byte
  5552  0072CC  5025               	movf	??i2_nivel_baixo+1,w,c
  5553  0072CE  0A0F               	xorlw	15	; case 15
  5554  0072D0  B4D8               	btfsc	status,2,c
  5555  0072D2  D004               	goto	i2l4729
  5556  0072D4  0A73               	xorlw	115	; case 124
  5557  0072D6  B4D8               	btfsc	status,2,c
  5558  0072D8  D00C               	goto	i2l4731
  5559  0072DA  D045               	goto	i2l228
  5560  0072DC                     i2l4729:
  5561                           
  5562                           ; Switch size 1, requested type "space"
  5563                           ; Number of cases is 3, Range of values is 128 to 130
  5564                           ; switch strategies available:
  5565                           ; Name         Instructions Cycles
  5566                           ; simple_byte           10     6 (average)
  5567                           ;	Chosen strategy is simple_byte
  5568  0072DC  5024               	movf	??i2_nivel_baixo,w,c
  5569  0072DE  0A80               	xorlw	128	; case 128
  5570  0072E0  B4D8               	btfsc	status,2,c
  5571  0072E2  D7BA               	goto	i2l3521
  5572  0072E4  0A01               	xorlw	1	; case 129
  5573  0072E6  B4D8               	btfsc	status,2,c
  5574  0072E8  D7D4               	goto	i2l3523
  5575  0072EA  0A03               	xorlw	3	; case 130
  5576  0072EC  B4D8               	btfsc	status,2,c
  5577  0072EE  D7E5               	goto	i2l3525
  5578  0072F0  D03A               	goto	i2l228
  5579  0072F2                     i2l4731:
  5580                           
  5581                           ; Switch size 1, requested type "space"
  5582                           ; Number of cases is 19, Range of values is 0 to 23
  5583                           ; switch strategies available:
  5584                           ; Name         Instructions Cycles
  5585                           ; simple_byte           58    30 (average)
  5586                           ;	Chosen strategy is simple_byte
  5587  0072F2  5024               	movf	??i2_nivel_baixo,w,c
  5588  0072F4  0A00               	xorlw	0	; case 0
  5589  0072F6  B4D8               	btfsc	status,2,c
  5590  0072F8  D79D               	goto	i2l205
  5591  0072FA  0A01               	xorlw	1	; case 1
  5592  0072FC  B4D8               	btfsc	status,2,c
  5593  0072FE  D79D               	goto	i2l207
  5594  007300  0A03               	xorlw	3	; case 2
  5595  007302  B4D8               	btfsc	status,2,c
  5596  007304  D79D               	goto	i2l208
  5597  007306  0A01               	xorlw	1	; case 3
  5598  007308  B4D8               	btfsc	status,2,c
  5599  00730A  D79D               	goto	i2l209
  5600  00730C  0A07               	xorlw	7	; case 4
  5601  00730E  B4D8               	btfsc	status,2,c
  5602  007310  D79D               	goto	i2l210
  5603  007312  0A01               	xorlw	1	; case 5
  5604  007314  B4D8               	btfsc	status,2,c
  5605  007316  D79D               	goto	i2l211
  5606  007318  0A0D               	xorlw	13	; case 8
  5607  00731A  B4D8               	btfsc	status,2,c
  5608  00731C  D7A2               	goto	i2l213
  5609  00731E  0A01               	xorlw	1	; case 9
  5610  007320  B4D8               	btfsc	status,2,c
  5611  007322  D7A2               	goto	i2l214
  5612  007324  0A03               	xorlw	3	; case 10
  5613  007326  B4D8               	btfsc	status,2,c
  5614  007328  D7A2               	goto	i2l215
  5615  00732A  0A01               	xorlw	1	; case 11
  5616  00732C  B4D8               	btfsc	status,2,c
  5617  00732E  D7A2               	goto	i2l216
  5618  007330  0A07               	xorlw	7	; case 12
  5619  007332  B4D8               	btfsc	status,2,c
  5620  007334  D7A2               	goto	i2l217
  5621  007336  0A01               	xorlw	1	; case 13
  5622  007338  B4D8               	btfsc	status,2,c
  5623  00733A  D7A2               	goto	i2l218
  5624  00733C  0A03               	xorlw	3	; case 14
  5625  00733E  B4D8               	btfsc	status,2,c
  5626  007340  D7A2               	goto	i2l219
  5627  007342  0A01               	xorlw	1	; case 15
  5628  007344  B4D8               	btfsc	status,2,c
  5629  007346  D7A2               	goto	i2l220
  5630  007348  0A1F               	xorlw	31	; case 16
  5631  00734A  B4D8               	btfsc	status,2,c
  5632  00734C  D7A7               	goto	i2l222
  5633  00734E  0A01               	xorlw	1	; case 17
  5634  007350  B4D8               	btfsc	status,2,c
  5635  007352  D7A7               	goto	i2l223
  5636  007354  0A03               	xorlw	3	; case 18
  5637  007356  B4D8               	btfsc	status,2,c
  5638  007358  D7A7               	goto	i2l224
  5639  00735A  0A04               	xorlw	4	; case 22
  5640  00735C  B4D8               	btfsc	status,2,c
  5641  00735E  D7A7               	goto	i2l225
  5642  007360  0A01               	xorlw	1	; case 23
  5643  007362  B4D8               	btfsc	status,2,c
  5644  007364  D7A7               	goto	i2l226
  5645  007366                     i2l228:
  5646  007366  0012               	return	
  5647  007368                     __end_ofi2_nivel_baixo:
  5648                           	opt stack 0
  5649                           pclatu	equ	0xFFB
  5650                           pclath	equ	0xFFA
  5651                           tblptru	equ	0xFF8
  5652                           tblptrh	equ	0xFF7
  5653                           tblptrl	equ	0xFF6
  5654                           tablat	equ	0xFF5
  5655                           prodh	equ	0xFF4
  5656                           prodl	equ	0xFF3
  5657                           intcon	equ	0xFF2
  5658                           intcon2	equ	0xFF1
  5659                           intcon3	equ	0xFF0
  5660                           postinc0	equ	0xFEE
  5661                           fsr0h	equ	0xFEA
  5662                           fsr0l	equ	0xFE9
  5663                           wreg	equ	0xFE8
  5664                           postdec1	equ	0xFE5
  5665                           fsr1h	equ	0xFE2
  5666                           fsr1l	equ	0xFE1
  5667                           indf2	equ	0xFDF
  5668                           fsr2h	equ	0xFDA
  5669                           fsr2l	equ	0xFD9
  5670                           status	equ	0xFD8
  5671                           
  5672 ;; *************** function i2_nivel_alto *****************
  5673 ;; Defined at:
  5674 ;;		line 169 in file "SanUSB48X.h"
  5675 ;; Parameters:    Size  Location     Type
  5676 ;;  pino            2    0[COMRAM] unsigned int 
  5677 ;; Auto vars:     Size  Location     Type
  5678 ;;		None
  5679 ;; Return value:  Size  Location     Type
  5680 ;;		None               void
  5681 ;; Registers used:
  5682 ;;		wreg, status,2, status,0
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5688 ;;      Params:         2       0       0       0       0       0       0       0       0
  5689 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5690 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5691 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5692 ;;Total ram usage:        4 bytes
  5693 ;; Hardware stack levels used:    1
  5694 ;; This function calls:
  5695 ;;		Nothing
  5696 ;; This function is called by:
  5697 ;;		_interrupcao
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700                           
  5701                           	psect	text26
  5702  006FD2                     __ptext26:
  5703                           	opt stack 0
  5704  006FD2                     i2_nivel_alto:
  5705                           	opt stack 23
  5706                           
  5707                           ;SanUSB48X.h: 172: switch(pino){
  5708                           
  5709                           ;incstack = 0
  5710  006FD2  D045               	goto	i2l3509
  5711  006FD4                     i2l178:
  5712  006FD4  9092               	bcf	3986,0,c	;volatile
  5713  006FD6  8080               	bsf	3968,0,c	;volatile
  5714  006FD8  D093               	goto	i2l201
  5715  006FDA                     i2l180:
  5716  006FDA  9292               	bcf	3986,1,c	;volatile
  5717  006FDC  8280               	bsf	3968,1,c	;volatile
  5718  006FDE  D090               	goto	i2l201
  5719  006FE0                     i2l181:
  5720  006FE0  9492               	bcf	3986,2,c	;volatile
  5721  006FE2  8480               	bsf	3968,2,c	;volatile
  5722  006FE4  D08D               	goto	i2l201
  5723  006FE6                     i2l182:
  5724  006FE6  9692               	bcf	3986,3,c	;volatile
  5725  006FE8  8680               	bsf	3968,3,c	;volatile
  5726  006FEA  D08A               	goto	i2l201
  5727  006FEC                     i2l183:
  5728  006FEC  9892               	bcf	3986,4,c	;volatile
  5729  006FEE  8880               	bsf	3968,4,c	;volatile
  5730  006FF0  D087               	goto	i2l201
  5731  006FF2                     i2l184:
  5732  006FF2  9A92               	bcf	3986,5,c	;volatile
  5733  006FF4  8A80               	bsf	3968,5,c	;volatile
  5734  006FF6  D084               	goto	i2l201
  5735  006FF8                     i2l3495:
  5736  006FF8  0E00               	movlw	0
  5737  006FFA  6E92               	movwf	3986,c	;volatile
  5738  006FFC  6889               	setf	3977,c	;volatile
  5739  006FFE  D080               	goto	i2l201
  5740  007000                     i2l186:
  5741  007000  9093               	bcf	3987,0,c	;volatile
  5742  007002  8081               	bsf	3969,0,c	;volatile
  5743  007004  D07D               	goto	i2l201
  5744  007006                     i2l187:
  5745  007006  9293               	bcf	3987,1,c	;volatile
  5746  007008  8281               	bsf	3969,1,c	;volatile
  5747  00700A  D07A               	goto	i2l201
  5748  00700C                     i2l188:
  5749  00700C  9493               	bcf	3987,2,c	;volatile
  5750  00700E  8481               	bsf	3969,2,c	;volatile
  5751  007010  D077               	goto	i2l201
  5752  007012                     i2l189:
  5753  007012  9693               	bcf	3987,3,c	;volatile
  5754  007014  8681               	bsf	3969,3,c	;volatile
  5755  007016  D074               	goto	i2l201
  5756  007018                     i2l190:
  5757  007018  9893               	bcf	3987,4,c	;volatile
  5758  00701A  8881               	bsf	3969,4,c	;volatile
  5759  00701C  D071               	goto	i2l201
  5760  00701E                     i2l191:
  5761  00701E  9A93               	bcf	3987,5,c	;volatile
  5762  007020  8A81               	bsf	3969,5,c	;volatile
  5763  007022  D06E               	goto	i2l201
  5764  007024                     i2l192:
  5765  007024  9C93               	bcf	3987,6,c	;volatile
  5766  007026  8C81               	bsf	3969,6,c	;volatile
  5767  007028  D06B               	goto	i2l201
  5768  00702A                     i2l193:
  5769  00702A  9E93               	bcf	3987,7,c	;volatile
  5770  00702C  8E81               	bsf	3969,7,c	;volatile
  5771  00702E  D068               	goto	i2l201
  5772  007030                     i2l3499:
  5773  007030  0E00               	movlw	0
  5774  007032  6E93               	movwf	3987,c	;volatile
  5775  007034  688A               	setf	3978,c	;volatile
  5776  007036  D064               	goto	i2l201
  5777  007038                     i2l195:
  5778  007038  9094               	bcf	3988,0,c	;volatile
  5779  00703A  8082               	bsf	3970,0,c	;volatile
  5780  00703C  D061               	goto	i2l201
  5781  00703E                     i2l196:
  5782  00703E  9294               	bcf	3988,1,c	;volatile
  5783  007040  8282               	bsf	3970,1,c	;volatile
  5784  007042  D05E               	goto	i2l201
  5785  007044                     i2l197:
  5786  007044  9494               	bcf	3988,2,c	;volatile
  5787  007046  8482               	bsf	3970,2,c	;volatile
  5788  007048  D05B               	goto	i2l201
  5789  00704A                     i2l198:
  5790  00704A  9C94               	bcf	3988,6,c	;volatile
  5791  00704C  8C82               	bsf	3970,6,c	;volatile
  5792  00704E  D058               	goto	i2l201
  5793  007050                     i2l199:
  5794  007050  9E94               	bcf	3988,7,c	;volatile
  5795  007052  8E82               	bsf	3970,7,c	;volatile
  5796  007054  D055               	goto	i2l201
  5797  007056                     i2l3503:
  5798  007056  0E00               	movlw	0
  5799  007058  6E94               	movwf	3988,c	;volatile
  5800  00705A  688B               	setf	3979,c	;volatile
  5801  00705C  D051               	goto	i2l201
  5802  00705E                     i2l3509:
  5803  00705E  C022  F024         	movff	i2nivel_alto@pino,??i2_nivel_alto
  5804  007062  C023  F025         	movff	i2nivel_alto@pino+1,??i2_nivel_alto+1
  5805                           
  5806                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  5807                           ; Switch size 1, requested type "space"
  5808                           ; Number of cases is 2, Range of values is 15 to 124
  5809                           ; switch strategies available:
  5810                           ; Name         Instructions Cycles
  5811                           ; simple_byte            7     4 (average)
  5812                           ;	Chosen strategy is simple_byte
  5813  007066  5025               	movf	??i2_nivel_alto+1,w,c
  5814  007068  0A0F               	xorlw	15	; case 15
  5815  00706A  B4D8               	btfsc	status,2,c
  5816  00706C  D004               	goto	i2l4733
  5817  00706E  0A73               	xorlw	115	; case 124
  5818  007070  B4D8               	btfsc	status,2,c
  5819  007072  D00C               	goto	i2l4735
  5820  007074  D045               	goto	i2l201
  5821  007076                     i2l4733:
  5822                           
  5823                           ; Switch size 1, requested type "space"
  5824                           ; Number of cases is 3, Range of values is 128 to 130
  5825                           ; switch strategies available:
  5826                           ; Name         Instructions Cycles
  5827                           ; simple_byte           10     6 (average)
  5828                           ;	Chosen strategy is simple_byte
  5829  007076  5024               	movf	??i2_nivel_alto,w,c
  5830  007078  0A80               	xorlw	128	; case 128
  5831  00707A  B4D8               	btfsc	status,2,c
  5832  00707C  D7BD               	goto	i2l3495
  5833  00707E  0A01               	xorlw	1	; case 129
  5834  007080  B4D8               	btfsc	status,2,c
  5835  007082  D7D6               	goto	i2l3499
  5836  007084  0A03               	xorlw	3	; case 130
  5837  007086  B4D8               	btfsc	status,2,c
  5838  007088  D7E6               	goto	i2l3503
  5839  00708A  D03A               	goto	i2l201
  5840  00708C                     i2l4735:
  5841                           
  5842                           ; Switch size 1, requested type "space"
  5843                           ; Number of cases is 19, Range of values is 0 to 23
  5844                           ; switch strategies available:
  5845                           ; Name         Instructions Cycles
  5846                           ; simple_byte           58    30 (average)
  5847                           ;	Chosen strategy is simple_byte
  5848  00708C  5024               	movf	??i2_nivel_alto,w,c
  5849  00708E  0A00               	xorlw	0	; case 0
  5850  007090  B4D8               	btfsc	status,2,c
  5851  007092  D7A0               	goto	i2l178
  5852  007094  0A01               	xorlw	1	; case 1
  5853  007096  B4D8               	btfsc	status,2,c
  5854  007098  D7A0               	goto	i2l180
  5855  00709A  0A03               	xorlw	3	; case 2
  5856  00709C  B4D8               	btfsc	status,2,c
  5857  00709E  D7A0               	goto	i2l181
  5858  0070A0  0A01               	xorlw	1	; case 3
  5859  0070A2  B4D8               	btfsc	status,2,c
  5860  0070A4  D7A0               	goto	i2l182
  5861  0070A6  0A07               	xorlw	7	; case 4
  5862  0070A8  B4D8               	btfsc	status,2,c
  5863  0070AA  D7A0               	goto	i2l183
  5864  0070AC  0A01               	xorlw	1	; case 5
  5865  0070AE  B4D8               	btfsc	status,2,c
  5866  0070B0  D7A0               	goto	i2l184
  5867  0070B2  0A0D               	xorlw	13	; case 8
  5868  0070B4  B4D8               	btfsc	status,2,c
  5869  0070B6  D7A4               	goto	i2l186
  5870  0070B8  0A01               	xorlw	1	; case 9
  5871  0070BA  B4D8               	btfsc	status,2,c
  5872  0070BC  D7A4               	goto	i2l187
  5873  0070BE  0A03               	xorlw	3	; case 10
  5874  0070C0  B4D8               	btfsc	status,2,c
  5875  0070C2  D7A4               	goto	i2l188
  5876  0070C4  0A01               	xorlw	1	; case 11
  5877  0070C6  B4D8               	btfsc	status,2,c
  5878  0070C8  D7A4               	goto	i2l189
  5879  0070CA  0A07               	xorlw	7	; case 12
  5880  0070CC  B4D8               	btfsc	status,2,c
  5881  0070CE  D7A4               	goto	i2l190
  5882  0070D0  0A01               	xorlw	1	; case 13
  5883  0070D2  B4D8               	btfsc	status,2,c
  5884  0070D4  D7A4               	goto	i2l191
  5885  0070D6  0A03               	xorlw	3	; case 14
  5886  0070D8  B4D8               	btfsc	status,2,c
  5887  0070DA  D7A4               	goto	i2l192
  5888  0070DC  0A01               	xorlw	1	; case 15
  5889  0070DE  B4D8               	btfsc	status,2,c
  5890  0070E0  D7A4               	goto	i2l193
  5891  0070E2  0A1F               	xorlw	31	; case 16
  5892  0070E4  B4D8               	btfsc	status,2,c
  5893  0070E6  D7A8               	goto	i2l195
  5894  0070E8  0A01               	xorlw	1	; case 17
  5895  0070EA  B4D8               	btfsc	status,2,c
  5896  0070EC  D7A8               	goto	i2l196
  5897  0070EE  0A03               	xorlw	3	; case 18
  5898  0070F0  B4D8               	btfsc	status,2,c
  5899  0070F2  D7A8               	goto	i2l197
  5900  0070F4  0A04               	xorlw	4	; case 22
  5901  0070F6  B4D8               	btfsc	status,2,c
  5902  0070F8  D7A8               	goto	i2l198
  5903  0070FA  0A01               	xorlw	1	; case 23
  5904  0070FC  B4D8               	btfsc	status,2,c
  5905  0070FE  D7A8               	goto	i2l199
  5906  007100                     i2l201:
  5907  007100  0012               	return	
  5908  007102                     __end_ofi2_nivel_alto:
  5909                           	opt stack 0
  5910                           pclatu	equ	0xFFB
  5911                           pclath	equ	0xFFA
  5912                           tblptru	equ	0xFF8
  5913                           tblptrh	equ	0xFF7
  5914                           tblptrl	equ	0xFF6
  5915                           tablat	equ	0xFF5
  5916                           prodh	equ	0xFF4
  5917                           prodl	equ	0xFF3
  5918                           intcon	equ	0xFF2
  5919                           intcon2	equ	0xFF1
  5920                           intcon3	equ	0xFF0
  5921                           postinc0	equ	0xFEE
  5922                           fsr0h	equ	0xFEA
  5923                           fsr0l	equ	0xFE9
  5924                           wreg	equ	0xFE8
  5925                           postdec1	equ	0xFE5
  5926                           fsr1h	equ	0xFE2
  5927                           fsr1l	equ	0xFE1
  5928                           indf2	equ	0xFDF
  5929                           fsr2h	equ	0xFDA
  5930                           fsr2l	equ	0xFD9
  5931                           status	equ	0xFD8
  5932                           
  5933 ;; *************** function i2_inverte_saida *****************
  5934 ;; Defined at:
  5935 ;;		line 228 in file "SanUSB48X.h"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;  pino            2    0[COMRAM] unsigned int 
  5938 ;; Auto vars:     Size  Location     Type
  5939 ;;		None
  5940 ;; Return value:  Size  Location     Type
  5941 ;;		None               void
  5942 ;; Registers used:
  5943 ;;		wreg, status,2, status,0
  5944 ;; Tracked objects:
  5945 ;;		On entry : 0/0
  5946 ;;		On exit  : 0/0
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5949 ;;      Params:         2       0       0       0       0       0       0       0       0
  5950 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5951 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5952 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5953 ;;Total ram usage:        4 bytes
  5954 ;; Hardware stack levels used:    1
  5955 ;; This function calls:
  5956 ;;		Nothing
  5957 ;; This function is called by:
  5958 ;;		_interrupcao
  5959 ;; This function uses a non-reentrant model
  5960 ;;
  5961                           
  5962                           	psect	text27
  5963  006DC6                     __ptext27:
  5964                           	opt stack 0
  5965  006DC6                     i2_inverte_saida:
  5966                           	opt stack 23
  5967                           
  5968                           ;SanUSB48X.h: 230: switch(pino){
  5969                           
  5970                           ;incstack = 0
  5971  006DC6  D03C               	goto	i2l3543
  5972  006DC8                     i2l232:
  5973  006DC8  9092               	bcf	3986,0,c	;volatile
  5974  006DCA  7080               	btg	3968,0,c	;volatile
  5975  006DCC  D07E               	goto	i2l253
  5976  006DCE                     i2l234:
  5977  006DCE  9292               	bcf	3986,1,c	;volatile
  5978  006DD0  7280               	btg	3968,1,c	;volatile
  5979  006DD2  D07B               	goto	i2l253
  5980  006DD4                     i2l235:
  5981  006DD4  9492               	bcf	3986,2,c	;volatile
  5982  006DD6  7480               	btg	3968,2,c	;volatile
  5983  006DD8  D078               	goto	i2l253
  5984  006DDA                     i2l236:
  5985  006DDA  9692               	bcf	3986,3,c	;volatile
  5986  006DDC  7680               	btg	3968,3,c	;volatile
  5987  006DDE  D075               	goto	i2l253
  5988  006DE0                     i2l237:
  5989  006DE0  9892               	bcf	3986,4,c	;volatile
  5990  006DE2  7880               	btg	3968,4,c	;volatile
  5991  006DE4  D072               	goto	i2l253
  5992  006DE6                     i2l238:
  5993  006DE6  9A92               	bcf	3986,5,c	;volatile
  5994  006DE8  7A80               	btg	3968,5,c	;volatile
  5995  006DEA  D06F               	goto	i2l253
  5996  006DEC                     i2l239:
  5997  006DEC  9093               	bcf	3987,0,c	;volatile
  5998  006DEE  7081               	btg	3969,0,c	;volatile
  5999  006DF0  D06C               	goto	i2l253
  6000  006DF2                     i2l240:
  6001  006DF2  9293               	bcf	3987,1,c	;volatile
  6002  006DF4  7281               	btg	3969,1,c	;volatile
  6003  006DF6  D069               	goto	i2l253
  6004  006DF8                     i2l241:
  6005  006DF8  9493               	bcf	3987,2,c	;volatile
  6006  006DFA  7481               	btg	3969,2,c	;volatile
  6007  006DFC  D066               	goto	i2l253
  6008  006DFE                     i2l242:
  6009  006DFE  9693               	bcf	3987,3,c	;volatile
  6010  006E00  7681               	btg	3969,3,c	;volatile
  6011  006E02  D063               	goto	i2l253
  6012  006E04                     i2l243:
  6013  006E04  9893               	bcf	3987,4,c	;volatile
  6014  006E06  7881               	btg	3969,4,c	;volatile
  6015  006E08  D060               	goto	i2l253
  6016  006E0A                     i2l244:
  6017  006E0A  9A93               	bcf	3987,5,c	;volatile
  6018  006E0C  7A81               	btg	3969,5,c	;volatile
  6019  006E0E  D05D               	goto	i2l253
  6020  006E10                     i2l245:
  6021  006E10  9C93               	bcf	3987,6,c	;volatile
  6022  006E12  7C81               	btg	3969,6,c	;volatile
  6023  006E14  D05A               	goto	i2l253
  6024  006E16                     i2l246:
  6025  006E16  9E93               	bcf	3987,7,c	;volatile
  6026  006E18  7E81               	btg	3969,7,c	;volatile
  6027  006E1A  D057               	goto	i2l253
  6028  006E1C                     i2l247:
  6029  006E1C  9094               	bcf	3988,0,c	;volatile
  6030  006E1E  7082               	btg	3970,0,c	;volatile
  6031  006E20  D054               	goto	i2l253
  6032  006E22                     i2l248:
  6033  006E22  9294               	bcf	3988,1,c	;volatile
  6034  006E24  7282               	btg	3970,1,c	;volatile
  6035  006E26  D051               	goto	i2l253
  6036  006E28                     i2l249:
  6037  006E28  9494               	bcf	3988,2,c	;volatile
  6038  006E2A  7482               	btg	3970,2,c	;volatile
  6039  006E2C  D04E               	goto	i2l253
  6040  006E2E                     i2l250:
  6041  006E2E  9C94               	bcf	3988,6,c	;volatile
  6042  006E30  7C82               	btg	3970,6,c	;volatile
  6043  006E32  D04B               	goto	i2l253
  6044  006E34                     i2l251:
  6045  006E34  9E94               	bcf	3988,7,c	;volatile
  6046  006E36  7E82               	btg	3970,7,c	;volatile
  6047  006E38  D048               	goto	i2l253
  6048  006E3A                     i2l252:
  6049  006E3A  9E95               	bcf	3989,7,c	;volatile
  6050  006E3C  7E83               	btg	3971,7,c	;volatile
  6051  006E3E  D045               	goto	i2l253
  6052  006E40                     i2l3543:
  6053  006E40  C022  F024         	movff	i2inverte_saida@pino,??i2_inverte_saida
  6054  006E44  C023  F025         	movff	i2inverte_saida@pino+1,??i2_inverte_saida+1
  6055                           
  6056                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6057                           ; Switch size 1, requested type "space"
  6058                           ; Number of cases is 1, Range of values is 124 to 124
  6059                           ; switch strategies available:
  6060                           ; Name         Instructions Cycles
  6061                           ; simple_byte            4     3 (average)
  6062                           ;	Chosen strategy is simple_byte
  6063  006E48  5025               	movf	??i2_inverte_saida+1,w,c
  6064  006E4A  0A7C               	xorlw	124	; case 124
  6065  006E4C  A4D8               	btfss	status,2,c
  6066  006E4E  D03D               	goto	i2l253
  6067                           
  6068                           ; Switch size 1, requested type "space"
  6069                           ; Number of cases is 20, Range of values is 0 to 31
  6070                           ; switch strategies available:
  6071                           ; Name         Instructions Cycles
  6072                           ; simple_byte           61    31 (average)
  6073                           ;	Chosen strategy is simple_byte
  6074  006E50  5024               	movf	??i2_inverte_saida,w,c
  6075  006E52  0A00               	xorlw	0	; case 0
  6076  006E54  B4D8               	btfsc	status,2,c
  6077  006E56  D7B8               	goto	i2l232
  6078  006E58  0A01               	xorlw	1	; case 1
  6079  006E5A  B4D8               	btfsc	status,2,c
  6080  006E5C  D7B8               	goto	i2l234
  6081  006E5E  0A03               	xorlw	3	; case 2
  6082  006E60  B4D8               	btfsc	status,2,c
  6083  006E62  D7B8               	goto	i2l235
  6084  006E64  0A01               	xorlw	1	; case 3
  6085  006E66  B4D8               	btfsc	status,2,c
  6086  006E68  D7B8               	goto	i2l236
  6087  006E6A  0A07               	xorlw	7	; case 4
  6088  006E6C  B4D8               	btfsc	status,2,c
  6089  006E6E  D7B8               	goto	i2l237
  6090  006E70  0A01               	xorlw	1	; case 5
  6091  006E72  B4D8               	btfsc	status,2,c
  6092  006E74  D7B8               	goto	i2l238
  6093  006E76  0A0D               	xorlw	13	; case 8
  6094  006E78  B4D8               	btfsc	status,2,c
  6095  006E7A  D7B8               	goto	i2l239
  6096  006E7C  0A01               	xorlw	1	; case 9
  6097  006E7E  B4D8               	btfsc	status,2,c
  6098  006E80  D7B8               	goto	i2l240
  6099  006E82  0A03               	xorlw	3	; case 10
  6100  006E84  B4D8               	btfsc	status,2,c
  6101  006E86  D7B8               	goto	i2l241
  6102  006E88  0A01               	xorlw	1	; case 11
  6103  006E8A  B4D8               	btfsc	status,2,c
  6104  006E8C  D7B8               	goto	i2l242
  6105  006E8E  0A07               	xorlw	7	; case 12
  6106  006E90  B4D8               	btfsc	status,2,c
  6107  006E92  D7B8               	goto	i2l243
  6108  006E94  0A01               	xorlw	1	; case 13
  6109  006E96  B4D8               	btfsc	status,2,c
  6110  006E98  D7B8               	goto	i2l244
  6111  006E9A  0A03               	xorlw	3	; case 14
  6112  006E9C  B4D8               	btfsc	status,2,c
  6113  006E9E  D7B8               	goto	i2l245
  6114  006EA0  0A01               	xorlw	1	; case 15
  6115  006EA2  B4D8               	btfsc	status,2,c
  6116  006EA4  D7B8               	goto	i2l246
  6117  006EA6  0A1F               	xorlw	31	; case 16
  6118  006EA8  B4D8               	btfsc	status,2,c
  6119  006EAA  D7B8               	goto	i2l247
  6120  006EAC  0A01               	xorlw	1	; case 17
  6121  006EAE  B4D8               	btfsc	status,2,c
  6122  006EB0  D7B8               	goto	i2l248
  6123  006EB2  0A03               	xorlw	3	; case 18
  6124  006EB4  B4D8               	btfsc	status,2,c
  6125  006EB6  D7B8               	goto	i2l249
  6126  006EB8  0A04               	xorlw	4	; case 22
  6127  006EBA  B4D8               	btfsc	status,2,c
  6128  006EBC  D7B8               	goto	i2l250
  6129  006EBE  0A01               	xorlw	1	; case 23
  6130  006EC0  B4D8               	btfsc	status,2,c
  6131  006EC2  D7B8               	goto	i2l251
  6132  006EC4  0A08               	xorlw	8	; case 31
  6133  006EC6  B4D8               	btfsc	status,2,c
  6134  006EC8  D7B8               	goto	i2l252
  6135  006ECA                     i2l253:
  6136  006ECA  0012               	return	
  6137  006ECC                     __end_ofi2_inverte_saida:
  6138                           	opt stack 0
  6139                           pclatu	equ	0xFFB
  6140                           pclath	equ	0xFFA
  6141                           tblptru	equ	0xFF8
  6142                           tblptrh	equ	0xFF7
  6143                           tblptrl	equ	0xFF6
  6144                           tablat	equ	0xFF5
  6145                           prodh	equ	0xFF4
  6146                           prodl	equ	0xFF3
  6147                           intcon	equ	0xFF2
  6148                           intcon2	equ	0xFF1
  6149                           intcon3	equ	0xFF0
  6150                           postinc0	equ	0xFEE
  6151                           fsr0h	equ	0xFEA
  6152                           fsr0l	equ	0xFE9
  6153                           wreg	equ	0xFE8
  6154                           postdec1	equ	0xFE5
  6155                           fsr1h	equ	0xFE2
  6156                           fsr1l	equ	0xFE1
  6157                           indf2	equ	0xFDF
  6158                           fsr2h	equ	0xFDA
  6159                           fsr2l	equ	0xFD9
  6160                           status	equ	0xFD8
  6161                           
  6162 ;; *************** function _ReadUSART *****************
  6163 ;; Defined at:
  6164 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\pic18\plib\USART\uread.c"
  6165 ;; Parameters:    Size  Location     Type
  6166 ;;		None
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;  data            1    0[COMRAM] unsigned char 
  6169 ;; Return value:  Size  Location     Type
  6170 ;;                  1    wreg      unsigned char 
  6171 ;; Registers used:
  6172 ;;		wreg, status,2, status,0
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6178 ;;      Params:         0       0       0       0       0       0       0       0       0
  6179 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6180 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6181 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6182 ;;Total ram usage:        1 bytes
  6183 ;; Hardware stack levels used:    1
  6184 ;; This function calls:
  6185 ;;		Nothing
  6186 ;; This function is called by:
  6187 ;;		_interrupcao
  6188 ;; This function uses a non-reentrant model
  6189 ;;
  6190                           
  6191                           	psect	text28
  6192  006776                     __ptext28:
  6193                           	opt stack 0
  6194  006776                     _ReadUSART:
  6195                           	opt stack 23
  6196                           
  6197                           ;incstack = 0
  6198  006776  0EF2               	movlw	242
  6199  006778  1615               	andwf	_USART_Status,f,c
  6200  00677A  ACAB               	btfss	4011,6,c	;volatile
  6201  00677C  D003               	goto	i2l656
  6202  00677E  9015               	bcf	_USART_Status,0,c
  6203  006780  B0AB               	btfsc	4011,0,c	;volatile
  6204  006782  8015               	bsf	_USART_Status,0,c
  6205  006784                     i2l656:
  6206  006784  B4AB               	btfsc	4011,2,c	;volatile
  6207  006786  8415               	bsf	_USART_Status,2,c
  6208  006788  B2AB               	btfsc	4011,1,c	;volatile
  6209  00678A  8615               	bsf	_USART_Status,3,c
  6210  00678C  CFAE F022          	movff	4014,ReadUSART@data	;volatile
  6211  006790  5022               	movf	ReadUSART@data,w,c
  6212  006792  0012               	return	
  6213  006794                     __end_of_ReadUSART:
  6214                           	opt stack 0
  6215                           pclatu	equ	0xFFB
  6216                           pclath	equ	0xFFA
  6217                           tblptru	equ	0xFF8
  6218                           tblptrh	equ	0xFF7
  6219                           tblptrl	equ	0xFF6
  6220                           tablat	equ	0xFF5
  6221                           prodh	equ	0xFF4
  6222                           prodl	equ	0xFF3
  6223                           intcon	equ	0xFF2
  6224                           intcon2	equ	0xFF1
  6225                           intcon3	equ	0xFF0
  6226                           postinc0	equ	0xFEE
  6227                           fsr0h	equ	0xFEA
  6228                           fsr0l	equ	0xFE9
  6229                           wreg	equ	0xFE8
  6230                           postdec1	equ	0xFE5
  6231                           fsr1h	equ	0xFE2
  6232                           fsr1l	equ	0xFE1
  6233                           indf2	equ	0xFDF
  6234                           fsr2h	equ	0xFDA
  6235                           fsr2l	equ	0xFD9
  6236                           status	equ	0xFD8
  6237                           pclatu	equ	0xFFB
  6238                           pclath	equ	0xFFA
  6239                           tblptru	equ	0xFF8
  6240                           tblptrh	equ	0xFF7
  6241                           tblptrl	equ	0xFF6
  6242                           tablat	equ	0xFF5
  6243                           prodh	equ	0xFF4
  6244                           prodl	equ	0xFF3
  6245                           intcon	equ	0xFF2
  6246                           intcon2	equ	0xFF1
  6247                           intcon3	equ	0xFF0
  6248                           postinc0	equ	0xFEE
  6249                           fsr0h	equ	0xFEA
  6250                           fsr0l	equ	0xFE9
  6251                           wreg	equ	0xFE8
  6252                           postdec1	equ	0xFE5
  6253                           fsr1h	equ	0xFE2
  6254                           fsr1l	equ	0xFE1
  6255                           indf2	equ	0xFDF
  6256                           fsr2h	equ	0xFDA
  6257                           fsr2l	equ	0xFD9
  6258                           status	equ	0xFD8
  6259                           
  6260                           	psect	rparam
  6261  0000                     pclatu	equ	0xFFB
  6262                           pclath	equ	0xFFA
  6263                           tblptru	equ	0xFF8
  6264                           tblptrh	equ	0xFF7
  6265                           tblptrl	equ	0xFF6
  6266                           tablat	equ	0xFF5
  6267                           prodh	equ	0xFF4
  6268                           prodl	equ	0xFF3
  6269                           intcon	equ	0xFF2
  6270                           intcon2	equ	0xFF1
  6271                           intcon3	equ	0xFF0
  6272                           postinc0	equ	0xFEE
  6273                           fsr0h	equ	0xFEA
  6274                           fsr0l	equ	0xFE9
  6275                           wreg	equ	0xFE8
  6276                           postdec1	equ	0xFE5
  6277                           fsr1h	equ	0xFE2
  6278                           fsr1l	equ	0xFE1
  6279                           indf2	equ	0xFDF
  6280                           fsr2h	equ	0xFDA
  6281                           fsr2l	equ	0xFD9
  6282                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    117
    Data        10
    BSS         109
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     32      75
    BANK0           160     22      98
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sendr@st	PTR unsigned char  size(2) Largest target is 20
		 -> icm(CODE[15]), icg(CODE[9]), icr(CODE[9]), icn(CODE[17]), 
		 -> icb(CODE[9]), icp(CODE[3]), icms(CODE[19]), icgs(CODE[20]), 
		 -> icrs(CODE[11]), atc(CODE[5]), 


Critical Paths under _main in COMRAM

    _taxa_serial->___lldiv
    _clock_int_48MHz->___lwdiv
    ___lwdiv->___awmod
    _bt_ini->_tempo_ms
    _configBR6->_tempo_ms
    _resetBT->_tempo_ms
    _ATC->_tempo_ms
    _tempo_ms->___wmul
    _sendr->_sputc

Critical Paths under _interrupcao in COMRAM

    _interrupcao->i2_inverte_saida
    _interrupcao->i2_nivel_alto
    _interrupcao->i2_nivel_baixo

Critical Paths under _main in BANK0

    _main->_taxa_serial
    _taxa_serial->___lldiv
    _clock_int_48MHz->___lwdiv

Critical Paths under _interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcao in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcao in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcao in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcao in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcao in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupcao in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupcao in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   54380
                                             21 BANK0      1     1      0
                             _bt_ini
                    _clock_int_48MHz
                     _escreve_eeprom
               _habilita_interrupcao
                      _inverte_saida
                          _le_eeprom
                      _modoAttention
                         _modoNormal
                              _sputc
                             _swputc
                        _taxa_serial
                           _tempo_ms
 ---------------------------------------------------------------------------------
 (1) _taxa_serial                                         16    12      4     568
                                              5 BANK0     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     395
                                             20 COMRAM     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _swputc                                               1     1      0      22
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _habilita_interrupcao                                 4     2      2      86
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _clock_int_48MHz                                      0     0      0    1457
                            ___awmod
                            ___lwdiv
                          _le_eeprom
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1011
                                             27 COMRAM     5     1      4
                                              0 BANK0      3     3      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     424
                                             20 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _bt_ini                                               1     1      0   30480
                                             30 COMRAM     1     1      0
                          _configBR6
                     _escreve_eeprom
                      _inverte_saida
                          _le_eeprom
                              _sendr
                              _sputc
                           _tempo_ms
 ---------------------------------------------------------------------------------
 (1) _le_eeprom                                            1     1      0      22
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _escreve_eeprom                                       2     1      1     492
                                             20 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _configBR6                                            0     0      0   22577
                      _inverte_saida
                      _modoAttention
                         _modoNormal
                              _sendr
                           _tempo_ms
 ---------------------------------------------------------------------------------
 (1) _modoNormal                                           0     0      0    7605
                        _nivel_baixo
                            _resetBT
 ---------------------------------------------------------------------------------
 (2) _resetBT                                              0     0      0    7367
                      _inverte_saida
                              _sendr
                           _tempo_ms
 ---------------------------------------------------------------------------------
 (2) _nivel_baixo                                          4     2      2     238
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _modoAttention                                        0     0      0    7605
                                _ATC
                         _nivel_alto
 ---------------------------------------------------------------------------------
 (2) _nivel_alto                                           4     2      2     238
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ATC                                                  0     0      0    7367
                      _inverte_saida
                              _sendr
                           _tempo_ms
 ---------------------------------------------------------------------------------
 (1) _tempo_ms                                             4     2      2    4131
                                             26 COMRAM     4     2      2
                        _Delay1KTCYx
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     799
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _sendr                                                4     2      2    1346
                                             23 COMRAM     4     2      2
                              _sputc
 ---------------------------------------------------------------------------------
 (1) _sputc                                                3     3      0      22
                                             20 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _inverte_saida                                        4     2      2    1890
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _interrupcao                                         16    16      0     349
                                              4 COMRAM    16    16      0
                          _ReadUSART
                    i2_inverte_saida
                       i2_nivel_alto
                      i2_nivel_baixo
 ---------------------------------------------------------------------------------
 (8) i2_nivel_baixo                                        4     2      2     126
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i2_nivel_alto                                         4     2      2     126
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i2_inverte_saida                                      4     2      2      74
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _bt_ini
     _configBR6
       _inverte_saida
       _modoAttention
         _ATC
           _inverte_saida
           _sendr
             _sputc
           _tempo_ms
             _Delay1KTCYx
             ___wmul
         _nivel_alto
       _modoNormal
         _nivel_baixo
         _resetBT
           _inverte_saida
           _sendr
             _sputc
           _tempo_ms
             _Delay1KTCYx
             ___wmul
       _sendr
         _sputc
       _tempo_ms
         _Delay1KTCYx
         ___wmul
     _escreve_eeprom
     _inverte_saida
     _le_eeprom
     _sendr
       _sputc
     _sputc
     _tempo_ms
       _Delay1KTCYx
       ___wmul
   _clock_int_48MHz
     ___awmod
     ___lwdiv
       ___awmod (ARG)
     _le_eeprom
   _escreve_eeprom
   _habilita_interrupcao
   _inverte_saida
   _le_eeprom
   _modoAttention
     _ATC
       _inverte_saida
       _sendr
         _sputc
       _tempo_ms
         _Delay1KTCYx
         ___wmul
     _nivel_alto
   _modoNormal
     _nivel_baixo
     _resetBT
       _inverte_saida
       _sendr
         _sputc
       _tempo_ms
         _Delay1KTCYx
         ___wmul
   _sputc
   _swputc
   _taxa_serial
     ___lldiv
   _tempo_ms
     _Delay1KTCYx
     ___wmul

 _interrupcao (ROOT)
   _ReadUSART
   i2_inverte_saida
   i2_nivel_alto
   i2_nivel_baixo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     16      62       5       61.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     20      4B       1       78.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AD      20        0.0%
DATA                 0      0      AD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Mon Jan 12 16:38:00 2015

                            _G 0045                              _R 0042                              _c 0001  
                            _e 0048                              _i 000F                              _k 0019  
                            _m 001A                              _n 001B                              _w 0013  
                            _y 0020                              _z 0021                             _Fe 0044  
                           _c1 0016                             _po 0049                             _rr 004A  
                           _ru 004B            ___wmul@multiplicand 0038           __end_ofi2_nivel_alto 7102  
            ??_clock_int_48MHz 0042                            l201 7230                            l210 7382  
                          l211 7388                            l220 73C2                            l140 6C7E  
                          l213 7398                            l205 736A                            l222 73D2  
                          l214 739E                            l142 6C84                            l150 6D1A  
                          l223 73D8                            l215 73A4                            l207 7370  
                          l143 6C8A                            l240 6EF8                            l232 6ECE  
                          l224 73DE                            l216 73AA                            l208 7376  
                          l144 6C90                            l241 6EFE                            l225 73E4  
                          l217 73B0                            l209 737C                            l145 6C96  
                          l250 6F34                            l242 6F04                            l234 6ED4  
                          l226 73EA                            l218 73B6                            l146 6C9C  
                          l251 6F3A                            l243 6F0A                            l235 6EDA  
                          l219 73BC                            l147 6CA2                            l252 6F40  
                          l244 6F10                            l236 6EE0                            l180 710A  
                          l228 749C                            l148 6CA8                            l245 6F16  
                          l237 6EE6                            l253 6FD0                            l181 7110  
                          l149 6CAC                            l246 6F1C                            l238 6EEC  
                          l190 7148                            l182 7116                            l502 68D8  
                          l247 6F22                            l239 6EF2                            l191 714E  
                          l183 711C                            l248 6F28                            l192 7154  
                          l184 7122                            l249 6F2E                            l193 715A  
        __end_of_inverte_saida 6FD2                            l186 7130                            l178 7104  
                          l195 7168                            l187 7136                            l196 716E  
                          l188 713C                            l508 6AC8                            l197 7174  
                          l189 7142                            l286 692A                            l198 717A  
                          l199 7180                            l367 67B0                            l391 6744  
                          l623 769A                            l376 696E                            l539 7FFE  
                          l397 67BA                            l871 6754                            _ATC 681C  
                          _PR2 000FCB                            _REG 0046                            _icb 106F  
                          _atc 108A                            _icg 1078                            _icm 1055  
                          _icn 1044                            _icp 108F                            _icr 1081  
                          _ind 0018                   ___awmod@sign 003C        __end_ofi2_inverte_saida 6ECC  
                          prod 000FF3                            wreg 000FE8          __end_ofi2_nivel_baixo 7368  
                         ?_ATC 0022                           l1104 6DB4                           l3011 6AAE  
                         l1173 6B32                           l3007 6A94                           l3071 6B84  
                         l3143 6CB2                           l3411 7E8E                           l3403 7E5A  
                         l3091 6BCE                           l3083 6BB6                           l3075 6B96  
                         l3067 6B68                           l3237 7AC8                           l3077 6B9E  
                         l3407 7E74                           l3351 7D46                           l3343 7D12  
                         l3079 6BA2                           l3087 6BC0                           l3353 7D52  
                         l3337 7CEC                           l4241 6D64                           l4401 7624  
                         l3435 7F14                           l3443 7F48                           l3347 7D2C  
                         l3429 7EEE                           l4261 6AFA                           l4237 6D50  
                         l4405 762C                           l4413 7650                           l4333 74EC  
                         l2911 69E8                           l2903 6942                           l3463 7FA4  
                         l3439 7F2E                           l3287 7BDA                           l4271 6B24  
                         l4263 6AFE                           l4239 6D60                           l4415 765E  
                         l3473 7FE4                           l3385 7DFA                           l4249 6DA2  
                         l4345 7532                           l2907 69C2                           l2923 7186  
                         l2915 7128                           l4259 6AEE                           l4419 7678  
                         l4355 7562                           l4339 750E                           l2941 738E  
                         l3469 7FCA                           l4381 75D2                           l4373 75BC  
                         l2919 7160                           l2943 73C8                           l3399 7E40  
                         l4711 6CD6                           l4359 7582                           l2929 718E  
                         l4721 7428                           l2945 73F0                           l4713 6CF2  
                         l4393 760A                           l4377 75CA                           l4369 75B0  
                         l4723 71A6                           l4715 6CFC                           l4387 75E8  
                         l4725 71BC                           l2949 73FA                           l4717 6D0C  
                         l4397 7616                           l4719 7412                           l2889 6F46  
                         l2993 68C4                           l2899 6938                           _LATA 000F89  
                         u1270 67C8                           _LATB 000F8A                           _LATC 000F8B  
                         u1284 67D6                           u1285 67D2                           u1278 67CA  
                         u2517 6756                           _flag 0005                           _icgs 101D  
                         _icms 1031                           _icrs 1064                           _main 749E  
                         _temp 001D                           _time 00A8                           fsr0h 000FEA  
                         fsr1h 000FE2                           fsr0l 000FE9                           fsr2h 000FDA  
                         fsr1l 000FE1                           indf2 000FDF                           fsr2l 000FD9  
      __size_of_escreve_eeprom 0022                           pclat 000FFA                           prodh 000FF4  
                         prodl 000FF3                           start 1018                          ??_ATC 0040  
            inverte_saida@pino 0036                    _Delay1KTCYx 6750                          ?_main 0022  
                        _ADRES 000FC3                          _EEADR 000FA9                __end_of___awmod 6BD8  
              __end_of___lldiv 6DC6                          _T0CON 000FD5                          _T2CON 000FCA  
              __end_of___lwdiv 6B3C                          i2l201 7100                          i2l210 724C  
                        i2l211 7252                          i2l220 728C                          i2l213 7262  
                        i2l205 7234                          i2l222 729C                          i2l214 7268  
                        i2l223 72A2                          i2l215 726E                          i2l207 723A  
                        i2l240 6DF2                          i2l232 6DC8                          i2l224 72A8  
                        i2l216 7274                          i2l208 7240                          i2l241 6DF8  
                        i2l225 72AE                          i2l217 727A                          i2l209 7246  
                        i2l250 6E2E                          i2l242 6DFE                          i2l234 6DCE  
                        i2l226 72B4                          i2l218 7280                          i2l251 6E34  
                        i2l243 6E04                          i2l235 6DD4                          i2l219 7286  
                        i2l252 6E3A                          i2l244 6E0A                          i2l236 6DDA  
                        i2l180 6FDA                          i2l228 7366                          i2l245 6E10  
                        i2l237 6DE0                          i2l253 6ECA                          i2l181 6FE0  
                        i2l246 6E16                          i2l238 6DE6                          i2l190 7018  
                        i2l182 6FE6                          i2l247 6E1C                          i2l239 6DEC  
                        i2l191 701E                          i2l183 6FEC                          i2l248 6E22  
                        i2l192 7024                          i2l184 6FF2                          i2l249 6E28  
                        i2l193 702A                          i2l186 7000                          i2l178 6FD4  
                        i2l602 77E8                          i2l195 7038                          i2l187 7006  
                        i2l196 703E                          i2l188 700C                          i2l197 7044  
                        i2l189 7012                          i2l198 704A                          i2l614 7958  
                        i2l199 7050                          i2l656 6784                          _RCREG 000FAE  
                        _RCSTA 000FAB                          _REGad 0047                          _TMR0H 000FD7  
                        _TMR1H 000FCF                          _TMR0L 000FD6                          _TMR3H 000FB3  
                        _TMR1L 000FCE                          _TMR3L 000FB2                          _SPBRG 000FAF  
                        _TRISA 000F92                          _TRISB 000F93                          _TRISC 000F94  
                        _TXREG 000FAD                          _TXSTA 000FAC                          _flagb 000B  
                        _flagc 000D                          _pisca 0011                          _sendr 69B8  
                        _valor 001E                          _sputc 67B6                __end_of_resetBT 6898  
                        tablat 000FF5                          status 000FD8  __size_of_habilita_interrupcao 00A4  
              __initialization 68DA                   ?_interrupcao 0022                   __end_of_icgs 1031  
                 __end_of_icms 1044                   __end_of_icrs 106F                   __end_of_main 76BA  
                       ??_main 00C1                  __activetblptr 000002               ?i2_inverte_saida 0022  
                 ?_nivel_baixo 0036                         _ADCON0 000FC2                         _ADCON1 000FC1  
                       _ADCON2 000FC0                         _ADRESH 000FC4                         _EEDATA 000FA8  
                       _CCPR1L 000FBE                         _CCPR2L 000FBB                         _EECON1 000FA6  
                       _EECON2 000FA7                         ?_sendr 0039                         ?_sputc 0022  
                       i2l3503 7056                         i2l3521 7258                         i2l3523 7292  
                       i2l3509 705E                         i2l3525 72BA                         i2l3543 6E40  
                       i2l3711 772A                         i2l3529 72C4                         i2l3713 7736  
                       i2l3723 778A                         i2l3707 7706                         i2l3725 7796  
                       i2l3717 775A                         i2l3495 6FF8                         i2l3719 7766  
                       i2l3727 779C                         i2l3761 787E                         i2l3745 780E  
                       i2l3499 7030                         i2l4731 72F2                         i2l4733 7076  
                       i2l3749 783C                         i2l4735 708C                         i2l3783 78EA  
                       i2l3775 78C4                         i2l3767 789E                         i2l4729 72DC  
                       i2l3787 78FA                         i2l3795 7920                         i2l3797 7944  
           __size_of_ReadUSART 001E                         _SPBRGH 000FB0                   ?_taxa_serial 00B1  
        __size_ofi2_nivel_alto 0130                         ___wmul 67E2                      ??___awmod 003A  
                       _flagA4 0007                         _flagA5 0009                         _flagBD 00A4  
                       _chegou 0003                      ??___lldiv 003E                         _bt_ini 7992  
                    ??___lwdiv 0041                         _comand 0060                         clear_0 68E0  
                       clear_1 68EC                ___awmod@divisor 0038                ___awmod@counter 003B  
                       _vorbei 00AA                         _swputc 6740                   __pdataCOMRAM 0042  
             __end_of_tempo_ms 6964                   __mediumconst 0000                      ??_resetBT 0040  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
                       sputc@c 0038                     __accesstop 0060        __end_of__initialization 6912  
                 i2_nivel_alto 6FD2                 _escreve_eeprom 6794                _clock_int_48MHz 6964  
               __pcstackCOMRAM 0022                  __end_of_sendr 6A10                  __end_of_sputc 67E2  
            __end_of_ReadUSART 6794       habilita_interrupcao@tipo 0036         __size_of_modoAttention 0042  
           __size_of_configBR6 005A                  ReadUSART@data 0022             __size_of_le_eeprom 0014  
                      ??_sendr 003B                        ??_sputc 0036         __end_of_escreve_eeprom 67B6  
                   __pbssBANK0 0060                        ?___wmul 0036                        ?_bt_ini 0022  
         __size_of_interrupcao 698A                        _CCP1CON 000FBD                        _CCP2CON 000FBA  
                 ?_Delay1KTCYx 0022                        _BAUDCON 000FB8                        ?_swputc 0022  
         __size_of_nivel_baixo 0136                ?_escreve_eeprom 0036        __end_of_clock_int_48MHz 69B8  
                _modoAttention 6898         __size_of_inverte_saida 0106                        __Hparam 0000  
                      __Lparam 0000              __end_of_configBR6 6A6A                      ?_tempo_ms 003C  
       __size_ofi2_nivel_baixo 0136              __end_of_le_eeprom 6776           __size_of_taxa_serial 00A0  
                      ___awmod 6B3C                        ___lldiv 6D1C                __size_of___wmul 003A  
                      ___lwdiv 6ACA                   __psmallconst 101C                __size_of_bt_ini 066E  
                      __pcinit 68DA                        __ramtop 0800                        __ptext0 749E  
                      __ptext1 6BD8                        __ptext2 6D1C                        __ptext3 6740  
                      __ptext4 6C78                        __ptext5 6964                        __ptext6 6ACA  
                      __ptext7 6B3C                        __ptext8 7992                        __ptext9 6762  
                      _comando 007E                      _T0CONbits 000FD5                   __size_of_ATC 003E  
                    _T1CONbits 000FCD                __size_of_swputc 0010                      _T2CONbits 000FCA  
 __end_of_habilita_interrupcao 6D1C                      _T3CONbits 000FB1               ___awmod@dividend 0036  
                   _modoNormal 6A6A                        _resetBT 685A                 __pintcode_body 76BA  
         end_of_initialization 6912                     _nivel_alto 7102                  __Lmediumconst 0000  
                      int_func 76BA                 ?_modoAttention 0022                ___lldiv@divisor 003A  
                      sendr@st 0039                ___lldiv@counter 00B0                     ??_tempo_ms 003E  
                    _RCSTAbits 000FAB                        postdec1 000FE5                        postinc0 000FEE  
            i2nivel_baixo@pino 0022                      _PORTAbits 000F80                      _PORTBbits 000F81  
                    _PORTCbits 000F82                      _PORTDbits 000F83                      _PORTEbits 000F84  
                      swputc@c 0036                  _inverte_saida 6ECC                      _TRISAbits 000F92  
                    _TRISBbits 000F93                      _TRISCbits 000F94                      _TRISDbits 000F95  
                i2_nivel_baixo 7232               ?_clock_int_48MHz 0022       __size_ofi2_inverte_saida 0106  
                    _TXSTAbits 000FAC                 __end_of___wmul 681C                    _BAUDCONbits 000FB8  
                __pidataCOMRAM 6736                 __end_of_bt_ini 8000                 ?_inverte_saida 0036  
         __size_of_Delay1KTCYx 0012                    ?_modoNormal 0022                 __end_of_swputc 6750  
          start_initialization 68DA                      _ReadUSART 6776                    __end_of_ATC 685A  
               ?i2_nivel_baixo 0022                    __end_of_icb 1078                    __end_of_atc 108F  
                  __end_of_icg 1081                    __end_of_icm 1064                    __end_of_icn 1055  
                  __end_of_icp 1092                    __end_of_icr 108A                ??_modoAttention 0040  
                  ?_nivel_alto 0036           _habilita_interrupcao 6C78                       ??___wmul 003A  
                     ??_bt_ini 0040                       ??_swputc 0036                    __pbssCOMRAM 0001  
                   ?_ReadUSART 0022               ??_escreve_eeprom 0037                  __pcstackBANK0 00AC  
              Delay1KTCYx@unit 0036          ?_habilita_interrupcao 0036               ___lwdiv@dividend 003D  
                ??_interrupcao 0026            __size_of_modoNormal 0060              ??i2_inverte_saida 0024  
                    __pintcode 1008                       ?___awmod 0036                       ?___lldiv 0036  
                     ?___lwdiv 003D              __size_of_tempo_ms 0048                      _configBR6 6A10  
                    _flagstart 00A6                ??_inverte_saida 0038                      _le_eeprom 6762  
          __size_of_nivel_alto 0130                    __smallconst 101C                ??i2_nivel_baixo 0024  
                ??_nivel_baixo 0038                       ?_resetBT 0022               ___lwdiv@quotient 00AD  
               __size_of_sendr 0058                 __size_of_sputc 002C                 ___wmul@product 003A  
                     _IPR1bits 000F9F                       _PIE1bits 000F9D                       _PIE2bits 000FA0  
                ??_taxa_serial 00B5                       _PIR1bits 000F9E                       _RCONbits 000FD0  
                    _resultado 009C                     ?_configBR6 0022             escreve_eeprom@dado 0036  
                   ?_le_eeprom 0022            __end_of_interrupcao 7992                     _ADCON0bits 000FC2  
                   _ADCON2bits 000FC0              ___wmul@multiplier 0036               i2nivel_alto@pino 0022  
                  ??_ReadUSART 0022                    _INTCON2bits 000FF1                    _INTCON3bits 000FF0  
                    copy_data0 6906            i2inverte_saida@pino 0022            __end_of_nivel_baixo 749E  
                ?i2_nivel_alto 0022         ??_habilita_interrupcao 0038                     _EECON1bits 000FA6  
                     __Hrparam 0000                nivel_baixo@pino 0036                       __Lrparam 0000  
             __size_of___awmod 009C            __end_of_taxa_serial 6C78               __size_of___lldiv 00AA  
             __size_of___lwdiv 0072                   ??_modoNormal 0040                  _tensao_lida16 00A0  
              ___lwdiv@divisor 003F                ___lwdiv@counter 00AC               __size_of_resetBT 003E  
                     __ptext10 6794                       __ptext11 6A10                       __ptext20 6750  
                     __ptext12 6A6A                       __ptext21 69B8                       __ptext13 685A  
                     __ptext22 67B6                       __ptext14 7368                       __ptext23 6ECC  
                     __ptext15 6898                       __ptext16 7102                       __ptext25 7232  
                     __ptext17 681C                       __ptext26 6FD2                       __ptext18 691C  
                     __ptext27 6DC6                       __ptext19 67E2                       __ptext28 6776  
                     _endereco 0017                 ??i2_nivel_alto 0024                   ??_nivel_alto 0038  
              taxa_serial@taxa 00B1                  __size_of_main 021C                       _valorbcd 001F  
     __size_of_clock_int_48MHz 0054                    _interrupcao 1008                      tempo_ms@i 003C  
                     _tempo_ms 691C                      tempo_ms@k 003E             __end_of_modoNormal 6ACA  
            le_eeprom@endereco 0036                       _numquant 001C                  ??_Delay1KTCYx 0036  
                  ??_configBR6 0040                    ??_le_eeprom 0036             __end_of_nivel_alto 7232  
                   _INTCONbits 000FF2                    _nivel_baixo 7368         taxa_serial@baud_sanusb 00BD  
              i2_inverte_saida 6DC6                       intlevel2 0000                 nivel_alto@pino 0036  
             ___lldiv@dividend 0036          __end_of_modoAttention 68DA                    _taxa_serial 6BD8  
       escreve_eeprom@endereco 0037               ___lldiv@quotient 00AC            __end_of_Delay1KTCYx 6762  
                   _WDTCONbits 000FD1                   _USART_Status 0015  
